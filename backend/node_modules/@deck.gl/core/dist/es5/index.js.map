{"version":3,"sources":["../../src/index.js"],"names":["experimental","BinSorter","linearScale","getLinearScale","quantizeScale","getQuantizeScale","defaultColorRange","flattenVertices","fillArray"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAGA;;AAGA;;AAGA;;AAEA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAEA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAGA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AAGA;;;;AAtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AAGA;AAGA;AAGA;AAQA;AAIA;AAaA;AAGA;AAKA;AAEA;AAKA;AAKA;AAE4D;AAa5D;AACA;AACO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAATA,kBAD0B;AAE1BC,EAAAA,WAAW,EAAXA,uBAF0B;AAG1BC,EAAAA,cAAc,EAAdA,0BAH0B;AAI1BC,EAAAA,aAAa,EAAbA,yBAJ0B;AAK1BC,EAAAA,gBAAgB,EAAhBA,4BAL0B;AAM1BC,EAAAA,iBAAiB,EAAjBA,6BAN0B;AAO1BC,EAAAA,eAAe,EAAfA,wBAP0B;AAQ1BC,EAAAA,SAAS,EAATA;AAR0B,CAArB","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n/* eslint-disable max-len */\n\n// Intialize globals, check version\nimport './lib/init';\n\n// Import shaderlib to make sure shader modules are initialized\nimport './shaderlib';\n\n// Core Library\nexport {COORDINATE_SYSTEM} from './lib/constants';\n\n// Experimental Pure JS (non-React) bindings\nexport {default as Deck} from './lib/deck';\n\nexport {default as LayerManager} from './lib/layer-manager';\nexport {default as AttributeManager} from './lib/attribute-manager';\nexport {default as Layer} from './lib/layer';\nexport {default as CompositeLayer} from './lib/composite-layer';\n\n// Viewports\nexport {default as Viewport} from './viewports/viewport';\nexport {default as WebMercatorViewport} from './viewports/web-mercator-viewport';\n\n// Shader modules\nexport {default as project} from './shaderlib/project/project';\nexport {default as project64} from './shaderlib/project64/project64';\nexport {default as lighting} from './shaderlib/lighting/lighting';\n\nexport {default as View} from './views/view';\nexport {default as MapView} from './views/map-view';\nexport {default as FirstPersonView} from './views/first-person-view';\nexport {default as ThirdPersonView} from './views/third-person-view';\nexport {default as OrbitView} from './views/orbit-view';\nexport {default as PerspectiveView} from './views/perspective-view';\nexport {default as OrthographicView} from './views/orthographic-view';\n\n// Controllers\nexport {default as Controller} from './controllers/controller';\nexport {default as MapController} from './controllers/map-controller';\n// Experimental Controllers\nexport {default as _FirstPersonController} from './controllers/first-person-controller';\nexport {default as _OrbitController} from './controllers/orbit-controller';\nexport {default as _OrthographicController} from './controllers/orthographic-controller';\n\n// EXPERIMENTAL EXPORTS\n\n// Experimental Effects (non-React) bindings\nexport {default as _EffectManager} from './experimental/lib/effect-manager';\nexport {default as _Effect} from './experimental/lib/effect';\nexport {default as _ReflectionEffect} from './experimental/reflection-effect/reflection-effect';\n\n// Eperimental Transitions\nexport {TRANSITION_EVENTS} from './controllers/transition-manager';\nexport {default as LinearInterpolator} from './transitions/linear-interpolator';\nexport {default as FlyToInterpolator} from './transitions/viewport-fly-to-interpolator';\n\n// Layer utilities\nexport {default as log} from './utils/log';\nimport {flattenVertices, fillArray} from './utils/flatten'; // Export? move to luma.gl or math.gl?\n\nimport {default as BinSorter} from './utils/bin-sorter';\nimport {defaultColorRange} from './utils/color-utils';\nimport {linearScale, getLinearScale, quantizeScale, getQuantizeScale} from './utils/scale-utils';\n\nexport {\n  default as _GPUGridAggregator\n} from './experimental/utils/gpu-grid-aggregation/gpu-grid-aggregator';\nexport {\n  pointToDensityGridData as _pointToDensityGridData\n} from './experimental/utils/gpu-grid-aggregation/grid-aggregation-utils';\n\n// Exports for layers\n// Experimental Features may change in minor version bumps, use at your own risk)\nexport const experimental = {\n  BinSorter,\n  linearScale,\n  getLinearScale,\n  quantizeScale,\n  getQuantizeScale,\n  defaultColorRange,\n  flattenVertices,\n  fillArray\n};\n"],"file":"index.js"}