{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","log","GL","AnimationLoop","createGLContext","trackContextState","setParameters","Stats","EventManager","assert","VENDOR_PREFIX","noop","PREFIX","CURSOR","GRABBING","GRAB","POINTER","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","onLoad","debug","drawPickingColors","_animate","defaultProps","Deck","constructor","props","Object","assign","viewManager","layerManager","effectManager","stats","_needsRedraw","initialViewState","interactiveState","_onClick","bind","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","_customRender","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","setProps","start","finalize","stop","eventManager","destroy","timeStart","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","needsRedraw","clearRedrawFlags","redraw","getViews","getViewports","rect","pickObject","x","y","radius","layerIds","selectedInfos","viewports","mode","depth","length","pickMultipleObjects","pickObjects","infos","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","clientWidth","clientHeight","autoResizeDrawingBuffer","onCreateContext","opts","onInitialize","onRender","Array","isArray","options","pos","event","offsetCenter","callback","firstInfo","find","info","index","srcEvent","_updateCursor","cursor","_updateAnimationProps","animationProps","context","_setGLContext","enable","copyState","blend","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","events","click","pointermove","pointerleave","onInteractiveStateChange","effect","addEffect","_drawLayers","oneSecondPassed","table","getStatsTable","reset","updateLayers","bump","redrawReason","drawLayers","pass","params","viewId","leftButton","rightButton"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport GL from 'luma.gl/constants';\nimport {AnimationLoop, createGLContext, trackContextState, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport VENDOR_PREFIX from '../utils/css-vendor-prefix';\n/* global document */\n\nfunction noop() {}\n\nconst PREFIX = VENDOR_PREFIX === '-webkit-' ? VENDOR_PREFIX : '';\n\nconst CURSOR = {\n  GRABBING: `${PREFIX}grabbing`,\n  GRAB: `${PREFIX}grab`,\n  POINTER: 'pointer'\n};\n\nconst getCursor = ({isDragging}) => (isDragging ? CURSOR.GRABBING : CURSOR.GRAB);\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  onLoad: noop,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this._needsRedraw = true;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onClick = this._onClick.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props._customRender) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n      this.animationLoop = this._createAnimationLoop(props);\n    }\n\n    this.setProps(props);\n\n    if (!props._customRender) {\n      this.animationLoop.start();\n    }\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  needsRedraw({clearRedrawFlags = true} = {}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    redraw = redraw || this.viewManager.needsRedraw({clearRedrawFlags});\n    redraw = redraw || this.layerManager.needsRedraw({clearRedrawFlags});\n    return redraw;\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth: 1\n    });\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.timeStart('deck.pickMultipleObjects');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth\n    });\n    this.stats.timeEnd('deck.pickMultipleObjects');\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layerIds,\n      viewports: this.getViewports({x, y, width, height})\n    });\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (canvas && (this.width !== canvas.clientWidth || this.height !== canvas.clientHeight)) {\n      this.width = canvas.clientWidth;\n      this.height = canvas.clientHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  _pickAndCallback(options) {\n    const pos = options.event.offsetCenter;\n    // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n    // assertion error when attempting to unproject the position.\n    if (!pos) {\n      return;\n    }\n\n    const radius = this.props.pickingRadius;\n    const selectedInfos = this.layerManager.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius,\n      viewports: this.getViewports(pos),\n      mode: options.mode,\n      depth: 1\n    });\n    if (options.callback && selectedInfos) {\n      const firstInfo = selectedInfos.find(info => info.index >= 0) || null;\n      // As per documentation, send null value when no valid object is picked.\n      options.callback(firstInfo, selectedInfos, options.event.srcEvent);\n    }\n  }\n\n  _updateCursor() {\n    this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  // Deep integration (Mapbox styles)\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (this.props._customRender) {\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    if (!this.props._customRender) {\n      this.eventManager = new EventManager(gl.canvas, {\n        events: {\n          click: this._onClick,\n          pointermove: this._onPointerMove,\n          pointerleave: this._onPointerLeave\n        }\n      });\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange\n    });\n\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {stats: this.stats});\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(animationProps = {}) {\n    const {gl} = this.layerManager.context;\n\n    // Log perf stats every second\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(3, table)();\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Check if we need to redraw\n    const redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    // Do the redraw\n    this.stats.bump('render-fps');\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      viewports: this.viewManager.getViewports(),\n      views: this.viewManager.getViews(),\n      redrawReason,\n      drawPickingColors: this.props.drawPickingColors // Debug picking, helps in framebuffered layers\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    this._drawLayers(animationProps);\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  // Route move events to layers. call the `onHover` prop of any picked layer,\n  // and `onLayerHover` is called directly from here with any picking info generated by `pickLayer`.\n  // @param {Object} event  A mjolnir.js event\n  _onClick(event) {\n    this._pickAndCallback({\n      callback: this.props.onLayerClick,\n      event,\n      mode: 'click'\n    });\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._pickAndCallback({\n      callback: this.props.onLayerHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this.layerManager.pickObject({\n      x: -1,\n      y: -1,\n      viewports: [],\n      radius: 1,\n      mode: 'hover'\n    });\n    if (this.props.onLayerHover) {\n      this.props.onLayerHover(null, [], event.srcEvent);\n    }\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}