{"version":3,"sources":["../../../../src/text-layer/multi-icon-layer/multi-icon-layer.js"],"names":["defaultProps","getShiftInQueue","x","shift","getLengthOfQueue","len","getAnchorX","anchorX","getAnchorY","anchorY","getPixelOffset","MultiIconLayer","Object","assign","vs","attributeManager","getAttributeManager","addInstanced","instancePixelOffset","size","transition","accessor","updateParams","changeFlags","updateTriggersChanged","invalidate","attribute","props","data","iconMapping","getIcon","value","i","object","icon","rect","shiftX","width","height","IconLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport vs from './multi-icon-layer-vertex.glsl';\n\nconst defaultProps = {\n  getShiftInQueue: x => x.shift || 0,\n  getLengthOfQueue: x => x.len || 1,\n  // 1: left, 0: middle, -1: right\n  getAnchorX: x => x.anchorX || 0,\n  // 1: top, 0: center, -1: bottom\n  getAnchorY: x => x.anchorY || 0,\n  getPixelOffset: [0, 0]\n};\n\nexport default class MultiIconLayer extends IconLayer {\n  getShaders() {\n    return Object.assign({}, super.getShaders(), {\n      vs\n    });\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n    const {changeFlags} = updateParams;\n\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.getAnchorX || changeFlags.updateTriggersChanged.getAnchorY)\n    ) {\n      this.getAttributeManager().invalidate('instanceOffsets');\n    }\n  }\n\n  calculateInstanceOffsets(attribute) {\n    const {\n      data,\n      iconMapping,\n      getIcon,\n      getAnchorX,\n      getAnchorY,\n      getLengthOfQueue,\n      getShiftInQueue\n    } = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const icon = getIcon(object);\n      const rect = iconMapping[icon] || {};\n      const len = getLengthOfQueue(object);\n      const shiftX = getShiftInQueue(object);\n\n      value[i++] = ((getAnchorX(object) - 1) * len) / 2 + rect.width / 2 + shiftX || 0;\n      value[i++] = (rect.height / 2) * getAnchorY(object) || 0;\n    }\n  }\n}\n\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n"],"file":"multi-icon-layer.js"}