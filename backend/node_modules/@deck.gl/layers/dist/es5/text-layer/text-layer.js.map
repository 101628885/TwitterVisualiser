{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_FONT_FAMILY","DEFAULT_COLOR","MISSING_CHAR_WIDTH","defaultProps","fp64","sizeScale","fontFamily","characterSet","DEFAULT_CHAR_SET","getText","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","props","oldProps","changeFlags","fontChanged","updateFontAtlas","dataChanged","updateTriggersChanged","all","transformStringToLetters","gl","context","scale","mapping","texture","setState","iconAtlas","iconMapping","info","Object","assign","object","data","state","length","transformedData","forEach","val","letters","Array","from","offsets","offsetLeft","letter","i","datum","index","len","frame","width","log","warn","push","accessor","textAnchor","hasOwnProperty","Error","alignmentBaseline","transitions","updateTriggers","MultiIconLayer","getSubLayerProps","id","getIcon","d","getShiftInQueue","getLetterOffset","getLengthOfQueue","getTextLength","_getAccessor","getAnchorX","getAnchorXFromTextAnchor","getAnchorY","getAnchorYFromAlignmentBaseline","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport {makeFontAtlas, DEFAULT_CHAR_SET} from './font-atlas';\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_FONT_FAMILY = 'Monaco, monospace';\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst MISSING_CHAR_WIDTH = 32;\n\nconst defaultProps = {\n  fp64: false,\n  sizeScale: 1,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  characterSet: DEFAULT_CHAR_SET,\n\n  getText: x => x.text,\n  getPosition: x => x.position,\n  getColor: DEFAULT_COLOR,\n  getSize: 32,\n  getAngle: 0,\n  getTextAnchor: 'middle',\n  getAlignmentBaseline: 'center',\n  getPixelOffset: [0, 0]\n};\n\nexport default class TextLayer extends CompositeLayer {\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged =\n      oldProps.fontFamily !== props.fontFamily || oldProps.characterSet !== props.characterSet;\n\n    if (fontChanged) {\n      this.updateFontAtlas(props.fontFamily, props.characterSet);\n    }\n\n    if (\n      changeFlags.dataChanged ||\n      fontChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  updateFontAtlas(fontFamily, characterSet) {\n    const {gl} = this.context;\n    const {scale, mapping, texture} = makeFontAtlas(gl, {fontFamily, characterSet});\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n  }\n\n  getPickingInfo({info}) {\n    return Object.assign(info, {\n      // override object with original data\n      object: info.object && info.object.object\n    });\n  }\n\n  transformStringToLetters() {\n    const {data, getText} = this.props;\n    const {iconMapping} = this.state;\n    if (!data || data.length === 0) {\n      return;\n    }\n    const transformedData = [];\n    data.forEach(val => {\n      const text = getText(val);\n      if (text) {\n        const letters = Array.from(text);\n        const offsets = [0];\n        let offsetLeft = 0;\n\n        letters.forEach((letter, i) => {\n          const datum = {text: letter, index: i, offsets, len: text.length, object: val};\n          const frame = iconMapping[letter];\n          if (frame) {\n            offsetLeft += frame.width;\n          } else {\n            log.warn(`Missing character: ${letter}`)();\n            offsetLeft += MISSING_CHAR_WIDTH;\n          }\n          offsets.push(offsetLeft);\n          transformedData.push(datum);\n        });\n      }\n    });\n\n    this.setState({data: transformedData});\n  }\n\n  getLetterOffset(datum) {\n    return datum.offsets[datum.index];\n  }\n\n  getTextLength(datum) {\n    return datum.offsets[datum.offsets.length - 1];\n  }\n\n  _getAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      return x => accessor(x.object);\n    }\n    return accessor;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    return x => {\n      const textAnchor =\n        typeof getTextAnchor === 'function' ? getTextAnchor(x.object) : getTextAnchor;\n      if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {\n        throw new Error(`Invalid text anchor parameter: ${textAnchor}`);\n      }\n      return TEXT_ANCHOR[textAnchor];\n    };\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    return x => {\n      const alignmentBaseline =\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(x.object)\n          : getAlignmentBaseline;\n      if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {\n        throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);\n      }\n      return ALIGNMENT_BASELINE[alignmentBaseline];\n    };\n  }\n\n  renderLayers() {\n    const {data, scale, iconAtlas, iconMapping} = this.state;\n\n    if (!iconMapping || !iconAtlas || !data) {\n      return null;\n    }\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      fp64,\n      sizeScale,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    return [\n      new MultiIconLayer(\n        this.getSubLayerProps({\n          id: 'text-multi-icon-layer',\n          data,\n          iconAtlas,\n          iconMapping,\n          getIcon: d => d.text,\n          getPosition: d => getPosition(d.object),\n          getShiftInQueue: d => this.getLetterOffset(d),\n          getLengthOfQueue: d => this.getTextLength(d),\n          getColor: this._getAccessor(getColor),\n          getSize: this._getAccessor(getSize),\n          getAngle: this._getAccessor(getAngle),\n          getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n          getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n          getPixelOffset: this._getAccessor(getPixelOffset),\n          fp64,\n          sizeScale: sizeScale * scale,\n          transitions: transitions && {\n            getPosition: transitions.getPosition,\n            getAngle: transitions.getAngle,\n            getColor: transitions.getColor,\n            getSize: transitions.getSize,\n            getPixelOffset: updateTriggers.getPixelOffset\n          },\n          updateTriggers: {\n            getPosition: updateTriggers.getPosition,\n            getAngle: updateTriggers.getAngle,\n            getColor: updateTriggers.getColor,\n            getSize: updateTriggers.getSize,\n            getPixelOffset: updateTriggers.getPixelOffset,\n            getAnchorX: updateTriggers.getTextAnchor,\n            getAnchorY: updateTriggers.getAlignmentBaseline\n          }\n        })\n      )\n    ];\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}