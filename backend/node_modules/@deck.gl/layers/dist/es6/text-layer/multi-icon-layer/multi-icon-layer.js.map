{"version":3,"sources":["../../../../src/text-layer/multi-icon-layer/multi-icon-layer.js"],"names":["IconLayer","vs","defaultProps","getShiftInQueue","x","shift","getLengthOfQueue","len","getAnchorX","anchorX","getAnchorY","anchorY","getPixelOffset","MultiIconLayer","getShaders","Object","assign","initializeState","attributeManager","getAttributeManager","addInstanced","instancePixelOffset","size","transition","accessor","updateState","updateParams","changeFlags","updateTriggersChanged","invalidate","calculateInstanceOffsets","attribute","props","data","iconMapping","getIcon","value","i","object","icon","rect","shiftX","width","height","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport IconLayer from '../../icon-layer/icon-layer';\n\nimport vs from './multi-icon-layer-vertex.glsl';\n\nconst defaultProps = {\n  getShiftInQueue: x => x.shift || 0,\n  getLengthOfQueue: x => x.len || 1,\n  // 1: left, 0: middle, -1: right\n  getAnchorX: x => x.anchorX || 0,\n  // 1: top, 0: center, -1: bottom\n  getAnchorY: x => x.anchorY || 0,\n  getPixelOffset: [0, 0]\n};\n\nexport default class MultiIconLayer extends IconLayer {\n  getShaders() {\n    return Object.assign({}, super.getShaders(), {\n      vs\n    });\n  }\n\n  initializeState() {\n    super.initializeState();\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      instancePixelOffset: {\n        size: 2,\n        transition: true,\n        accessor: 'getPixelOffset'\n      }\n    });\n  }\n\n  updateState(updateParams) {\n    super.updateState(updateParams);\n    const {changeFlags} = updateParams;\n\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.getAnchorX || changeFlags.updateTriggersChanged.getAnchorY)\n    ) {\n      this.getAttributeManager().invalidate('instanceOffsets');\n    }\n  }\n\n  calculateInstanceOffsets(attribute) {\n    const {\n      data,\n      iconMapping,\n      getIcon,\n      getAnchorX,\n      getAnchorY,\n      getLengthOfQueue,\n      getShiftInQueue\n    } = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const icon = getIcon(object);\n      const rect = iconMapping[icon] || {};\n      const len = getLengthOfQueue(object);\n      const shiftX = getShiftInQueue(object);\n\n      value[i++] = ((getAnchorX(object) - 1) * len) / 2 + rect.width / 2 + shiftX || 0;\n      value[i++] = (rect.height / 2) * getAnchorY(object) || 0;\n    }\n  }\n}\n\nMultiIconLayer.layerName = 'MultiIconLayer';\nMultiIconLayer.defaultProps = defaultProps;\n"],"file":"multi-icon-layer.js"}