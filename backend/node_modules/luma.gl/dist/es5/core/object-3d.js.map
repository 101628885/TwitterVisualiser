{"version":3,"sources":["../../../src/core/object-3d.js"],"names":["Object3D","id","display","position","Vector3","rotation","scale","matrix","Matrix4","constructor","name","userData","length","update","setPosition","setRotation","setScale","updateMatrix","pos","rot","identity","translate","rotateXYZ","viewMatrix","modelMatrix","worldMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","parent","endPosition","set","endRotation","endScale","add","ch","children","i","transform"],"mappings":"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","sourcesContent":["import {uid} from '../utils';\nimport {Vector3, Matrix4} from 'math.gl';\nimport assert from '../utils/assert';\n\nexport default class Object3D {\n\n  constructor({id, display = true}) {\n    // model position, rotation, scale and all in all matrix\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n\n    // whether to display the object at all\n    this.id = id || uid(this.constructor.name);\n    this.display = true;\n    this.userData = {};\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  transform() {\n\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n}\n"],"file":"object-3d.js"}