{"version":3,"sources":["../../../src/multipass/multi-pass-renderer.js"],"names":["MultiPassRenderer","gl","props","Array","isArray","passes","Object","assign","id","renderState","RenderState","animationProps","reset","pass","render","CompositePass"],"mappings":";;;;;;;AAMA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,iB;;;AACnB,6BAAYC,EAAZ,EAAgBC,KAAhB,EAAuB;AAAA;;AAAA;;AACrBA,IAAAA,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuB;AAACG,MAAAA,MAAM,EAAEH;AAAT,KAAvB,GAAyCA,KAAjD;AACA,2FAAMD,EAAN,EAAUK,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAE;AAAL,KAAd,EAAkCN,KAAlC,CAAV;AACA,UAAKO,WAAL,GAAmB,IAAIC,oBAAJ,CAAgBT,EAAhB,EAAoBC,KAApB,CAAnB;AAHqB;AAItB;;;;2BAGMS,c,EAAgB;AACrB,WAAKF,WAAL,CAAiBG,KAAjB;AADqB,+BAEC,KAAKV,KAFN,CAEdG,MAFc;AAAA,UAEdA,MAFc,mCAEL,EAFK;AAAA;AAAA;AAAA;;AAAA;AAGrB,6BAAmBA,MAAnB,8HAA2B;AAAA,cAAhBQ,IAAgB;AACzBA,UAAAA,IAAI,CAACC,MAAL,CAAY,KAAKL,WAAjB,EAA8BE,cAA9B;AACD;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMtB;;;;EAd4CI,sB","sourcesContent":["//\n// A top-level composite render pass, that manages render state\n//\n// Attribution: This class and the multipass system were strongly inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport CompositePass from './composite-pass';\nimport RenderState from './render-state';\n\nexport default class MultiPassRenderer extends CompositePass {\n  constructor(gl, props) {\n    props = Array.isArray(props) ? {passes: props} : props;\n    super(gl, Object.assign({id: 'multi-pass'}, props));\n    this.renderState = new RenderState(gl, props);\n  }\n\n  // Override render() to just forward the call\n  render(animationProps) {\n    this.renderState.reset();\n    const {passes = []} = this.props;\n    for (const pass of passes) {\n      pass.render(this.renderState, animationProps);\n    }\n  }\n}\n"],"file":"multi-pass-renderer.js"}