{"version":3,"sources":["../../../../../../src/shadertools/src/modules/lighting/lighting.js"],"names":["vertexShader","commonShader","vertexShader1","fragmentShader","fragmentShader1","name","config","MAX_POINT_LIGHTS","getUniforms","lightingEnable","lightingAmbientColor","lightingDirection","lightingDirectionalColor","lightingPointLights","Object","assign","getDirectionalUniforms","getPointUniforms","color","direction","dir","Vector3","x","y","z","normalize","scale","directionalColor","r","g","b","points","Array","numberPoints","length","pointLocations","pointColors","enableSpecular","pointSpecularColors","point","position","diffuse","specular","pointColor","push","Number","Boolean","pointLocation","pointSpecularColor","vs","fs"],"mappings":"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","sourcesContent":["import {Vector3} from 'math.gl';\n\nimport commonShader from './lighting-common.glsl';\nimport vertexShader1 from './lighting-vertex.glsl';\nimport fragmentShader1 from './lighting-fragment.glsl';\n\nexport const vertexShader = `\\\n${commonShader}\n${vertexShader1}\n`;\n\nexport const fragmentShader = `\\\n${commonShader}\n${fragmentShader1}\n`;\n\nexport const name = 'lighting';\n\nexport const config = {\n  MAX_POINT_LIGHTS: 4\n};\n\n// Setup the lighting system: ambient, directional, point lights.\nexport function getUniforms({\n  lightingEnable = false,\n\n  // ambient light\n  lightingAmbientColor = [0.2, 0.2, 0.2],\n\n  // directional light\n  lightingDirection = [1, 1, 1],\n  lightingDirectionalColor = [0, 0, 0],\n\n  // point lights\n  lightingPointLights = []\n}) {\n  // Set light uniforms. Ambient, directional and point lights.\n  return Object.assign(\n    {\n      lightingEnable,\n      // Ambient\n      lightingAmbientColor\n    },\n    getDirectionalUniforms(lightingDirection),\n    getPointUniforms(lightingPointLights)\n  );\n}\n\nfunction getDirectionalUniforms({color, direction}) {\n  // Normalize lighting direction vector\n  const dir = new Vector3(direction.x, direction.y, direction.z)\n    .normalize()\n    .scale(-1, -1, -1);\n\n  return {\n    directionalColor: [color.r, color.g, color.b],\n    lightingDirection: [dir.x, dir.y, dir.z]\n  };\n}\n\nfunction getPointUniforms(points) {\n  points = points instanceof Array ? points : [points];\n  const numberPoints = points.length;\n  const pointLocations = [];\n  const pointColors = [];\n  const enableSpecular = [];\n  const pointSpecularColors = [];\n  for (const point of points) {\n    const {position, color, diffuse, specular} = point;\n    const pointColor = color || diffuse;\n\n    pointLocations.push(position.x, position.y, position.z);\n    pointColors.push(pointColor.r, pointColor.g, pointColor.b);\n\n    // Add specular color\n    enableSpecular.push(Number(Boolean(specular)));\n    if (specular) {\n      pointSpecularColors.push(specular.r, specular.g, specular.b);\n    } else {\n      pointSpecularColors.push(0, 0, 0);\n    }\n  }\n\n  return {\n    numberPoints,\n    pointLocation: pointLocations,\n    pointColor: pointColors,\n    enableSpecular,\n    pointSpecularColor: pointSpecularColors\n  };\n}\n\nexport default {\n  name,\n  vs: vertexShader,\n  fs: fragmentShader,\n  getUniforms\n};\n"],"file":"lighting.js"}