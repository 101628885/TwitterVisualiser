{"version":3,"sources":["../../../src/webgl-utils/webgl-types.js"],"names":["ERR_HEADLESSGL_LOAD","headlessTypes","headlessGL","Error","isBrowser","module","require","error","console","info","DummyType","global","WebGLRenderingContext","WebGLProgram","WebGLShader","WebGLBuffer","WebGLFramebuffer","WebGLRenderbuffer","WebGLTexture","WebGLUniformLocation","WebGLActiveInfo","WebGLShaderPrecisionFormat","webGLTypesAvailable","getWebGL2RenderingContext","WebGL2RenderingContextNotSupported","WebGL2RenderingContext","getImage","ImageNotSupported","Image"],"mappings":";;;;;;;AAUA;;AACA;;;;;;AAEO,IAAMA,mBAAmB,0OAAzB;;AAMA,IAAIC,aAAa,GAAG,IAApB;;;AACA,IAAIC,UAAU,GAAG,sBAAM;AAC5B,QAAM,IAAIC,KAAJ,CAAUH,mBAAV,CAAN;AACD,CAFM;;;;AAIP,IAAI,CAACI,kBAAL,EAAgB;AACd,MAAI;AACF,yBAAAF,UAAU,GAAGG,MAAM,CAACC,OAAP,CAAe,IAAf,CAAb;AACA,4BAAAL,aAAa,GAAGI,MAAM,CAACC,OAAP,CAAe,SAAf,CAAhB;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAaT,mBAAb;AACD;AACF;;IAEKU,S;;;;WAaFT,aAAa,IAAIU,e;iCAVnBC,qB;IAAAA,qB,sCAAwBF,S;6BACxBG,Y;IAAAA,Y,kCAAeH,S;4BACfI,W;IAAAA,W,iCAAcJ,S;4BACdK,W;IAAAA,W,iCAAcL,S;iCACdM,gB;IAAAA,gB,sCAAmBN,S;iCACnBO,iB;IAAAA,iB,sCAAoBP,S;6BACpBQ,Y;IAAAA,Y,kCAAeR,S;iCACfS,oB;IAAAA,oB,sCAAuBT,S;gCACvBU,e;IAAAA,e,qCAAkBV,S;iCAClBW,0B;IAAAA,0B,sCAA6BX,S;;;;;;;;;;;;AAGxB,IAAMY,mBAAmB,GAC9BV,qBAAqB,KAAKF,SAA1B,IACAG,YAAY,KAAKH,SADjB,IAEAI,WAAW,KAAKJ,SAFhB,IAGAK,WAAW,KAAKL,SAHhB,IAIAM,gBAAgB,KAAKN,SAJrB,IAKAO,iBAAiB,KAAKP,SALtB,IAMAQ,YAAY,KAAKR,SANjB,IAOAS,oBAAoB,KAAKT,SAPzB,IAQAU,eAAe,KAAKV,SARpB,IASAW,0BAA0B,KAAKX,SAV1B;;;AAeP,SAASa,yBAAT,GAAqC;AAAA,MAC7BC,kCAD6B;AAAA;AAAA;;AAEnC,SAAOb,gBAAOc,sBAAP,IAAiCD,kCAAxC;AACD;;AAGD,SAASE,QAAT,GAAoB;AAAA,MACZC,iBADY;AAAA;AAAA;;AAElB,SAAOhB,gBAAOiB,KAAP,IAAgBD,iBAAvB;AACD;;AAED,IAAMF,sBAAsB,GAAGF,yBAAyB,EAAxD;;AACA,IAAMK,KAAK,GAAGF,QAAQ,EAAtB","sourcesContent":["// WEBGL BUILT-IN TYPES\n// 1) Exports all WebGL constants as {GL}\n// 2) Enables app to \"import\" WebGL types\n//    - Importing these types makes them known to eslint etc.\n//    - Provides dummy types for WebGL2 when not available to streamline\n//      library code.\n//    - Exports types from headless gl when running under Node.js\n\n/* eslint-disable quotes, no-console */\n/* global console */\nimport {global} from '../utils/globals';\nimport isBrowser from '../utils/is-browser';\n\nexport const ERR_HEADLESSGL_LOAD = `\\\nluma.gl: loaded under Node.js without headless gl installed, meaning that WebGL \\\ncontexts can not be created. This may not be an error. For example, this is a \\\ntypical configuration for isorender applications running on the server.`;\n\n// Load headless gl dynamically, if available\nexport let headlessTypes = null;\nexport let headlessGL = () => {\n  throw new Error(ERR_HEADLESSGL_LOAD);\n};\n\nif (!isBrowser) {\n  try {\n    headlessGL = module.require('gl');\n    headlessTypes = module.require('gl/wrap');\n  } catch (error) {\n    console.info(ERR_HEADLESSGL_LOAD);\n  }\n}\n\nclass DummyType {}\n\nconst {\n  WebGLRenderingContext = DummyType,\n  WebGLProgram = DummyType,\n  WebGLShader = DummyType,\n  WebGLBuffer = DummyType,\n  WebGLFramebuffer = DummyType,\n  WebGLRenderbuffer = DummyType,\n  WebGLTexture = DummyType,\n  WebGLUniformLocation = DummyType,\n  WebGLActiveInfo = DummyType,\n  WebGLShaderPrecisionFormat = DummyType\n} = headlessTypes || global;\n\nexport const webGLTypesAvailable =\n  WebGLRenderingContext !== DummyType &&\n  WebGLProgram !== DummyType &&\n  WebGLShader !== DummyType &&\n  WebGLBuffer !== DummyType &&\n  WebGLFramebuffer !== DummyType &&\n  WebGLRenderbuffer !== DummyType &&\n  WebGLTexture !== DummyType &&\n  WebGLUniformLocation !== DummyType &&\n  WebGLActiveInfo !== DummyType &&\n  WebGLShaderPrecisionFormat !== DummyType;\n\n// Ensures that WebGL2RenderingContext is defined in non-WebGL2 environments\n// so that apps can test their gl contexts with instanceof\n// E.g. if (gl instanceof WebGL2RenderingContext) { }\nfunction getWebGL2RenderingContext() {\n  class WebGL2RenderingContextNotSupported {}\n  return global.WebGL2RenderingContext || WebGL2RenderingContextNotSupported;\n}\n\n// Ensure that Image is defined under Node.js\nfunction getImage() {\n  class ImageNotSupported {}\n  return global.Image || ImageNotSupported;\n}\n\nconst WebGL2RenderingContext = getWebGL2RenderingContext();\nconst Image = getImage();\n\n// Export the standard WebGL types\nexport {\n  Image,\n\n  WebGLRenderingContext,\n  WebGLProgram,\n  WebGLShader,\n  WebGLBuffer,\n  WebGLFramebuffer,\n  WebGLRenderbuffer,\n  WebGLTexture,\n  WebGLUniformLocation,\n  WebGLActiveInfo,\n  WebGLShaderPrecisionFormat,\n\n  WebGL2RenderingContext\n};\n"],"file":"webgl-types.js"}