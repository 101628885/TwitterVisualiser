{"version":3,"sources":["../../../src/webgl/renderbuffer.js"],"names":["GL_RENDERBUFFER","GL_SAMPLES","GL_RENDERBUFFER_WIDTH","GL_RENDERBUFFER_HEIGHT","GL_RENDERBUFFER_INTERNAL_FORMAT","GL_RENDERBUFFER_SAMPLES","CB_FLOAT_WEBGL2","RENDERBUFFER_FORMATS","gl2","isFormatSupported","gl","format","formats","info","value","gl1","getExtension","Renderbuffer","getInternalformatParameter","opts","initialize","Object","seal","width","height","samples","bindRenderbuffer","handle","renderbufferStorageMultisample","renderbufferStorage","createRenderbuffer","deleteRenderbuffer","getParameter","pname","getRenderbufferParameter","Resource"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments */\nimport GL from '../constants';\nimport {isWebGL2} from '../webgl-utils';\nimport Resource from './resource';\nimport assert from '../utils/assert';\n\n// Define local GL constants to optimize minification\nconst GL_RENDERBUFFER = 0x8D41;\nconst GL_SAMPLES = 0x80A9;\nconst GL_RENDERBUFFER_WIDTH = 0x8D42;\nconst GL_RENDERBUFFER_HEIGHT = 0x8D43;\nconst GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\nconst GL_RENDERBUFFER_SAMPLES = 0x8CAB;\n\n// Define local extension strings to optimize minification\n// const SRGB = 'EXT_sRGB';\n// const CB_FLOAT_WEBGL1 = 'WEBGL_color_buffer_float';\nconst CB_FLOAT_WEBGL2 = 'EXT_color_buffer_float';\n// const CB_HALF_FLOAT_WEBGL1 = 'EXT_color_buffer_half_float';\n\nexport const RENDERBUFFER_FORMATS = {\n  [GL.DEPTH_COMPONENT16]: {}, // 16 depth bits.\n  [GL.DEPTH_COMPONENT24]: {gl2: true},\n  [GL.DEPTH_COMPONENT32F]: {gl2: true},\n\n  [GL.STENCIL_INDEX8]: {}, // 8 stencil bits.\n\n  [GL.DEPTH_STENCIL]: {},\n  [GL.DEPTH24_STENCIL8]: {gl2: true},\n  [GL.DEPTH32F_STENCIL8]: {gl2: true},\n\n  // When using a WebGL 1 context, color renderbuffer formats are limited\n  [GL.RGBA4]: {},\n  [GL.RGB565]: {},\n  [GL.RGB5_A1]: {},\n\n  // When using a WebGL 2 context, the following values are available additionally:\n  [GL.R8]: {gl2: true},\n  [GL.R8UI]: {gl2: true},\n  [GL.R8I]: {gl2: true},\n  [GL.R16UI]: {gl2: true},\n  [GL.R16I]: {gl2: true},\n  [GL.R32UI]: {gl2: true},\n  [GL.R32I]: {gl2: true},\n  [GL.RG8]: {gl2: true},\n  [GL.RG8UI]: {gl2: true},\n  [GL.RG8I]: {gl2: true},\n  [GL.RG16UI]: {gl2: true},\n  [GL.RG16I]: {gl2: true},\n  [GL.RG32UI]: {gl2: true},\n  [GL.RG32I]: {gl2: true},\n  [GL.RGB8]: {gl2: true},\n  [GL.RGBA8]: {gl2: true},\n  // [GL.SRGB8_ALPHA8]: {gl2: true, gl1: SRGB}, // When using the EXT_sRGB WebGL1 extension\n  [GL.RGB10_A2]: {gl2: true},\n  [GL.RGBA8UI]: {gl2: true},\n  [GL.RGBA8I]: {gl2: true},\n  [GL.RGB10_A2UI]: {gl2: true},\n  [GL.RGBA16UI]: {gl2: true},\n  [GL.RGBA16I]: {gl2: true},\n  [GL.RGBA32I]: {gl2: true},\n  [GL.RGBA32UI]: {gl2: true},\n\n  // When using a WebGL 2 context and the EXT_color_buffer_float WebGL2 extension\n  [GL.R16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RG16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RGBA16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.R32F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RG32F]: {gl2: CB_FLOAT_WEBGL2},\n  // TODO - can't get WEBGL_color_buffer_float to work on renderbuffers\n  [GL.RGBA32F]: {gl2: CB_FLOAT_WEBGL2},\n  // [GL.RGBA32F]: {gl2: CB_FLOAT_WEBGL2, gl1: CB_FLOAT_WEBGL1},\n  [GL.R11F_G11F_B10F]: {gl2: CB_FLOAT_WEBGL2}\n};\n\nfunction isFormatSupported(gl, format, formats) {\n  const info = formats[format];\n  if (!info) {\n    return false;\n  }\n  const value = isWebGL2(gl) ? info.gl2 || info.gl1 : info.gl1;\n  if (typeof value === 'string') {\n    return gl.getExtension(value);\n  }\n  return value;\n}\n\nexport default class Renderbuffer extends Resource {\n\n  static isSupported(gl, {format} = {}) {\n    return !format || isFormatSupported(gl, format, RENDERBUFFER_FORMATS);\n  }\n\n  static getSamplesForFormat(gl, {format}) {\n    // Polyfilled to return [0] under WebGL1\n    return gl.getInternalformatParameter(GL_RENDERBUFFER, format, GL_SAMPLES);\n  }\n\n  constructor(gl, opts = {}) {\n    super(gl, opts);\n    this.initialize(opts);\n    Object.seal(this);\n  }\n\n  // Creates and initializes a renderbuffer object's data store\n  initialize({format, width = 1, height = 1, samples = 0}) {\n    assert(format, 'Needs format');\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n\n    if (samples !== 0 && isWebGL2(this.gl)) {\n      this.gl.renderbufferStorageMultisample(GL_RENDERBUFFER, samples, format, width, height);\n    } else {\n      this.gl.renderbufferStorage(GL_RENDERBUFFER, format, width, height);\n    }\n\n    // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n\n    this.format = format;\n    this.width = width;\n    this.height = height;\n    this.samples = samples;\n\n    return this;\n  }\n\n  resize({width, height}) {\n    // Don't resize if width/height haven't changed\n    if (width !== this.width || height !== this.height) {\n      return this.initialize({width, height, format: this.format, samples: this.samples});\n    }\n    return this;\n  }\n\n  // PRIVATE METHODS\n  _createHandle() {\n    return this.gl.createRenderbuffer();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteRenderbuffer(this.handle);\n  }\n\n  _bindHandle(handle) {\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, handle);\n  }\n\n  _syncHandle(handle) {\n    this.format = this.getParameter(GL_RENDERBUFFER_INTERNAL_FORMAT);\n    this.width = this.getParameter(GL_RENDERBUFFER_WIDTH);\n    this.height = this.getParameter(GL_RENDERBUFFER_HEIGHT);\n    this.samples = this.getParameter(GL_RENDERBUFFER_SAMPLES);\n  }\n\n  // @param {Boolean} opt.autobind=true - method call will bind/unbind object\n  // @returns {GLenum|GLint} - depends on pname\n  _getParameter(pname) {\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n    const value = this.gl.getRenderbufferParameter(GL_RENDERBUFFER, pname);\n    // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n    return value;\n  }\n}\n"],"file":"renderbuffer.js"}