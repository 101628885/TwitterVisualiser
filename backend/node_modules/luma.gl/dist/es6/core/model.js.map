{"version":3,"sources":["../../../src/core/model.js"],"names":["Attribute","Object3D","getDrawMode","Buffer","Query","Program","TransformFeedback","VertexArray","clear","isWebGL","MODULAR_SHADERS","assembleShaders","addModel","removeModel","logModel","getOverrides","getDebugTableForUniforms","getDebugTableForVertexArray","getDebugTableForProgramConfiguration","log","isObjectEmpty","assert","ERR_MODEL_PARAMS","LOG_DRAW_PRIORITY","LOG_DRAW_TIMEOUT","DEPRECATED_PICKING_UNIFORMS","Model","constructor","gl","props","lastLogTime","initialize","program","_createProgram","vertexArray","userData","needsRedraw","_attributes","attributes","animatedUniforms","animated","animationLoop","timerQueryEnabled","timeElapsedQuery","undefined","lastQueryReturned","stats","accumulatedFrameTime","averageFrameTime","profileFrameCount","pickable","setProps","setUniforms","Object","assign","getModuleUniforms","moduleSettings","isInstanced","instanced","onBeforeRender","onAfterRender","drawMode","Number","isFinite","vertexCount","instanceCount","setGeometry","geometry","setAttributes","uniforms","samplers","isSupported","warn","_setFeedbackBuffers","_feedbackBuffers","_setAnimationProps","_animationProps","_animationLoop","delete","key","id","destroy","getVertexCount","getNeedsRedraw","clearRedrawFlags","redraw","getInstanceCount","getProgram","getAttributes","getUniforms","setNeedsRedraw","setDrawMode","setVertexCount","setInstanceCount","buffers","_createBuffersFromAttributeDescriptors","_extractAnimatedUniforms","_checkForDeprecatedUniforms","animationProps","_evaluateAnimateUniforms","updateModuleSettings","opts","draw","framebuffer","transformFeedback","parameters","_refreshAnimationProps","logPriority","_logDrawCallStart","drawParams","getDrawParams","isIndexed","indexType","_timerQueryStart","_timerQueryEnd","_logDrawCallEnd","transform","discard","feedbackBuffers","unbindModels","forEach","model","unbindBuffers","bindBuffers","render","arguments","length","vs","fs","modules","defines","inject","shaderCache","varyings","bufferMode","x","assembleResult","uniform","deprecated","uniformName","valueFunction","foundAnimated","newValue","staticUniforms","setBuffers","beginTimeElapsedQuery","end","isResultAvailable","elapsedTime","getResult","lastFrameTime","attributeName","descriptor","attribute","layout","update","buffer","getValue","priority","logDrawTimeout","Date","now","group","collapsed","attributeTable","header","uniformTable","table","unusedTable","unusedCount","undefinedOnly","missingTable","missingCount","count","keys","configTable","configuration","message","groupEnd"],"mappings":"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","sourcesContent":["import GL from '../constants';\nimport Attribute from './attribute';\nimport Object3D from './object-3d';\nimport {getDrawMode} from '../geometry/geometry';\nimport {Buffer, Query, Program, TransformFeedback, VertexArray, clear} from '../webgl';\nimport {isWebGL} from '../webgl-utils';\nimport {MODULAR_SHADERS} from '../shadertools/src/shaders';\nimport {assembleShaders} from '../shadertools/src';\nimport {addModel, removeModel, logModel, getOverrides} from '../debug/seer-integration';\nimport {getDebugTableForUniforms} from '../webgl-debug/debug-uniforms';\nimport {getDebugTableForVertexArray} from '../webgl-debug/debug-vertex-array';\nimport {getDebugTableForProgramConfiguration} from '../webgl-debug/debug-program-configuration';\nimport {log, isObjectEmpty} from '../utils';\nimport assert from '../utils/assert';\n\nconst ERR_MODEL_PARAMS = 'Model needs drawMode and vertexCount';\n\nconst LOG_DRAW_PRIORITY = 2;\nconst LOG_DRAW_TIMEOUT = 10000;\n\n// These old picking uniforms should be avoided and we should use picking module\n// and set uniforms using Model class 'updateModuleSettings()'\n// TODO - move to shader modules\nconst DEPRECATED_PICKING_UNIFORMS = ['renderPickingBuffer', 'pickingEnabled'];\n\n// Model abstract O3D Class\nexport default class Model extends Object3D {\n  constructor(gl, props = {}) {\n    super(props);\n    assert(isWebGL(gl));\n    this.gl = gl;\n    this.lastLogTime = 0; // TODO - move to probe.gl\n    this.initialize(props);\n    // intended to be subclassed, do not seal\n  }\n\n  /* eslint-disable max-statements  */\n  /* eslint-disable complexity  */\n  initialize(props = {}) {\n    this.props = {};\n    this.program = this._createProgram(props);\n\n    // Create a vertex array configured after this program\n    this.vertexArray = new VertexArray(this.gl, {program: this.program});\n\n    // Initialize state\n    this.userData = {};\n    this.needsRedraw = true;\n    // Model manages auto Buffer creation from typed arrays\n    this._attributes = {}; // All attributes\n    this.attributes = {}; // User defined attributes\n\n    // Model manages uniform animation\n    this.animatedUniforms = {};\n    this.animated = false;\n    this.animationLoop = null; // if set, used as source for animationProps\n\n    this.timerQueryEnabled = false;\n    this.timeElapsedQuery = undefined;\n    this.lastQueryReturned = true;\n\n    this.stats = {\n      accumulatedFrameTime: 0,\n      averageFrameTime: 0,\n      profileFrameCount: 0\n    };\n\n    // picking options\n    this.pickable = true;\n    // this.pick = pick || (() => false);\n\n    this.setProps(props);\n\n    // Make sure we have some reasonable default uniforms in place\n    this.setUniforms(Object.assign(\n      {},\n      this.getModuleUniforms(), // Get all default uniforms\n      this.getModuleUniforms(props.moduleSettings) // Get unforms for supplied parameters\n    ));\n\n    // Attributes and buffers\n\n    // geometry might have set drawMode and vertexCount\n    this.isInstanced = props.isInstanced || props.instanced;\n\n    this.onBeforeRender = props.onBeforeRender || (() => {});\n    this.onAfterRender = props.onAfterRender || (() => {});\n\n    // assert(program || program instanceof Program);\n    assert(this.drawMode !== undefined && Number.isFinite(this.vertexCount), ERR_MODEL_PARAMS);\n\n  }\n  /* eslint-enable max-statements */\n\n  setProps(props) {\n    Object.assign(this.props, props);\n\n    // params\n    // if ('drawMode' in props) {\n    //   this.drawMode = getDrawMode(props.drawMode);\n    // }\n    // if ('vertexCount' in props) {\n    //   this.vertexCount = props.vertexCount;\n    // }\n    if ('instanceCount' in props) {\n      this.instanceCount = props.instanceCount;\n    }\n    if ('geometry' in props) {\n      this.setGeometry(props.geometry);\n    }\n\n    // webgl settings\n    if ('attributes' in props) {\n      this.setAttributes(props.attributes);\n    }\n    if ('uniforms' in props) {\n      this.setUniforms(props.uniforms, props.samplers);\n    }\n\n    if ('pickable' in props) {\n      this.pickable = props.pickable;\n    }\n\n    // Experimental props\n    if ('timerQueryEnabled' in props) {\n      this.timerQueryEnabled = props.timerQueryEnabled && Query.isSupported(this.gl, ['timers']);\n      if (props.timerQueryEnabled && !this.timerQueryEnabled) {\n        log.warn('GPU timer not supported')();\n      }\n    }\n    if ('_feedbackBuffers' in props) {\n      this._setFeedbackBuffers(props._feedbackBuffers);\n    }\n    if ('_animationProps' in props) {\n      this._setAnimationProps(props._animationProps);\n    }\n    if ('_animationLoop' in props) {\n      this.animationLoop = props._animationLoop;\n    }\n  }\n\n  delete() {\n    // delete all attributes created by this model\n    // TODO - should buffer deletes be handled by vertex array?\n    for (const key in this._attributes) {\n      if (this._attributes[key] !== this.attributes[key]) {\n        this._attributes[key].delete();\n      }\n    }\n\n    this.program.delete();\n    this.vertexArray.delete();\n\n    removeModel(this.id);\n  }\n\n  destroy() {\n    this.delete();\n  }\n\n  // GETTERS\n\n  get vertexCount() {\n    if (Number.isFinite(this.props.vertexCount)) {\n      return this.props.vertexCount;\n    }\n    return this.geometry && this.geometry.getVertexCount();\n  }\n\n  get drawMode() {\n    if (Number.isFinite(this.props.drawMode)) {\n      return this.props.drawMode;\n    }\n    return this.geometry && this.geometry.drawMode;\n  }\n\n  getNeedsRedraw({clearRedrawFlags = false} = {}) {\n    let redraw = false;\n    redraw = redraw || this.needsRedraw;\n    this.needsRedraw = this.needsRedraw && !clearRedrawFlags;\n    if (this.geometry) {\n      redraw = redraw || this.geometry.getNeedsRedraw({clearRedrawFlags});\n    }\n    if (this.animated) {\n      redraw = redraw || `animated model ${this.id}`;\n    }\n    return redraw;\n  }\n\n  getDrawMode() {\n    return this.drawMode;\n  }\n\n  getVertexCount() {\n    return this.vertexCount;\n  }\n\n  getInstanceCount() {\n    return this.instanceCount;\n  }\n\n  getProgram() {\n    return this.program;\n  }\n\n  getAttributes() {\n    return this.attributes;\n  }\n\n  getUniforms() {\n    return this.program.getUniforms;\n  }\n\n  // SETTERS\n\n  setNeedsRedraw(redraw = true) {\n    this.needsRedraw = redraw;\n    return this;\n  }\n\n  setDrawMode(drawMode) {\n    this.props.drawMode = getDrawMode(drawMode);\n    return this;\n  }\n\n  setVertexCount(vertexCount) {\n    assert(Number.isFinite(vertexCount));\n    this.props.vertexCount = vertexCount;\n    return this;\n  }\n\n  setInstanceCount(instanceCount) {\n    assert(Number.isFinite(instanceCount));\n    this.instanceCount = instanceCount;\n    return this;\n  }\n\n  // TODO - just set attributes, don't hold on to geometry\n  setGeometry(geometry) {\n    this.geometry = geometry;\n    const buffers = this._createBuffersFromAttributeDescriptors(this.geometry.getAttributes());\n    this.vertexArray.setAttributes(buffers);\n    this.setNeedsRedraw();\n    return this;\n  }\n\n  setAttributes(attributes = {}) {\n    // Avoid setting needsRedraw if no attributes\n    if (isObjectEmpty(attributes)) {\n      return this;\n    }\n\n    Object.assign(this.attributes, attributes);\n    const buffers = this._createBuffersFromAttributeDescriptors(attributes);\n\n    // Object.assign(this.attributes, buffers);\n    this.vertexArray.setAttributes(buffers);\n    this.setNeedsRedraw();\n\n    return this;\n  }\n\n  // TODO - should actually set the uniforms\n  setUniforms(uniforms = {}, samplers = {}) {\n    // Let Seer override edited uniforms\n    uniforms = Object.assign({}, uniforms);\n    getOverrides(this.id, uniforms);\n\n    // Resolve any animated uniforms so that we have an initial value\n    uniforms = this._extractAnimatedUniforms(uniforms);\n\n    this.program.setUniforms(uniforms, samplers, () => {\n      // if something changed\n      this._checkForDeprecatedUniforms(uniforms);\n      this.setNeedsRedraw();\n    });\n  }\n\n  // Updates (evaluates) all function valued uniforms based on a new set of animationProps\n  // experimental\n  _setAnimationProps(animationProps) {\n    if (this.animated) {\n      assert(animationProps, 'Model.draw(): animated uniforms but no animationProps');\n      const animatedUniforms = this._evaluateAnimateUniforms(animationProps);\n      this.program.setUniforms(animatedUniforms, {}, () => {\n        // if something changed\n        this._checkForDeprecatedUniforms(animatedUniforms);\n        this.setNeedsRedraw();\n      });\n    }\n  }\n\n  updateModuleSettings(opts) {\n    const uniforms = this.getModuleUniforms(opts || {});\n    return this.setUniforms(uniforms);\n  }\n\n  // DRAW CALLS\n\n  clear(opts) {\n    clear(this.program.gl, opts);\n    return this;\n  }\n\n  /* eslint-disable max-statements  */\n  draw(opts = {}) {\n    const {\n      moduleSettings = null,\n      framebuffer,\n      uniforms = {},\n      attributes = {},\n      samplers = {},\n      transformFeedback = this.transformFeedback,\n      parameters = {},\n      vertexArray = this.vertexArray,\n      animationProps\n    } = opts;\n\n    // Update module settings\n\n    addModel(this);\n\n    // Update model with any just provided attributes, settings or uniforms\n    this.setAttributes(attributes);\n    this.updateModuleSettings(moduleSettings);\n    this.setUniforms(uniforms, samplers);\n\n    // Animate any function valued uniforms\n    this._refreshAnimationProps(animationProps);\n\n    const logPriority = this._logDrawCallStart(2);\n\n    const drawParams = this.vertexArray.getDrawParams(this.props);\n    if (drawParams.isInstanced && !this.isInstanced) {\n      log.warn('Found instanced attributes on non-instanced model', this.id)();\n    }\n\n    const {isIndexed, indexType} = drawParams;\n    const {isInstanced, instanceCount} = this;\n\n    this.onBeforeRender();\n    this._timerQueryStart();\n\n    this.program.draw(Object.assign({}, opts, {\n      logPriority,\n      uniforms: null, // Already set (may contain \"function values\" not understood by Program)\n      framebuffer,\n      parameters,\n      drawMode: this.getDrawMode(),\n      vertexCount: this.getVertexCount(),\n      vertexArray,\n      transformFeedback,\n      isIndexed,\n      indexType,\n      isInstanced,\n      instanceCount\n    }));\n\n    this._timerQueryEnd();\n    this.onAfterRender();\n\n    this.setNeedsRedraw(false);\n\n    this._logDrawCallEnd(logPriority, vertexArray, framebuffer);\n\n    return this;\n  }\n  /* eslint-enable max-statements  */\n\n  // Draw call for transform feedback\n  transform(opts = {}) {\n    const {\n      discard = true,\n      feedbackBuffers,\n      unbindModels = []\n    } = opts;\n\n    let {\n      parameters\n    } = opts;\n\n    if (feedbackBuffers) {\n      this._setFeedbackBuffers(feedbackBuffers);\n    }\n\n    if (discard) {\n      parameters = Object.assign({}, parameters, {[GL.RASTERIZER_DISCARD]: discard});\n    }\n\n    unbindModels.forEach(model => model.vertexArray.unbindBuffers());\n    try {\n      this.draw(Object.assign({}, opts, {parameters}));\n    } finally {\n      unbindModels.forEach(model => model.vertexArray.bindBuffers());\n    }\n\n    return this;\n  }\n\n  // DEPRECATED METHODS\n\n  render(uniforms = {}) {\n    assert(arguments.length <= 1);\n    // log.deprecated('Model.render()', 'Model.draw()')();\n    return this.draw({uniforms});\n  }\n\n  // PRIVATE METHODS\n\n  _createProgram({\n    vs = null,\n    fs = null,\n    // 1: Modular shaders\n    modules = null,\n    defines = {},\n    inject = {},\n    shaderCache = null,\n    // TransformFeedback\n    varyings = null,\n    bufferMode = GL.SEPARATE_ATTRIBS,\n    program = null\n  }) {\n    this.getModuleUniforms = x => {};\n\n    const id = this.id;\n\n    if (!program) {\n      // Assign default shaders if none are provided\n      vs = vs || MODULAR_SHADERS.vs;\n      fs = fs || MODULAR_SHADERS.fs;\n\n      const assembleResult = assembleShaders(this.gl, {vs, fs, modules, inject, defines, log});\n      ({vs, fs} = assembleResult);\n\n      if (shaderCache) {\n        program = shaderCache.getProgram(this.gl, {id, vs, fs});\n      } else {\n        program = new Program(this.gl, {id, vs, fs, varyings, bufferMode});\n      }\n\n      this.getModuleUniforms = assembleResult.getUniforms || (x => {});\n    }\n\n    assert(program instanceof Program, 'Model needs a program');\n    return program;\n  }\n  /* eslint-enable complexity */\n\n  // Uniforms\n\n  _checkForDeprecatedUniforms(uniforms) {\n    // deprecated picking uniforms\n    DEPRECATED_PICKING_UNIFORMS.forEach((uniform) => {\n      if (uniform in uniforms) {\n        log.deprecated(uniform,\n          'use picking shader module and Model class updateModuleSettings()')();\n      }\n    });\n  }\n\n  // Refreshes animated uniforms, attempting to get animated props from animationLoop if registered\n  _refreshAnimationProps(animationProps) {\n    // Try to read animationProps\n    animationProps = animationProps || (this.animationLoop && this.animationLoop.animationProps);\n    if (animationProps) {\n      this._setAnimationProps(animationProps);\n    }\n  }\n\n  // Calculate new values for any function uniforms based on supplied animationProps\n  _evaluateAnimateUniforms(animationProps) {\n    if (!this.animated) {\n      return {};\n    }\n    const animatedUniforms = {};\n    for (const uniformName in this.animatedUniforms) {\n      const valueFunction = this.animatedUniforms[uniformName];\n      animatedUniforms[uniformName] = valueFunction(animationProps);\n    }\n    return animatedUniforms;\n  }\n\n  // Extracts a list of function valued uniforms, so we can update them before each draw call\n  // Also removes such uniforms from the returned list\n  _extractAnimatedUniforms(uniforms) {\n    let foundAnimated = false;\n\n    // Keep our animatedUniforms map up-to-date\n    for (const uniformName in uniforms) {\n      const newValue = uniforms[uniformName];\n      if (typeof newValue === 'function') {\n        this.animatedUniforms[uniformName] = newValue;\n        foundAnimated = true;\n      } else {\n        delete this.animatedUniforms[uniformName];\n      }\n    }\n\n    // Update animated flag: `Model` is animated if any uniforms are animated (i.e. functions)\n    this.animated = !isObjectEmpty(this.animatedUniforms);\n\n    if (!foundAnimated) {\n      return uniforms;\n    }\n\n    // If animated uniforms were found, remove them from ordinary uniform list\n    // `Program` class can't (and shouldn't) handle function valued uniforms\n    const staticUniforms = {};\n    for (const uniformName in uniforms) {\n      if (!this.animatedUniforms[uniformName]) {\n        staticUniforms[uniformName] = uniforms[uniformName];\n      }\n    }\n    return staticUniforms;\n  }\n\n  // Transform Feedback\n\n  _setFeedbackBuffers(feedbackBuffers = {}) {\n    // Avoid setting needsRedraw if no feedbackBuffers\n    if (isObjectEmpty(feedbackBuffers)) {\n      return this;\n    }\n\n    const {gl} = this.program;\n    this.transformFeedback = this.transformFeedback || new TransformFeedback(gl, {\n      program: this.program\n    });\n\n    this.transformFeedback.setBuffers(feedbackBuffers);\n\n    this.setNeedsRedraw();\n\n    return this;\n  }\n\n  // Timer Queries\n\n  _timerQueryStart() {\n    if (this.timerQueryEnabled === true) {\n      if (!this.timeElapsedQuery) {\n        this.timeElapsedQuery = new Query(this.gl);\n      }\n      if (this.lastQueryReturned) {\n        this.lastQueryReturned = false;\n        this.timeElapsedQuery.beginTimeElapsedQuery();\n      }\n    }\n  }\n\n  _timerQueryEnd() {\n    if (this.timerQueryEnabled === true) {\n      this.timeElapsedQuery.end();\n      // TODO: Skip results if 'gl.getParameter(this.ext.GPU_DISJOINT_EXT)' returns false\n      // should this be incorporated into Query object?\n      if (this.timeElapsedQuery.isResultAvailable()) {\n        this.lastQueryReturned = true;\n        const elapsedTime = this.timeElapsedQuery.getResult();\n\n        // Update stats (e.g. for seer)\n        this.stats.lastFrameTime = elapsedTime;\n        this.stats.accumulatedFrameTime += elapsedTime;\n        this.stats.profileFrameCount++;\n        this.stats.averageFrameTime =\n          this.stats.accumulatedFrameTime / this.stats.profileFrameCount;\n\n        // Log stats\n        log.log(LOG_DRAW_PRIORITY, `\\\nGPU time ${this.program.id}: ${this.stats.lastFrameTime}ms \\\naverage ${this.stats.averageFrameTime}ms \\\naccumulated: ${this.stats.accumulatedFrameTime}ms \\\ncount: ${this.stats.profileFrameCount}`\n        )();\n      }\n    }\n  }\n\n  // Makes sure buffers are created for all attributes\n  // and that the program is updated with those buffers\n  // TODO - do we need the separation between \"attributes\" and \"buffers\"\n  // couldn't apps just create buffers directly?\n  _createBuffersFromAttributeDescriptors(attributes) {\n    const {program: {gl}} = this;\n\n    // const attributes = {};\n    const buffers = {};\n\n    for (const attributeName in attributes) {\n\n      const descriptor = attributes[attributeName];\n\n      let attribute = this._attributes[attributeName];\n\n      if (descriptor instanceof Attribute) {\n        attribute = descriptor;\n      } else if (descriptor instanceof Buffer) {\n        attribute = attribute || new Attribute(gl,\n          Object.assign({}, descriptor, descriptor.layout, {\n            id: attributeName\n          })\n        );\n        attribute.update({buffer: descriptor});\n      } else if (attribute) {\n        attribute.update(descriptor);\n      } else {\n        attribute = new Attribute(gl, Object.assign({}, descriptor, {\n          id: attributeName\n        }));\n      }\n\n      this._attributes[attributeName] = attribute;\n      buffers[attributeName] = attribute.getValue();\n    }\n\n    return buffers;\n  }\n\n  _logDrawCallStart(priority) {\n    const logDrawTimeout = priority > 3 ? 0 : LOG_DRAW_TIMEOUT;\n    if (log.priority < priority || (Date.now() - this.lastLogTime < logDrawTimeout)) {\n      return undefined;\n    }\n\n    this.lastLogTime = Date.now();\n\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.priority <= 2})();\n\n    return priority;\n  }\n\n  _logDrawCallEnd(priority, vertexArray, uniforms, framebuffer) {\n    // HACK: priority === undefined means logDrawCallStart didn't run\n    if (priority === undefined) {\n      return;\n    }\n\n    const attributeTable = getDebugTableForVertexArray({\n      vertexArray,\n      header: `${this.id} attributes`,\n      attributes: this._attributes\n    });\n\n    const {table: uniformTable, unusedTable, unusedCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms)\n    });\n\n    // log missing uniforms\n    const {table: missingTable, count: missingCount} = getDebugTableForUniforms({\n      header: `${this.id} uniforms`,\n      program: this.program,\n      uniforms: Object.assign({}, this.program.uniforms, uniforms),\n      undefinedOnly: true\n    });\n\n    if (missingCount > 0) {\n      log.log('MISSING UNIFORMS', Object.keys(missingTable))();\n      // log.table(priority, missingTable)();\n    }\n    if (unusedCount > 0) {\n      log.log('UNUSED UNIFORMS', Object.keys(unusedTable))();\n      // log.log(priority, 'Unused uniforms ', unusedTable)();\n    }\n\n    const configTable = getDebugTableForProgramConfiguration(this.vertexArray.configuration);\n\n    log.table(priority, attributeTable)();\n\n    log.table(priority, uniformTable)();\n\n    log.table(priority + 1, configTable)();\n\n    logModel(this, uniforms);\n\n    if (framebuffer) {\n      framebuffer.log({priority: LOG_DRAW_PRIORITY, message: `Rendered to ${framebuffer.id}`});\n    }\n\n    log.groupEnd(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`)();\n  }\n}\n"],"file":"model.js"}