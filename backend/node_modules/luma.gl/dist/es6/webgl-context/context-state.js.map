{"version":3,"sources":["../../../src/webgl-context/context-state.js"],"names":["pushContextState","popContextState","getParameter","getParameters","setParameter","setParameters","glSetParameters","resetParameters","getModifiedParameters","isObjectEmpty","assert","LUMA_SETTERS","framebuffer","gl","handle","bindFramebuffer","blend","value","enable","disable","blendColor","blendEquation","args","isArray","blendEquationSeparate","blendFunc","length","blendFuncSeparate","clearColor","clearDepth","clearStencil","colorMask","cull","cullFace","depthTest","depthFunc","depthMask","depthRange","dither","derivativeHint","hint","frontFace","mipmapHint","lineWidth","polygonOffsetFill","polygonOffset","sampleCoverage","scissorTest","scissor","stencilTest","stencilMask","mask","backMask","stencilMaskSeparate","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","viewport","array","Array","ArrayBuffer","isView","parameters","key","setter","withParameters","nocatch","frameBuffer"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len */\nimport GL from '../constants';\nimport {\n  pushContextState,\n  popContextState\n} from '../webgl-context/track-context-state';\nimport {\n  getParameter,\n  getParameters,\n  setParameter,\n  setParameters as glSetParameters,\n  resetParameters,\n  getModifiedParameters\n} from '../webgl-context/set-parameters';\nimport {isObjectEmpty} from '../utils';\nimport assert from '../utils/assert';\n\n// map of parameter setter function names, parameter constants, default values and types\n// - Uses gl function names, except when setter function exist that are named differently\n// - When the WebGL api offers <setter> and <setter>Separate (e.g. blendEquation and\n//   blendEquationSeparate, we use non-separate name, but accept both non-separate and\n//   separate arguments. Thus, a `getParameter` call will always return all the separate values\n//   in an array, in a form that can be accepted by the setter.\nexport const LUMA_SETTERS = {\n  framebuffer: (gl, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\n// HELPERS\n\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// GETTERS AND SETTERS\n\n// Get the parameter value(s) from the context\nexport {getParameter}; // from '../webgl-utils/set-parameters'\n\n// Get the parameters from the context\nexport {getParameters}; // from '../webgl-utils/set-parameters'\n\n// Resets gl state to default values.\nexport {setParameter}; // from '../webgl-utils/set-parameters'\n\n// Resets gl state to default values.\nexport {resetParameters}; // from '../webgl-utils/set-parameters'\n\n// Get a map of modified parameters\nexport {getModifiedParameters};\n\n// Note: \"setParameters\" is given extra treatment below\n\n// Set the parameter value(s) by key to the context\n// Sets value with key to context.\n// Value may be \"normalized\" (in case a short form is supported). In that case\n// the normalized value is retured.\nexport function setParameters(gl, parameters) {\n  glSetParameters(gl, parameters);\n  for (const key in parameters) {\n    const setter = LUMA_SETTERS[key];\n    if (setter) {\n      setter(gl, parameters[key], key);\n    }\n  }\n}\n\n// VERY LIMITED / BASIC GL STATE MANAGEMENT\n// Executes a function with gl states temporarily set, exception safe\n// Currently support pixelStorage, scissor test and framebuffer binding\nexport function withParameters(gl, parameters, func) {\n  // assertWebGLContext(gl);\n\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(gl);\n  }\n\n  const {nocatch = true} = parameters;\n  // frameBuffer not supported use framebuffer\n  assert(!parameters.frameBuffer);\n\n  pushContextState(gl);\n  setParameters(gl, parameters);\n\n  // Setup is done, call the function\n  let value;\n\n  if (nocatch) {\n    // Avoid try catch to minimize stack size impact for safe execution paths\n    value = func(gl);\n    popContextState(gl);\n  } else {\n    // Wrap in a try-catch to ensure that parameters are restored on exceptions\n    try {\n      value = func(gl);\n    } finally {\n      popContextState(gl);\n    }\n  }\n\n  return value;\n}\n"],"file":"context-state.js"}