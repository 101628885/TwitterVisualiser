{"version":3,"sources":["../../../src/webgl-context/set-parameters.js"],"names":["isWebGL2","assert","GL_PARAMETER_DEFAULTS","Float32Array","Int32Array","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","bindFramebuffer","readFramebuffer","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","viewport","COMPOSITE_GL_PARAMETER_SETTERS","blendEquation","values","blendEquationSeparate","blendFunc","blendFuncSeparate","polygonOffset","sampleCoverage","stencilFuncFront","stencilFuncSeparate","stencilFuncBack","stencilOpFront","stencilOpSeparate","stencilOpBack","isEnabled","GL_PARAMETER_GETTERS","deepArrayEqual","x","y","isArrayX","Array","isArray","ArrayBuffer","isView","isArrayY","length","i","setParameter","getter","prevValue","Number","getParameter","setter","setParameters","compositeSetters","glConstant","cache","state","mergedValues","Object","assign","compositeSetter","getParameters","parameters","parameterKeys","keys","getDefaultParameters","resetParameters","getModifiedParameters","modified"],"mappings":"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","sourcesContent":["// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport GL from '../constants';\nimport {isWebGL2} from '../webgl-utils';\nimport assert from '../utils/assert';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: new Int32Array([0, 0, 1024, 1024]),\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'COMPOSITE_GL_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei\n};\n\n// COMPOSITE_WEBGL_PARAMETER_\nconst COMPOSITE_GL_PARAMETER_SETTERS = {\n  blendEquation: (gl, values) => gl.blendEquationSeparate(\n    values[GL.BLEND_EQUATION_RGB],\n    values[GL.BLEND_EQUATION_ALPHA]\n  ),\n  blendFunc: (gl, values) => gl.blendFuncSeparate(\n    values[GL.BLEND_SRC_RGB],\n    values[GL.BLEND_DST_RGB],\n    values[GL.BLEND_SRC_ALPHA],\n    values[GL.BLEND_DST_ALPHA]\n  ),\n  polygonOffset: (gl, values) => gl.polygonOffset(\n    values[GL.POLYGON_OFFSET_FACTOR],\n    values[GL.POLYGON_OFFSET_UNITS]\n  ),\n  sampleCoverage: (gl, values) => gl.sampleCoverage(\n    values[GL.SAMPLE_COVERAGE_VALUE],\n    values[GL.SAMPLE_COVERAGE_INVERT]\n  ),\n  stencilFuncFront: (gl, values) => gl.stencilFuncSeparate(GL.FRONT,\n    values[GL.STENCIL_FUNC],\n    values[GL.STENCIL_REF],\n    values[GL.STENCIL_VALUE_MASK]\n  ),\n  stencilFuncBack: (gl, values) => gl.stencilFuncSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FUNC],\n    values[GL.STENCIL_BACK_REF],\n    values[GL.STENCIL_BACK_VALUE_MASK]\n  ),\n  stencilOpFront: (gl, values) => gl.stencilOpSeparate(GL.FRONT,\n    values[GL.STENCIL_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_PASS]\n  ),\n  stencilOpBack: (gl, values) => gl.stencilOpSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_PASS]\n  )\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\n// HELPER METHODS\n\nconst deepArrayEqual = (x, y) => {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\n// PUBLIC METHODS\n\n// Sets any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\n// Returns the previous value\n// Note: limited to parameter values\nexport function setParameter(gl, key, value) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  const prevValue = getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n  const setter = GL_PARAMETER_SETTERS[key];\n  assert(typeof setter === 'function');\n  setter(gl, value, Number(key));\n  return prevValue;\n}\n\n// Sets any GL parameter regardless of function (gl.blendMode, ...)\n// Note: requires a `cache` object to be set on the context (gl.state.cache)\n// This object is used to fill in any missing values for composite setter functions\nexport function setParameters(gl, values) {\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in values) {\n    const glConstant = Number(key);\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      } else { // if (gl[glConstant] !== undefined) {\n        // TODO - added above check since this is being called on WebGL2 values in WebGL1...\n        // TODO - deep equal on values? only call setter if value has changed?\n        // NOTE - the setter will automatically update this.state\n        setter(gl, values[key], glConstant);\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    const mergedValues = Object.assign({}, cache, values);\n\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = COMPOSITE_GL_PARAMETER_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, mergedValues);\n    }\n  }\n  // Add a log for the else case?\n}\n\n// Queries any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\nexport function getParameter(gl, key) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  return getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n}\n\n// Copies the state from a context (gl.getParameter should not be overriden)\n// Reads the entire WebGL state from a context\n// Caveat: This generates a huge amount of synchronous driver roundtrips and should be\n// considered a very slow operation, to be used only if/when a context already manipulated\n// by external code needs to be synchronized for the first time\n// @return {Object} - a newly created map, with values keyed by GL parameters\nexport function getParameters(gl, parameters) {\n  // default to querying all parameters\n  parameters = parameters || GL_PARAMETER_DEFAULTS;\n  // support both arrays of parameters and objects (keys represent parameters)\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    state[key] = getParameter(gl, key);\n  }\n  return state;\n}\n\nexport function getDefaultParameters(gl) {\n  // TODO - Query GL.VIEWPORT and GL.SCISSOR_BOX since these are dynamic\n  return Object.assign({}, GL_PARAMETER_DEFAULTS, {\n    // TODO: For viewport and scissor default values are set at the time of\n    // context creation based on canvas size, we can query them here but it will\n    // not match with what we have in GL_PARAMETER_DEFAULTS table, we should revisit.\n    // [GL.VIEWPORT]: gl.constructor.prototype.getParameter.call(gl, GL.VIEWPORT),\n    // [GL.SCISSOR_BOX]: gl.constructor.prototype.getParameter.call(gl, GL.SCISSOR_BOX)\n  });\n}\n\n// Reset all parameters to a pure context state\nexport function resetParameters(gl) {\n  setParameters(gl, getDefaultParameters(gl));\n}\n\n// Get all parameters that have been modified from a pure context state\nexport function getModifiedParameters(gl) {\n  const values = getParameters(GL_PARAMETER_DEFAULTS);\n  const modified = {};\n  for (const key in GL_PARAMETER_DEFAULTS) {\n    if (!deepArrayEqual(values[key], GL_PARAMETER_DEFAULTS[key])) {\n      modified[key] = values[key];\n    }\n  }\n  return modified;\n}\n"],"file":"set-parameters.js"}