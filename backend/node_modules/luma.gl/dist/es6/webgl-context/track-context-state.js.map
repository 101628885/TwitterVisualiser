{"version":3,"sources":["../../../src/webgl-context/track-context-state.js"],"names":["setParameters","getParameters","GL_PARAMETER_DEFAULTS","assert","clone","x","Array","isArray","ArrayBuffer","isView","slice","deepEqual","y","isArrayX","isArrayY","length","i","GL_STATE_SETTERS","enable","update","cap","disable","pixelStorei","pname","param","hint","bindFramebuffer","target","fb","blendColor","r","g","b","a","Float32Array","blendEquation","mode","blendEquationSeparate","modeRGB","modeAlpha","blendFunc","src","dst","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","clearColor","clearDepth","depth","clearStencil","s","colorMask","cullFace","depthFunc","func","depthRange","zNear","zFar","depthMask","mask","frontFace","face","lineWidth","width","polygonOffset","factor","units","sampleCoverage","value","invert","scissor","height","Int32Array","stencilMask","stencilMaskSeparate","stencilFunc","ref","stencilFuncSeparate","stencilOp","fail","zfail","zpass","stencilOpSeparate","viewport","installGetterOverride","gl","functionName","originalGetterFunc","bind","params","state","cache","Object","defineProperty","configurable","installSetterSpy","setter","originalSetterFunc","_updateCache","valueChanged","oldValue","log","GLState","constructor","copyState","stateStack","assign","seal","push","values","pop","oldValues","key","undefined","trackContextState","global_","global","window","polyfillContext","pushContextState","popContextState"],"mappings":"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","sourcesContent":["// Support for listening to context state changes and intercepting state queries\n//\n// NOTE: this system does not handle buffer bindings\nimport GL from '../constants';\nimport {setParameters, getParameters, GL_PARAMETER_DEFAULTS} from './set-parameters';\nimport assert from '../utils/assert';\n\nexport const clone = x => {\n  return Array.isArray(x) || ArrayBuffer.isView(x) ? x.slice() : x;\n};\n\nexport const deepEqual = (x, y) => {\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return x === y;\n};\n\n// interceptors for WEBGL FUNCTIONS that set WebGLRenderingContext state\n// These \"setters\" map functions to gl parameters\n\nexport const GL_STATE_SETTERS = {\n\n  // GENERIC SETTERS\n\n  enable: (update, cap) => update({\n    [cap]: true\n  }),\n  disable: (update, cap) => update({\n    [cap]: false}\n  ),\n  pixelStorei: (update, pname, param) => update({\n    [pname]: param\n  }),\n  hint: (update, pname, hint) => update({\n    [pname]: hint\n  }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, fb) => {\n    switch (target) {\n    case GL.FRAMEBUFFER:\n      return update({\n        [GL.DRAW_FRAMEBUFFER_BINDING]: fb,\n        [GL.READ_FRAMEBUFFER_BINDING]: fb\n      });\n    case GL.DRAW_FRAMEBUFFER:\n      return update({[GL.DRAW_FRAMEBUFFER_BINDING]: fb});\n    case GL.READ_FRAMEBUFFER:\n      return update({[GL.READ_FRAMEBUFFER_BINDING]: fb});\n    default:\n      return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) => update({\n    [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])}\n  ),\n\n  blendEquation: (update, mode) => update({\n    [GL.BLEND_EQUATION_RGB]: mode,\n    [GL.BLEND_EQUATION_ALPHA]: mode\n  }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) => update({\n    [GL.BLEND_EQUATION_RGB]: modeRGB,\n    [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n  }),\n\n  blendFunc: (update, src, dst) => update({\n    [GL.BLEND_SRC_RGB]: src,\n    [GL.BLEND_DST_RGB]: dst,\n    [GL.BLEND_SRC_ALPHA]: src,\n    [GL.BLEND_DST_ALPHA]: dst\n  }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) => update({\n    [GL.BLEND_SRC_RGB]: srcRGB,\n    [GL.BLEND_DST_RGB]: dstRGB,\n    [GL.BLEND_SRC_ALPHA]: srcAlpha,\n    [GL.BLEND_DST_ALPHA]: dstAlpha\n  }),\n\n  clearColor: (update, r, g, b, a) => update({\n    [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n  }),\n\n  clearDepth: (update, depth) => update({\n    [GL.DEPTH_CLEAR_VALUE]: depth\n  }),\n\n  clearStencil: (update, s) => update({\n    [GL.STENCIL_CLEAR_VALUE]: s\n  }),\n\n  colorMask: (update, r, g, b, a) => update({\n    [GL.COLOR_WRITEMASK]: [r, g, b, a]\n  }),\n\n  cullFace: (update, mode) => update({\n    [GL.CULL_FACE_MODE]: mode\n  }),\n\n  depthFunc: (update, func) => update({\n    [GL.DEPTH_FUNC]: func\n  }),\n\n  depthRange: (update, zNear, zFar) => update({\n    [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n  }),\n\n  depthMask: (update, mask) => update({\n    [GL.DEPTH_WRITEMASK]: mask\n  }),\n\n  frontFace: (update, face) => update({\n    [GL.FRONT_FACE]: face\n  }),\n\n  lineWidth: (update, width) => update({\n    [GL.LINE_WIDTH]: width\n  }),\n\n  polygonOffset: (update, factor, units) => update({\n    [GL.POLYGON_OFFSET_FACTOR]: factor,\n    [GL.POLYGON_OFFSET_UNITS]: units\n  }),\n\n  sampleCoverage: (update, value, invert) => update({\n    [GL.SAMPLE_COVERAGE_VALUE]: value,\n    [GL.SAMPLE_COVERAGE_INVERT]: invert\n  }),\n\n  scissor: (update, x, y, width, height) => update({\n    [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n  }),\n\n  stencilMask: (update, mask) => update({\n    [GL.STENCIL_WRITEMASK]: mask,\n    [GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilMaskSeparate: (update, face, mask) => update({\n    [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilFunc: (update, func, ref, mask) => update({\n    [GL.STENCIL_FUNC]: func,\n    [GL.STENCIL_REF]: ref,\n    [GL.STENCIL_VALUE_MASK]: mask,\n    [GL.STENCIL_BACK_FUNC]: func,\n    [GL.STENCIL_BACK_REF]: ref,\n    [GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) => update({\n    [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n    [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n    [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilOp: (update, fail, zfail, zpass) => update({\n    [GL.STENCIL_FAIL]: fail,\n    [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n    [GL.STENCIL_BACK_FAIL]: fail,\n    [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) => update({\n    [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  viewport: (update, x, y, width, height) => update({\n    [GL.VIEWPORT]: new Int32Array([x, y, width, height])\n  })\n};\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, we must\n    // query first time. They are all primitive (single value)\n    if (!(pname in gl.state.cache)) {\n      gl.state.cache[pname] = originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable ?\n      // Call the getter the params so that it can e.g. serve from a cache\n      gl.state.cache[pname] :\n      // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n      originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-from-cache`, configurable: false});\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const {valueChanged, oldValue} = setter(gl.state._updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      gl.state.log(`gl.${functionName}`, ...params); // eslint-disable-line\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-to-cache`, configurable: false});\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(gl, {\n    copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n    log = () => {} // Logging function, called when gl parameter change calls are actually issued\n  } = {}) {\n    this.gl = gl;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues, this.cache);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      // Check that value hasn't already been shadowed\n      if (!deepEqual(values[key], this.cache[key])) {\n        valueChanged = true;\n        oldValue = this.cache[key];\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = this.cache[key];\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = values[key];\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * can be called multiple times to enable/disable\n * @param {WebGLRenderingContext} - context\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport default function trackContextState(gl, {enable = true, copyState} = {}) {\n  assert(copyState !== undefined);\n  if (!gl.state) {\n    /* global window, global */\n    const global_ = typeof global !== 'undefined' ? global : window;\n    if (global_.polyfillContext) {\n      global_.polyfillContext(gl);\n    }\n\n    // Create a state cache\n    gl.state = new GLState(gl, {copyState, enable});\n\n    // intercept all setter functions in the table\n    for (const key in GL_STATE_SETTERS) {\n      const setter = GL_STATE_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  gl.state.enable = enable;\n\n  return gl;\n}\n\nexport function pushContextState(gl) {\n  if (!gl.state) {\n    trackContextState(gl, {copyState: false});\n  }\n  gl.state.push();\n}\n\nexport function popContextState(gl) {\n  assert(gl.state);\n  gl.state.pop();\n}\n"],"file":"track-context-state.js"}