{"version":3,"sources":["../../../src/webgl/sampler.js"],"names":["isWebGL2","assertWebGL2Context","Resource","Sampler","isSupported","gl","constructor","opts","Object","seal","bind","unit","bindSampler","handle","unbind","_createHandle","createSampler","_deleteHandle","deleteSampler","_getParameter","pname","getSamplerParameter","_setParameter","param","samplerParameterf","samplerParameteri"],"mappings":"AAEA,SAAQA,QAAR,EAAkBC,mBAAlB,QAA4C,gBAA5C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,MAAMC,OAAN,SAAsBD,QAAtB,CAA+B;AAE5C,SAAOE,WAAP,CAAmBC,EAAnB,EAAuB;AACrB,WAAOL,QAAQ,CAACK,EAAD,CAAf;AACD;;AAEDC,EAAAA,WAAW,CAACD,EAAD,EAAKE,IAAL,EAAW;AACpBN,IAAAA,mBAAmB,CAACI,EAAD,CAAnB;AACA,UAAMA,EAAN,EAAUE,IAAV;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAY,IAAZ;AACD;;AAIDC,EAAAA,IAAI,CAACC,IAAD,EAAO;AACT,SAAKN,EAAL,CAAQO,WAAR,CAAoBD,IAApB,EAA0B,KAAKE,MAA/B;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,MAAM,CAACH,IAAD,EAAO;AACX,SAAKN,EAAL,CAAQO,WAAR,CAAoBD,IAApB,EAA0B,IAA1B;AACA,WAAO,IAAP;AACD;;AAIDI,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKV,EAAL,CAAQW,aAAR,EAAP;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,SAAKZ,EAAL,CAAQa,aAAR,CAAsB,KAAKL,MAA3B;AACD;;AAEDM,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,WAAO,KAAKf,EAAL,CAAQgB,mBAAR,CAA4B,KAAKR,MAAjC,EAAyCO,KAAzC,CAAP;AACD;;AAEDE,EAAAA,aAAa,CAACF,KAAD,EAAQG,KAAR,EAAe;AAI1B,YAAQH,KAAR;AACA;AACA;AACE,aAAKf,EAAL,CAAQmB,iBAAR,CAA0B,KAAKX,MAA/B,EAAuCO,KAAvC,EAA8CG,KAA9C;AACA;;AACF;AACE,aAAKlB,EAAL,CAAQoB,iBAAR,CAA0B,KAAKZ,MAA/B,EAAuCO,KAAvC,EAA8CG,KAA9C;AACA;AAPF;;AASA,WAAO,IAAP;AACD;;AApD2C","sourcesContent":["/* eslint-disable no-inline-comments */\nimport GL from '../constants';\nimport {isWebGL2, assertWebGL2Context} from '../webgl-utils';\nimport Resource from './resource';\n\nexport default class Sampler extends Resource {\n\n  static isSupported(gl) {\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, opts) {\n    assertWebGL2Context(gl);\n    super(gl, opts);\n    Object.seal(this);\n  }\n\n  // Bind to the same texture unit as a texture to control sampling for that texture\n  // @param {GLuint} unit - texture unit index\n  bind(unit) {\n    this.gl.bindSampler(unit, this.handle);\n    return this;\n  }\n\n  unbind(unit) {\n    this.gl.bindSampler(unit, null);\n    return this;\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createSampler();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteSampler(this.handle);\n  }\n\n  _getParameter(pname) {\n    return this.gl.getSamplerParameter(this.handle, pname);\n  }\n\n  _setParameter(pname, param) {\n    // Apparently there are some conversion integer/float rules that made\n    // the WebGL committe expose two parameter setting functions in JavaScript.\n    // For now, pick the float version for parameters specified as GLfloat.\n    switch (pname) {\n    case GL.TEXTURE_MIN_LOD:\n    case GL.TEXTURE_MAX_LOD:\n      this.gl.samplerParameterf(this.handle, pname, param);\n      break;\n    default:\n      this.gl.samplerParameteri(this.handle, pname, param);\n      break;\n    }\n    return this;\n  }\n}\n"],"file":"sampler.js"}