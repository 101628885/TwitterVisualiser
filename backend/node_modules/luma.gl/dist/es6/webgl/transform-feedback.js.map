{"version":3,"sources":["../../../src/webgl/transform-feedback.js"],"names":["Resource","isWebGL2","assertWebGL2Context","log","isObjectEmpty","TransformFeedback","isSupported","gl","constructor","props","initialize","stubRemovedMethods","Object","seal","buffers","unused","configuration","bindOnUse","bind","_unbindBuffers","setProps","program","setBuffers","bufferName","setBuffer","locationOrName","buffer","size","offset","location","_getVaryingIndex","warn","id","_bindBuffer","begin","primitiveMode","bindTransformFeedback","handle","_bindBuffers","beginTransformFeedback","end","endTransformFeedback","_getVaryingInfo","getVaryingInfo","Number","isFinite","bufferIndex","index","undefined","bindBufferBase","bindBufferRange","_createHandle","createTransformFeedback","_deleteHandle","deleteTransformFeedback","_bindHandle"],"mappings":"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","sourcesContent":["import GL from '../constants';\nimport Resource from './resource';\nimport {isWebGL2, assertWebGL2Context} from '../webgl-utils';\nimport {log, isObjectEmpty} from '../utils';\n\n// NOTE: The `bindOnUse` flag is a major workaround:\n// See https://github.com/KhronosGroup/WebGL/issues/2346\n\nexport default class TransformFeedback extends Resource {\n\n  static isSupported(gl) {\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGL2Context(gl);\n    super(gl, props);\n\n    this.initialize(props);\n    this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n    Object.seal(this);\n  }\n\n  initialize(props = {}) {\n    this.buffers = {};\n    this.unused = {};\n    this.configuration = null;\n    this.bindOnUse = true;\n\n    // Unbind any currently bound buffers\n    if (!isObjectEmpty(this.buffers)) {\n      this.bind(() => this._unbindBuffers());\n    }\n\n    this.setProps(props);\n    return this;\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    if ('buffers' in props) {\n      this.setBuffers(props.buffers);\n    }\n  }\n\n  setBuffers(buffers = {}) {\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n    return this;\n  }\n\n  setBuffer(locationOrName, buffer, size, offset = 0) {\n    const location = this._getVaryingIndex(locationOrName);\n    if (location < 0) {\n      this.unused[locationOrName] = buffer;\n      log.warn(() => `${this.id} unused varying buffer ${locationOrName}`)();\n      return this;\n    }\n\n    this.buffers[location] = buffer;\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, size, offset);\n    }\n\n    return this;\n  }\n\n  begin(primitiveMode = GL.POINTS) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    this._bindBuffers();\n    this.gl.beginTransformFeedback(primitiveMode);\n    return this;\n  }\n\n  end() {\n    this.gl.endTransformFeedback();\n    this._unbindBuffers();\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _getVaryingInfo(locationOrName) {\n    return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n  }\n\n  _getVaryingIndex(locationOrName) {\n    if (this.configuration) {\n      return this.configuration.getVaryingInfo(locationOrName).location;\n    }\n    const location = Number(locationOrName);\n    return Number.isFinite(location) ? location : -1;\n  }\n\n  // Need to avoid chrome bug where buffer that is already bound to a different target\n  // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n  _bindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, this.buffers[bufferIndex]);\n      }\n    }\n  }\n\n  _unbindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, null);\n      }\n    }\n  }\n\n  _bindBuffer(index, buffer, offset = 0, size) {\n    const handle = buffer && buffer.handle;\n    if (!handle || size === undefined) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      this.gl.bindBufferRange(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle, offset, size);\n    }\n    return this;\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createTransformFeedback();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteTransformFeedback(this.handle);\n  }\n\n  _bindHandle(handle) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n  }\n}\n"],"file":"transform-feedback.js"}