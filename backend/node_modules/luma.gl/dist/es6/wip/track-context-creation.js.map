{"version":3,"sources":["../../../src/wip/track-context-creation.js"],"names":["assert","trackContextCreation","onContextCreate","onContextCreated","HTMLCanvasElement","getContext","prototype","getContextSpy","type","opts","context","canvas","bind","call","WebGLRenderingContext"],"mappings":"AACA,OAAOA,MAAP,MAAmB,iBAAnB;AAOA,OAAO,SAASC,oBAAT,CAA8B;AACnCC,EAAAA,eAAe,GAAG,MAAM,IADW;AAEnCC,EAAAA,gBAAgB,GAAG,MAAM,CAAE;AAFQ,CAA9B,EAGJ;AACDH,EAAAA,MAAM,CAACE,eAAe,IAAIC,gBAApB,CAAN;;AACA,MAAI,OAAOC,iBAAP,KAA6B,WAAjC,EAA8C;AAC5C,UAAMC,UAAU,GAAGD,iBAAiB,CAACE,SAAlB,CAA4BD,UAA/C;;AACAD,IAAAA,iBAAiB,CAACE,SAAlB,CAA4BD,UAA5B,GAAyC,SAASE,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AAE1E,UAAIC,OAAJ;;AACA,UAAIF,IAAI,KAAK,OAAb,EAAsB;AACpBE,QAAAA,OAAO,GAAGR,eAAe,CAAC;AAACS,UAAAA,MAAM,EAAE,IAAT;AAAeH,UAAAA,IAAf;AAAqBC,UAAAA,IAArB;AAA2BJ,UAAAA,UAAU,EAAEA,UAAU,CAACO,IAAX,CAAgB,IAAhB;AAAvC,SAAD,CAAzB;AACD;;AAEDF,MAAAA,OAAO,GAAGA,OAAO,IAAIL,UAAU,CAACQ,IAAX,CAAgB,IAAhB,EAAsBL,IAAtB,EAA4BC,IAA5B,CAArB;;AAEA,UAAIC,OAAO,YAAYI,qBAAvB,EAA8C;AAC5CX,QAAAA,gBAAgB,CAAC;AAACQ,UAAAA,MAAM,EAAE,IAAT;AAAeD,UAAAA,OAAf;AAAwBF,UAAAA,IAAxB;AAA8BC,UAAAA;AAA9B,SAAD,CAAhB;AACD;;AACD,aAAOC,OAAP;AACD,KAbD;AAcD;AACF","sourcesContent":["// Create a WebGL context\nimport assert from '../utils/assert';\n/* global HTMLCanvasElement, WebGLRenderingContext */\n\n/**\n * Installs a spy on Canvas.getContext\n * calls the provided callback with the {context}\n */\nexport function trackContextCreation({\n  onContextCreate = () => null,\n  onContextCreated = () => {}\n}) {\n  assert(onContextCreate || onContextCreated);\n  if (typeof HTMLCanvasElement !== 'undefined') {\n    const getContext = HTMLCanvasElement.prototype.getContext;\n    HTMLCanvasElement.prototype.getContext = function getContextSpy(type, opts) {\n      // Let intercepter create context\n      let context;\n      if (type === 'webgl') {\n        context = onContextCreate({canvas: this, type, opts, getContext: getContext.bind(this)});\n      }\n      // If not, create context\n      context = context || getContext.call(this, type, opts);\n      // Report it created\n      if (context instanceof WebGLRenderingContext) {\n        onContextCreated({canvas: this, context, type, opts});\n      }\n      return context;\n    };\n  }\n}\n"],"file":"track-context-creation.js"}