{"version":3,"sources":["../../../src/multipass/picking-pass.js"],"names":["Pass","pickModels","PickingPass","gl","props","Object","assign","id","inputBuffer","animationProps","pickPosition","_mousePosition","mousePosition","useDevicePixels","models","model","updateModuleSettings","pickingSelectedColor","pickInfo","position","framebuffer","color"],"mappings":";;;;;;;;;;;;;;;;;;AAOA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;IAEqBC,W;;;AACnB,uBAAYC,EAAZ,EAA4B;AAAA,QAAZC,KAAY,uEAAJ,EAAI;;AAAA;;AAAA,oFACpBD,EADoB,EAChBE,MAAM,CAACC,MAAP,CAAc;AAACC,MAAAA,EAAE,EAAE;AAAL,KAAd,EAAoCH,KAApC,CADgB;AAE3B;;;;sCAE8C;AAAA,UAAlCD,EAAkC,QAAlCA,EAAkC;AAAA,UAA9BK,WAA8B,QAA9BA,WAA8B;AAAA,UAAjBC,cAAiB,QAAjBA,cAAiB;AAAA,UACtCL,KADsC,GAC7B,IAD6B,CACtCA,KADsC;AAE7C,UAAMM,YAAY,GAAGD,cAAc,GAAGA,cAAc,CAACE,cAAlB,GAAmCP,KAAK,CAACQ,aAA5E;AACA,UAAMC,eAAe,GAAGJ,cAAc,GAAGA,cAAc,CAACI,eAAlB,GAAoCT,KAAK,CAACS,eAAhF;;AAGA,UAAI,CAACH,YAAL,EAAmB;AAAA;AAAA;AAAA;;AAAA;AACjB,+BAAoB,KAAKN,KAAL,CAAWU,MAA/B,8HAAuC;AAAA,gBAA5BC,KAA4B;AACrCA,YAAAA,KAAK,CAACC,oBAAN,CAA2B;AAACC,cAAAA,oBAAoB,EAAE;AAAvB,aAA3B;AACD;AAHgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIjB;AACD;;AAED,UAAMC,QAAQ,GAAGjB,UAAU,CAACE,EAAD,EAAK;AAC9BW,QAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWU,MADW;AAE9BK,QAAAA,QAAQ,EAAET,YAFoB;AAG9BG,QAAAA,eAAe,EAAfA,eAH8B;AAI9BO,QAAAA,WAAW,EAAEZ;AAJiB,OAAL,CAA3B;AAb6C;AAAA;AAAA;;AAAA;AAqB7C,8BAAoB,KAAKJ,KAAL,CAAWU,MAA/B,mIAAuC;AAAA,cAA5BC,MAA4B;;AACrC,cAAIG,QAAQ,IAAIA,QAAQ,CAACH,KAAT,KAAmBA,MAAnC,EAA0C;AACxC,gBAAME,oBAAoB,GAAIC,QAAQ,IAAIA,QAAQ,CAACG,KAAtB,IAAgC,IAA7D;;AACAN,YAAAA,MAAK,CAACC,oBAAN,CAA2B;AAACC,cAAAA,oBAAoB,EAApBA;AAAD,aAA3B;AACD;AACF;AA1B4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2B9C;;;;EAhCsCjB,I;;SAApBE,W","sourcesContent":["//\n// A pass that renders a given scene directly on screen or into the read buffer\n// for further processing.\n//\n// Attribution: This class and the multipass system were strongly inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport Pass from './pass';\nimport pickModels from '../core/pick-models';\n\nexport default class PickingPass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, Object.assign({id: 'picking-pass'}, props));\n  }\n\n  _renderPass({gl, inputBuffer, animationProps}) {\n    const {props} = this;\n    const pickPosition = animationProps ? animationProps._mousePosition : props.mousePosition;\n    const useDevicePixels = animationProps ? animationProps.useDevicePixels : props.useDevicePixels;\n\n    // Clear picking position if not available\n    if (!pickPosition) {\n      for (const model of this.props.models) {\n        model.updateModuleSettings({pickingSelectedColor: null});\n      }\n      return;\n    }\n\n    const pickInfo = pickModels(gl, {\n      models: this.props.models,\n      position: pickPosition,\n      useDevicePixels,\n      framebuffer: inputBuffer // Use as temporary frame buffer\n    });\n\n    // Highlight it\n    for (const model of this.props.models) {\n      if (pickInfo && pickInfo.model === model) {\n        const pickingSelectedColor = (pickInfo && pickInfo.color) || null;\n        model.updateModuleSettings({pickingSelectedColor});\n      }\n    }\n  }\n}\n"],"file":"picking-pass.js"}