{"version":3,"sources":["../../../src/webgl-context/track-context-state.js"],"names":["setParameters","getParameters","GL_PARAMETER_DEFAULTS","assert","clone","x","Array","isArray","ArrayBuffer","isView","slice","deepEqual","y","isArrayX","isArrayY","length","i","GL_STATE_SETTERS","enable","update","cap","disable","pixelStorei","pname","param","hint","bindFramebuffer","target","fb","blendColor","r","g","b","a","Float32Array","blendEquation","mode","blendEquationSeparate","modeRGB","modeAlpha","blendFunc","src","dst","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","clearColor","clearDepth","depth","clearStencil","s","colorMask","cullFace","depthFunc","func","depthRange","zNear","zFar","depthMask","mask","frontFace","face","lineWidth","width","polygonOffset","factor","units","sampleCoverage","value","invert","scissor","height","Int32Array","stencilMask","stencilMaskSeparate","stencilFunc","ref","stencilFuncSeparate","stencilOp","fail","zfail","zpass","stencilOpSeparate","viewport","installGetterOverride","gl","functionName","originalGetterFunc","bind","state","cache","Object","defineProperty","configurable","installSetterSpy","setter","originalSetterFunc","params","_updateCache","valueChanged","oldValue","log","GLState","copyState","stateStack","assign","seal","values","push","oldValues","pop","key","undefined","trackContextState","global_","global","window","polyfillContext","pushContextState","popContextState"],"mappings":"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","sourcesContent":["// Support for listening to context state changes and intercepting state queries\n//\n// NOTE: this system does not handle buffer bindings\nimport GL from '../constants';\nimport {setParameters, getParameters, GL_PARAMETER_DEFAULTS} from './set-parameters';\nimport assert from '../utils/assert';\n\nexport const clone = x => {\n  return Array.isArray(x) || ArrayBuffer.isView(x) ? x.slice() : x;\n};\n\nexport const deepEqual = (x, y) => {\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return x === y;\n};\n\n// interceptors for WEBGL FUNCTIONS that set WebGLRenderingContext state\n// These \"setters\" map functions to gl parameters\n\nexport const GL_STATE_SETTERS = {\n\n  // GENERIC SETTERS\n\n  enable: (update, cap) => update({\n    [cap]: true\n  }),\n  disable: (update, cap) => update({\n    [cap]: false}\n  ),\n  pixelStorei: (update, pname, param) => update({\n    [pname]: param\n  }),\n  hint: (update, pname, hint) => update({\n    [pname]: hint\n  }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, fb) => {\n    switch (target) {\n    case GL.FRAMEBUFFER:\n      return update({\n        [GL.DRAW_FRAMEBUFFER_BINDING]: fb,\n        [GL.READ_FRAMEBUFFER_BINDING]: fb\n      });\n    case GL.DRAW_FRAMEBUFFER:\n      return update({[GL.DRAW_FRAMEBUFFER_BINDING]: fb});\n    case GL.READ_FRAMEBUFFER:\n      return update({[GL.READ_FRAMEBUFFER_BINDING]: fb});\n    default:\n      return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) => update({\n    [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])}\n  ),\n\n  blendEquation: (update, mode) => update({\n    [GL.BLEND_EQUATION_RGB]: mode,\n    [GL.BLEND_EQUATION_ALPHA]: mode\n  }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) => update({\n    [GL.BLEND_EQUATION_RGB]: modeRGB,\n    [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n  }),\n\n  blendFunc: (update, src, dst) => update({\n    [GL.BLEND_SRC_RGB]: src,\n    [GL.BLEND_DST_RGB]: dst,\n    [GL.BLEND_SRC_ALPHA]: src,\n    [GL.BLEND_DST_ALPHA]: dst\n  }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) => update({\n    [GL.BLEND_SRC_RGB]: srcRGB,\n    [GL.BLEND_DST_RGB]: dstRGB,\n    [GL.BLEND_SRC_ALPHA]: srcAlpha,\n    [GL.BLEND_DST_ALPHA]: dstAlpha\n  }),\n\n  clearColor: (update, r, g, b, a) => update({\n    [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n  }),\n\n  clearDepth: (update, depth) => update({\n    [GL.DEPTH_CLEAR_VALUE]: depth\n  }),\n\n  clearStencil: (update, s) => update({\n    [GL.STENCIL_CLEAR_VALUE]: s\n  }),\n\n  colorMask: (update, r, g, b, a) => update({\n    [GL.COLOR_WRITEMASK]: [r, g, b, a]\n  }),\n\n  cullFace: (update, mode) => update({\n    [GL.CULL_FACE_MODE]: mode\n  }),\n\n  depthFunc: (update, func) => update({\n    [GL.DEPTH_FUNC]: func\n  }),\n\n  depthRange: (update, zNear, zFar) => update({\n    [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n  }),\n\n  depthMask: (update, mask) => update({\n    [GL.DEPTH_WRITEMASK]: mask\n  }),\n\n  frontFace: (update, face) => update({\n    [GL.FRONT_FACE]: face\n  }),\n\n  lineWidth: (update, width) => update({\n    [GL.LINE_WIDTH]: width\n  }),\n\n  polygonOffset: (update, factor, units) => update({\n    [GL.POLYGON_OFFSET_FACTOR]: factor,\n    [GL.POLYGON_OFFSET_UNITS]: units\n  }),\n\n  sampleCoverage: (update, value, invert) => update({\n    [GL.SAMPLE_COVERAGE_VALUE]: value,\n    [GL.SAMPLE_COVERAGE_INVERT]: invert\n  }),\n\n  scissor: (update, x, y, width, height) => update({\n    [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n  }),\n\n  stencilMask: (update, mask) => update({\n    [GL.STENCIL_WRITEMASK]: mask,\n    [GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilMaskSeparate: (update, face, mask) => update({\n    [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilFunc: (update, func, ref, mask) => update({\n    [GL.STENCIL_FUNC]: func,\n    [GL.STENCIL_REF]: ref,\n    [GL.STENCIL_VALUE_MASK]: mask,\n    [GL.STENCIL_BACK_FUNC]: func,\n    [GL.STENCIL_BACK_REF]: ref,\n    [GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) => update({\n    [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n    [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n    [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilOp: (update, fail, zfail, zpass) => update({\n    [GL.STENCIL_FAIL]: fail,\n    [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n    [GL.STENCIL_BACK_FAIL]: fail,\n    [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) => update({\n    [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  viewport: (update, x, y, width, height) => update({\n    [GL.VIEWPORT]: new Int32Array([x, y, width, height])\n  })\n};\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, we must\n    // query first time. They are all primitive (single value)\n    if (!(pname in gl.state.cache)) {\n      gl.state.cache[pname] = originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable ?\n      // Call the getter the params so that it can e.g. serve from a cache\n      gl.state.cache[pname] :\n      // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n      originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-from-cache`, configurable: false});\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const {valueChanged, oldValue} = setter(gl.state._updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      gl.state.log(`gl.${functionName}`, ...params); // eslint-disable-line\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-to-cache`, configurable: false});\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(gl, {\n    copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n    log = () => {} // Logging function, called when gl parameter change calls are actually issued\n  } = {}) {\n    this.gl = gl;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues, this.cache);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      // Check that value hasn't already been shadowed\n      if (!deepEqual(values[key], this.cache[key])) {\n        valueChanged = true;\n        oldValue = this.cache[key];\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = this.cache[key];\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = values[key];\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * can be called multiple times to enable/disable\n * @param {WebGLRenderingContext} - context\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport default function trackContextState(gl, {enable = true, copyState} = {}) {\n  assert(copyState !== undefined);\n  if (!gl.state) {\n    /* global window, global */\n    const global_ = typeof global !== 'undefined' ? global : window;\n    if (global_.polyfillContext) {\n      global_.polyfillContext(gl);\n    }\n\n    // Create a state cache\n    gl.state = new GLState(gl, {copyState, enable});\n\n    // intercept all setter functions in the table\n    for (const key in GL_STATE_SETTERS) {\n      const setter = GL_STATE_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  gl.state.enable = enable;\n\n  return gl;\n}\n\nexport function pushContextState(gl) {\n  if (!gl.state) {\n    trackContextState(gl, {copyState: false});\n  }\n  gl.state.push();\n}\n\nexport function popContextState(gl) {\n  assert(gl.state);\n  gl.state.pop();\n}\n"],"file":"track-context-state.js"}