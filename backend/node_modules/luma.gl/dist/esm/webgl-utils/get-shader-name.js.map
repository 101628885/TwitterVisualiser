{"version":3,"sources":["../../../src/webgl-utils/get-shader-name.js"],"names":["GL_FRAGMENT_SHADER","GL_VERTEX_SHADER","getShaderName","shader","defaultName","SHADER_NAME_REGEXP","match","getShaderTypeName","type"],"mappings":"AAAA,IAAMA,kBAAkB,GAAG,MAA3B;AACA,IAAMC,gBAAgB,GAAG,MAAzB;AAIA,eAAe,SAASC,aAAT,CAAuBC,MAAvB,EAAwD;AAAA,MAAzBC,WAAyB,uEAAX,SAAW;AACrE,MAAMC,kBAAkB,GAAG,mDAA3B;AACA,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAAP,CAAaD,kBAAb,CAAd;AACA,SAAOC,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAcF,WAA1B;AACD;AAED,OAAO,SAASG,iBAAT,CAA2BC,IAA3B,EAAiC;AACtC,UAAQA,IAAR;AACA,SAAKR,kBAAL;AAAyB,aAAO,UAAP;;AACzB,SAAKC,gBAAL;AAAuB,aAAO,QAAP;;AACvB;AAAS,aAAO,cAAP;AAHT;AAKD","sourcesContent":["const GL_FRAGMENT_SHADER = 0x8B30;\nconst GL_VERTEX_SHADER = 0x8B31;\n\n// Supports GLSLIFY style naming of shaders\n// #define SHADER_NAME ...\nexport default function getShaderName(shader, defaultName = 'unnamed') {\n  const SHADER_NAME_REGEXP = /#define[\\s*]SHADER_NAME[\\s*]([A-Za-z0-9_-]+)[\\s*]/;\n  const match = shader.match(SHADER_NAME_REGEXP);\n  return match ? match[1] : defaultName;\n}\n\nexport function getShaderTypeName(type) {\n  switch (type) {\n  case GL_FRAGMENT_SHADER: return 'fragment';\n  case GL_VERTEX_SHADER: return 'vertex';\n  default: return 'unknown type';\n  }\n}\n"],"file":"get-shader-name.js"}