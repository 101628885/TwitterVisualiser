{"version":3,"sources":["../../../src/webgl/transform-feedback.js"],"names":["Resource","isWebGL2","assertWebGL2Context","log","isObjectEmpty","TransformFeedback","gl","props","initialize","stubRemovedMethods","Object","seal","buffers","unused","configuration","bindOnUse","bind","_unbindBuffers","setProps","program","setBuffers","bufferName","setBuffer","locationOrName","buffer","size","offset","location","_getVaryingIndex","warn","id","_bindBuffer","primitiveMode","bindTransformFeedback","handle","_bindBuffers","beginTransformFeedback","endTransformFeedback","getVaryingInfo","Number","isFinite","bufferIndex","index","undefined","bindBufferBase","bindBufferRange","createTransformFeedback","deleteTransformFeedback"],"mappings":"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","sourcesContent":["import GL from '../constants';\nimport Resource from './resource';\nimport {isWebGL2, assertWebGL2Context} from '../webgl-utils';\nimport {log, isObjectEmpty} from '../utils';\n\n// NOTE: The `bindOnUse` flag is a major workaround:\n// See https://github.com/KhronosGroup/WebGL/issues/2346\n\nexport default class TransformFeedback extends Resource {\n\n  static isSupported(gl) {\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGL2Context(gl);\n    super(gl, props);\n\n    this.initialize(props);\n    this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n    Object.seal(this);\n  }\n\n  initialize(props = {}) {\n    this.buffers = {};\n    this.unused = {};\n    this.configuration = null;\n    this.bindOnUse = true;\n\n    // Unbind any currently bound buffers\n    if (!isObjectEmpty(this.buffers)) {\n      this.bind(() => this._unbindBuffers());\n    }\n\n    this.setProps(props);\n    return this;\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    if ('buffers' in props) {\n      this.setBuffers(props.buffers);\n    }\n  }\n\n  setBuffers(buffers = {}) {\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n    return this;\n  }\n\n  setBuffer(locationOrName, buffer, size, offset = 0) {\n    const location = this._getVaryingIndex(locationOrName);\n    if (location < 0) {\n      this.unused[locationOrName] = buffer;\n      log.warn(() => `${this.id} unused varying buffer ${locationOrName}`)();\n      return this;\n    }\n\n    this.buffers[location] = buffer;\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, size, offset);\n    }\n\n    return this;\n  }\n\n  begin(primitiveMode = GL.POINTS) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    this._bindBuffers();\n    this.gl.beginTransformFeedback(primitiveMode);\n    return this;\n  }\n\n  end() {\n    this.gl.endTransformFeedback();\n    this._unbindBuffers();\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _getVaryingInfo(locationOrName) {\n    return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n  }\n\n  _getVaryingIndex(locationOrName) {\n    if (this.configuration) {\n      return this.configuration.getVaryingInfo(locationOrName).location;\n    }\n    const location = Number(locationOrName);\n    return Number.isFinite(location) ? location : -1;\n  }\n\n  // Need to avoid chrome bug where buffer that is already bound to a different target\n  // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n  _bindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, this.buffers[bufferIndex]);\n      }\n    }\n  }\n\n  _unbindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, null);\n      }\n    }\n  }\n\n  _bindBuffer(index, buffer, offset = 0, size) {\n    const handle = buffer && buffer.handle;\n    if (!handle || size === undefined) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      this.gl.bindBufferRange(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle, offset, size);\n    }\n    return this;\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createTransformFeedback();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteTransformFeedback(this.handle);\n  }\n\n  _bindHandle(handle) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n  }\n}\n"],"file":"transform-feedback.js"}