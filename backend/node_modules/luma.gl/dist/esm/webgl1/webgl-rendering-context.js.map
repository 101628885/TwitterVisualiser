{"version":3,"sources":["../../../src/webgl1/webgl-rendering-context.js"],"names":["ERR_HEADLESSGL_LOAD","headlessTypes","module","require","error","console","info","DummyType","global_","global","window","WebGLRenderingContext","webGLTypesAvailable"],"mappings":";;AAUA,OAAO,IAAMA,mBAAmB,gMAAzB;AAKP,OAAO,IAAIC,aAAa,GAAG,IAApB;;AAEP,IAAIC,MAAM,CAACC,OAAX,EAAoB;AAClB,MAAI;AACFF,IAAAA,aAAa,GAAGC,MAAM,CAACC,OAAP,CAAe,SAAf,CAAhB;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,IAAR,CAAaN,mBAAb;AACD;AACF;;IAEKO,S;;;;AAGN,IAAMC,OAAO,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAzD;;WAC4CT,aAAa,IAAIO,O;iCAAtDG,qB;IAAAA,qB,sCAAwBJ,S;;AAE/B,OAAO,IAAMK,mBAAmB,GAAGD,qBAAqB,KAAKJ,SAAtD;AACP,SAAQI,qBAAR","sourcesContent":["// WEBGL BUILT-IN TYPES\n// 1) Exports all WebGL constants as {GL}\n// 2) Enables app to \"import\" WebGL types\n//    - Importing these types makes them known to eslint etc.\n//    - Provides dummy types for WebGL2 when not available to streamline\n//      library code.\n//    - Exports types from headless gl when running under Node.js\n\n/* eslint-disable quotes, no-console */\n/* global console */\nexport const ERR_HEADLESSGL_LOAD = `\\\nluma.gl: WebGL contexts can not be created in Node.js since headless gl is not installed. \\\nIf this is desired, install headless gl using \"npm install gl --save-dev\" or \"yarn add -D gl\"`;\n\n// Load headless gl dynamically, if available\nexport let headlessTypes = null;\n\nif (module.require) {\n  try {\n    headlessTypes = module.require('gl/wrap');\n  } catch (error) {\n    console.info(ERR_HEADLESSGL_LOAD);\n  }\n}\n\nclass DummyType {}\n\n/* global window, global */\nconst global_ = typeof global !== 'undefined' ? global : window;\nconst {WebGLRenderingContext = DummyType} = headlessTypes || global_;\n\nexport const webGLTypesAvailable = WebGLRenderingContext !== DummyType;\nexport {WebGLRenderingContext};\n"],"file":"webgl-rendering-context.js"}