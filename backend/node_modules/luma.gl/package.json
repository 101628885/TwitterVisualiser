{
  "_args": [
    [
      "luma.gl@6.1.0",
      "/Users/mquah/TwitterVisualiser/backend"
    ]
  ],
  "_from": "luma.gl@6.1.0",
  "_id": "luma.gl@6.1.0",
  "_inBundle": false,
  "_integrity": "sha512-aEg2SayzqktMU/biXC3BsBZ2ZReVm8hNsZgU7z2VZWlOn8YzCw/48fpOA1AbWGzWZrmsKJ2c7wMlRdarOqDnIw==",
  "_location": "/luma.gl",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "luma.gl@6.1.0",
    "name": "luma.gl",
    "escapedName": "luma.gl",
    "rawSpec": "6.1.0",
    "saveSpec": null,
    "fetchSpec": "6.1.0"
  },
  "_requiredBy": [
    "/@deck.gl/core"
  ],
  "_resolved": "https://registry.npmjs.org/luma.gl/-/luma.gl-6.1.0.tgz",
  "_spec": "6.1.0",
  "_where": "/Users/mquah/TwitterVisualiser/backend",
  "browser": {
    "gl": false,
    "gl/wrap": false
  },
  "bugs": {
    "url": "https://github.com/uber/luma.gl/issues"
  },
  "contributors": [
    {
      "name": "Ib Green",
      "email": "ib@uber.com"
    },
    {
      "name": "Nicolas Belmonte",
      "email": "nico@uber.com"
    },
    {
      "name": "Rye Terrell"
    },
    {
      "name": "Shan He",
      "email": "shan@uber.com"
    },
    {
      "name": "Mikola Lysenko"
    },
    {
      "name": "Wesam Manassra",
      "email": "manassra@uber.com"
    },
    {
      "name": "Shaojing Li",
      "email": "shaojing@uber.com"
    },
    {
      "name": "Ravi Akenapalli",
      "email": "chandu@uber.com"
    },
    {
      "name": "Xiaoji Chen",
      "email": "xiaoji@uber.com"
    },
    {
      "name": "Jian Huang",
      "email": "jianh@uber.com"
    }
  ],
  "dependencies": {
    "math.gl": "^2.1.0-alpha",
    "probe.gl": "^2.0.0-beta",
    "seer": "^0.2.4",
    "webgl-debug": "^2.0.0"
  },
  "description": "WebGL2 Components for High Performance Rendering and Computation",
  "esnext": "dist/es6/index.js",
  "files": [
    "src",
    "dist",
    "addons.js",
    "constants.js",
    "debug.js",
    "headless.js",
    "webgl1.js"
  ],
  "homepage": "https://github.com/uber/luma.gl#readme",
  "keywords": [
    "webgl",
    "visualization",
    "animation",
    "3d"
  ],
  "license": "MIT",
  "main": "dist/es5/index.js",
  "module": "dist/esm/index.js",
  "name": "luma.gl",
  "nyc": {
    "sourceMap": false,
    "instrument": false,
    "include": [
      "src/**/*.js"
    ],
    "exclude": [
      "test/**/*.js"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/uber/luma.gl.git"
  },
  "scripts": {
    "bench": "node test/bench/node.js",
    "bench-browser": "webpack-dev-server --config test/webpack.config.js  --env.bench --progress --hot --open",
    "build": "npm run clean && npm run build-es6 && npm run build-esm && npm run build-es5 && npm run build-size",
    "build-es5": "BABEL_ENV=es5 babel src --out-dir dist/es5 --source-maps --ignore 'node_modules/'",
    "build-es6": "BABEL_ENV=es6 babel src --out-dir dist/es6 --source-maps --ignore 'node_modules/'",
    "build-esm": "BABEL_ENV=esm babel src --out-dir dist/esm --source-maps --ignore 'node_modules/'",
    "build-size": "(echo \"source size\" ; find src/ -name '*.js' | xargs cat | wc -c) && (echo \"dist/es6 size\" ; find dist/es6 -name '*.js' | xargs cat | wc -c) && (echo \"dist esm size\" ; find dist/esm -name '*.js' | xargs cat | wc -c) && (echo \"dist es5 size\" ; find dist/es5 -name '*.js' | xargs cat | wc -c)",
    "clean": "rm -fr dist dist-es6 && mkdir -p dist/es5 dist/esm dist/es6",
    "collect-metrics": "./scripts/collect-metrics.sh",
    "cover": "NODE_ENV=test nyc --reporter html --reporter cobertura --reporter=lcov npm run test-cover",
    "lint": "eslint src test && npm run lint-yarn",
    "lint-examples": "eslint examples",
    "lint-yarn": "!(grep -q unpm.u yarn.lock) || (echo 'Please rebuild yarn.lock file using public npmrc' && false)",
    "publish-beta": "npm run build && npm run test-fast && npm publish --tag beta",
    "publish-prod": "npm run build && npm run test-fast && npm publish",
    "start": "echo 'Please see luma.gl website for how to run examples' && open http://uber.github.io/luma.gl/#/documentation/getting-started/examples",
    "test": "npm run lint && npm run test-node && npm run build && npm run test-dist &&  npm run collect-metrics && npm run test-browser-puppet",
    "test-browser": "webpack-dev-server --config test/webpack.config.js --progress --hot --open --env.testBrowser ",
    "test-browser-puppet": "node test/start.js test-browser",
    "test-ci": "npm run lint && npm run build && npm run test-node && npm run test-dist &&  npm run collect-metrics",
    "test-cover": "NODE_ENV=test tape -r babel-register test/node.js && nyc report",
    "test-dist": "npm run build-es6 && node test/start.js test-dist",
    "test-fast": "node ../../test/start.js test",
    "test-fp64": "(cd src/shadertools/test && webpack-dev-server --progress --hot --open)",
    "test-node": "node test/node.js",
    "test-shader": "npm run build-dist && budo src/test/fp64-shader.spec.js:build/test-bundle.js --dir test --live --open --watch-glob '**/*.{html,css,scss,js,glsl}' -- -t babelify -t brfs-babel",
    "test-size-es6": "npm run build-es6 && NODE_ENV=production webpack --config test/webpack.config.js --env.import-nothing --env.analyze --env.es6",
    "test-size-esm": "npm run build-esm && NODE_ENV=production webpack --config test/webpack.config.js --env.import-nothing --env.analyze --env.esm"
  },
  "version": "6.1.0"
}
