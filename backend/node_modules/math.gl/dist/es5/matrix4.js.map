{"version":3,"sources":["../../src/matrix4.js"],"names":["IDENTITY","validateMatrix4","m","length","Number","isFinite","validateVector","v","every","Matrix4","args","Array","isArray","arguments","copy","identity","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","check","array","setColumnMajor","i","j","columnMajor","value","q","left","right","bottom","top","near","far","eye","center","up","fovy","Math","PI","aspect","focalDistance","Error","halfY","tan","ortho","fov","a","radians","rx","ry","rz","rotateX","rotateY","rotateZ","axis","vec","vector","out","Vector2","Vector3","Vector4","transformVector2","transformVector3","transformVector4","_transformVector","w","Boolean","x","y","z","translate","MathArray"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {checkNumber} from './lib/common';\nimport Vector2 from './vector2';\nimport Vector3 from './vector3';\nimport Vector4 from './vector4';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport mat4_determinant from 'gl-mat4/determinant';\nimport mat4_fromQuat from 'gl-mat4/fromQuat';\nimport mat4_frustum from 'gl-mat4/frustum';\nimport mat4_lookAt from 'gl-mat4/lookAt';\nimport mat4_ortho from 'gl-mat4/ortho';\nimport mat4_perspective from 'gl-mat4/perspective';\nimport mat4_transpose from 'gl-mat4/transpose';\nimport mat4_invert from 'gl-mat4/invert';\nimport mat4_multiply from 'gl-mat4/multiply';\nimport mat4_rotate from 'gl-mat4/rotate';\nimport mat4_scale from 'gl-mat4/scale';\nimport mat4_translate from 'gl-mat4/translate';\nimport vec2_transformMat4 from 'gl-vec2/transformMat4';\nimport vec3_transformMat4 from 'gl-vec3/transformMat4';\nimport vec4_transformMat4 from 'gl-vec4/transformMat4';\n\nimport mat4_rotateX from 'gl-mat4/rotateX';\nimport mat4_rotateY from 'gl-mat4/rotateY';\nimport mat4_rotateZ from 'gl-mat4/rotateZ';\n\nconst IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nexport function validateMatrix4(m) {\n  return (\n    m.length === 16 &&\n    Number.isFinite(m[0]) &&\n    Number.isFinite(m[1]) &&\n    Number.isFinite(m[2]) &&\n    Number.isFinite(m[3]) &&\n    Number.isFinite(m[4]) &&\n    Number.isFinite(m[5]) &&\n    Number.isFinite(m[6]) &&\n    Number.isFinite(m[7]) &&\n    Number.isFinite(m[8]) &&\n    Number.isFinite(m[9]) &&\n    Number.isFinite(m[10]) &&\n    Number.isFinite(m[11]) &&\n    Number.isFinite(m[12]) &&\n    Number.isFinite(m[13]) &&\n    Number.isFinite(m[14]) &&\n    Number.isFinite(m[15])\n  );\n}\n\nfunction validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n  return v.every(Number.isFinite);\n}\n\nexport default class Matrix4 extends MathArray {\n  constructor(...args) {\n    super();\n    if (Array.isArray(args[0]) && arguments.length === 1) {\n      this.copy(args[0]);\n    } else {\n      this.identity();\n    }\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  /* eslint-disable max-params */\n  // accepts row major order, stores as column major\n  setRowMajor(\n    m00 = 1, m01 = 0, m02 = 0, m03 = 0,\n    m10 = 0, m11 = 1, m12 = 0, m13 = 0,\n    m20 = 0, m21 = 0, m22 = 1, m23 = 0,\n    m30 = 0, m31 = 0, m32 = 0, m33 = 1\n  ) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts column major order, stores in column major order\n  setColumnMajor(\n    m00 = 1, m10 = 0, m20 = 0, m30 = 0,\n    m01 = 0, m11 = 1, m21 = 0, m31 = 0,\n    m02 = 0, m12 = 0, m22 = 1, m32 = 0,\n    m03 = 0, m13 = 0, m23 = 0, m33 = 1\n  ) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  copy(array) {\n    return this.setColumnMajor(...array);\n  }\n\n  // Sets exact values (column major)\n  set(...args) {\n    return this.setColumnMajor(...args);\n  }\n\n  // By default assumes row major indices\n  getElement(i, j, columnMajor = false) {\n    return columnMajor ? this[i][j] : this[j][i];\n  }\n\n  // By default assumes row major indices\n  setElement(i, j, value, columnMajor = false) {\n    if (columnMajor) {\n      this[i][j] = checkNumber(value);\n    } else {\n      this[j][i] = checkNumber(value);\n    }\n    return this;\n  }\n\n  /* eslint-enable max-params */\n\n  // toString() {\n  //   if (config.printRowMajor) {\n  //     mat4_str(this);\n  //   } else {\n  //     mat4_str(this);\n  //   }\n  // }\n\n  // Accessors\n\n  determinant() {\n    return mat4_determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4_fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    mat4_frustum(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}) {\n    mat4_lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4_ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({fovy = 45 * Math.PI / 180, aspect = 1, focalDistance = 1, near = 0.1, far = 500}) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy,\n    fov = 45 * Math.PI / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4_perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4_transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4_invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4_multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4_multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    mat4_rotateX(this, this, radians);\n    // mat4_rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    mat4_rotateY(this, this, radians);\n    // mat4_rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    mat4_rotateZ(this, this, radians);\n    // mat4_rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx)\n      .rotateY(ry)\n      .rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4_rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(vec) {\n    mat4_scale(this, this, vec);\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4_translate(this, this, vec);\n    return this.check();\n  }\n\n  transformVector2(vector, out) {\n    // out = out || [0, 0];\n    out = out || new Vector2();\n    vec2_transformMat4(out, vector, this);\n    validateVector(out, 2);\n    return out;\n  }\n\n  transformVector3(vector, out) {\n    // out = out || [0, 0, 0];\n    out = out || new Vector3();\n    vec3_transformMat4(out, vector, this);\n    validateVector(out, 3);\n    return out;\n  }\n\n  transformVector4(vector, out) {\n    // out = out || [0, 0, 0, 0];\n    out = out || new Vector4();\n    vec4_transformMat4(out, vector, this);\n    validateVector(out, 4);\n    return out.check();\n  }\n\n  // Transforms any 2, 3 or 4 element vector\n  // returns a newly minted Vector2, Vector3 or Vector4\n  transformVector(vector, out) {\n    switch (vector.length) {\n      case 2:\n        return this.transformVector2(vector, out);\n      case 3:\n        return this.transformVector3(vector, out);\n      case 4:\n        return this.transformVector4(vector, out);\n      default:\n        throw new Error('Illegal vector');\n    }\n  }\n\n  transformDirection(vector, out) {\n    return this._transformVector(vector, out, 0);\n  }\n\n  transformPoint(vector, out) {\n    return this._transformVector(vector, out, 1);\n  }\n\n  _transformVector(vector, out, w) {\n    switch (vector.length) {\n      case 2:\n        out = out || new Vector2();\n        // out = out || [0, 0];\n        vec4_transformMat4(out, [vector[0], vector[1], 0, w], this);\n        out.length = 2;\n        validateVector(out, 2);\n        break;\n      case 3:\n        out = out || new Vector3();\n        // out = out || [0, 0, 0];\n        vec4_transformMat4(out, [vector[0], vector[1], vector[2], w], this);\n        out.length = 3;\n        validateVector(out, 3);\n        break;\n      case 4:\n        if (Boolean(w) !== Boolean(vector[3])) {\n          throw new Error('math.gl: Matrix4.transformPoint - invalid vector')\n        }\n        out = out || new Vector4();\n        // out = out || [0, 0, 0, 0];\n        vec4_transformMat4(out, vector, this);\n        validateVector(out, 4);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    return out;\n  }\n\n  // three.js compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n}\n"],"file":"matrix4.js"}