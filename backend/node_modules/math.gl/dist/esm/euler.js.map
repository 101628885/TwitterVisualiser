{"version":3,"sources":["../../src/euler.js"],"names":["MathArray","checkNumber","clamp","Matrix4","Quaternion","Vector3","ERR_UNKNOWN_ORDER","ALMOST_ONE","validateOrder","value","checkOrder","Error","Euler","order","RotationOrders","ZYX","x","y","z","DefaultOrder","arguments","length","Array","isArray","fromVector3","set","array","i","Number","isFinite","check","offset","optionalResult","v","undefined","roll","pitch","yaw","q","_fromRotationMatrix","fromQuaternion","m","_getRotationMatrix","XYZ","rotateX","rotateY","rotateZ","YXZ","ZXY","YZX","XZY","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","Math","asin","abs","atan2","a","cos","c","e","b","sin","d","f","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {checkNumber, clamp} from './lib/common';\nimport Matrix4 from './matrix4';\nimport Quaternion from './quaternion';\nimport Vector3 from './vector3';\n\n// Internal constants\nconst ERR_UNKNOWN_ORDER = 'Unknown Euler angle order';\nconst ALMOST_ONE = 0.99999;\n\nfunction validateOrder(value) {\n  return value >= 0 && value < 6;\n}\n\nfunction checkOrder(value) {\n  if (value < 0 && value >= 6) {\n    throw new Error(ERR_UNKNOWN_ORDER);\n  }\n  return value;\n}\n\nexport default class Euler extends MathArray {\n  // static XYZ = 0;\n  // static YZX = 1;\n  // static ZXY = 2;\n  // static XZY = 3;\n  // static YXZ = 4;\n  // static ZYX = 5;\n  // static RollPitchYaw = 0;\n  // static DefaultOrder = 0;\n\n  // Constants\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  static get ZYX() {\n    return 0;\n  }\n  static get YXZ() {\n    return 1;\n  }\n  static get XZY() {\n    return 2;\n  }\n  static get ZXY() {\n    return 3;\n  }\n  static get YZX() {\n    return 4;\n  }\n  static get XYZ() {\n    return 5;\n  }\n  static get RollPitchYaw() {\n    return 0;\n  }\n\n  static get DefaultOrder() {\n    return Euler.ZYX;\n  }\n  static get RotationOrders() {\n    return ['ZYX', 'YXZ', 'XZY', 'ZXY', 'YZX', 'XYZ'];\n  }\n  static rotationOrder(order) {\n    return Euler.RotationOrders[order];\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  /*\n   * Number|Number[], Number, Number, Number\n   */\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    super();\n    if (arguments.length > 0 && Array.isArray(arguments[0])) {\n      this.fromVector3(...arguments);\n    } else {\n      this.set(x, y, z, order);\n    }\n  }\n\n  // If copied array does contain fourth element, preserves currently set order\n  copy(array) {\n    for (let i = 0; i < 3; ++i) {\n      this[i] = array[i];\n    }\n    this[3] = Number.isFinite(array[3]) || this.order;\n    return this.check();\n  }\n\n  // Sets the three angles, and optionally sets the rotation order\n  // If order is not specified, preserves currently set order\n  set(x = 0, y = 0, z = 0, order) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = Number.isFinite(order) ? order : this[3];\n    return this.check();\n  }\n\n  validate() {\n    return (\n      validateOrder(this[3]) &&\n      Number.isFinite(this[0]) &&\n      Number.isFinite(this[1]) &&\n      Number.isFinite(this[2])\n    );\n  }\n\n  // Does not copy the orientation element\n  toArray(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    return array;\n  }\n\n  // Copies the orientation element\n  toArray4(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    array[offset + 3] = this[3];\n    return array;\n  }\n\n  toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this[0], this[1], this[2]);\n    }\n    return new Vector3(this[0], this[1], this[2]);\n  }\n\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  // x, y, z angle notation (note: only corresponds to axis in XYZ orientation)\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // alpha, beta, gamma angle notation\n  get alpha() {\n    return this[0];\n  }\n  set alpha(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get beta() {\n    return this[1];\n  }\n  set beta(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get gamma() {\n    return this[2];\n  }\n  set gamma(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // phi, theta, psi angle notation\n  get phi() {\n    return this[0];\n  }\n  set phi(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get theta() {\n    return this[1];\n  }\n  set theta(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get psi() {\n    return this[2];\n  }\n  set psi(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // roll, pitch, yaw angle notation\n  get roll() {\n    return this[0];\n  }\n  set roll(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get pitch() {\n    return this[1];\n  }\n  set pitch(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get yaw() {\n    return this[2];\n  }\n  set yaw(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // rotation order, in all three angle notations\n  get order() {\n    return this[3];\n  }\n  set order(value) {\n    return (this[3] = checkOrder(value));\n  }\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n\n  // Constructors\n  fromVector3(v, order) {\n    return this.set(v[0], v[1], v[2], Number.isFinite(order) ? order : this[3]);\n  }\n\n  // TODO - with and without 4th element\n  fromArray(array, offset = 0) {\n    this[0] = array[0 + offset];\n    this[1] = array[1 + offset];\n    this[2] = array[2 + offset];\n    if (array[3] !== undefined) {\n      this[3] = array[3];\n    }\n    return this.check();\n  }\n\n  // Common ZYX rotation order\n  fromRollPitchYaw(roll, pitch, yaw) {\n    return this.set(roll, pitch, yaw, Euler.ZYX);\n  }\n\n  fromQuaternion(q, order) {\n    this._fromRotationMatrix(Matrix4.fromQuaternion(q), order);\n    return this.check();\n  }\n\n  fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    this._fromRotationMatrix(m, order);\n    return this.check();\n  }\n\n  // ACCESSORS\n\n  // @return {Matrix4} a rotation matrix corresponding to rotations\n  //   per the specified euler angles\n  getRotationMatrix(m = new Matrix4()) {\n    this._getRotationMatrix(m);\n    return m;\n  }\n\n  getQuaternion() {\n    const q = new Quaternion();\n    switch (this[4]) {\n      case Euler.XYZ:\n        return q\n          .rotateX(this[0])\n          .rotateY(this[1])\n          .rotateZ(this[2]);\n      case Euler.YXZ:\n        return q\n          .rotateY(this[0])\n          .rotateX(this[1])\n          .rotateZ(this[2]);\n      case Euler.ZXY:\n        return q\n          .rotateZ(this[0])\n          .rotateX(this[1])\n          .rotateY(this[2]);\n      case Euler.ZYX:\n        return q\n          .rotateZ(this[0])\n          .rotateY(this[1])\n          .rotateX(this[2]);\n      case Euler.YZX:\n        return q\n          .rotateY(this[0])\n          .rotateZ(this[1])\n          .rotateX(this[2]);\n      case Euler.XZY:\n        return q\n          .rotateX(this[0])\n          .rotateZ(this[1])\n          .rotateY(this[2]);\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n  }\n\n  // INTERNAL METHODS\n\n  // Concersion from Euler to rotation matrix and from matrix to Euler\n  // Adapted from three.js under MIT license\n\n  // // WARNING: this discards revolution information -bhouston\n  // reorder(newOrder) {\n  //   const q = new Quaternion().setFromEuler(this);\n  //   return this.setFromQuaternion(q, newOrder);\n\n  /* eslint-disable complexity, max-statements, one-var */\n  _fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements;\n    const m11 = te[0],\n      m12 = te[4],\n      m13 = te[8];\n    const m21 = te[1],\n      m22 = te[5],\n      m23 = te[9];\n    const m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n\n    order = order || this[3];\n\n    switch (order) {\n      case Euler.XYZ:\n        this[1] = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m33);\n          this[2] = Math.atan2(-m12, m11);\n        } else {\n          this[0] = Math.atan2(m32, m22);\n          this[2] = 0;\n        }\n        break;\n\n      case Euler.YXZ:\n        this[0] = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < ALMOST_ONE) {\n          this[1] = Math.atan2(m13, m33);\n          this[2] = Math.atan2(m21, m22);\n        } else {\n          this[1] = Math.atan2(-m31, m11);\n          this[2] = 0;\n        }\n        break;\n\n      case Euler.ZXY:\n        this[0] = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < ALMOST_ONE) {\n          this[1] = Math.atan2(-m31, m33);\n          this[2] = Math.atan2(-m12, m22);\n        } else {\n          this[1] = 0;\n          this[2] = Math.atan2(m21, m11);\n        }\n        break;\n\n      case Euler.ZYX:\n        this[1] = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m33);\n          this[2] = Math.atan2(m21, m11);\n        } else {\n          this[0] = 0;\n          this[2] = Math.atan2(-m12, m22);\n        }\n        break;\n\n      case Euler.YZX:\n        this[2] = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m22);\n          this[1] = Math.atan2(-m31, m11);\n        } else {\n          this[0] = 0;\n          this[1] = Math.atan2(m13, m33);\n        }\n        break;\n\n      case Euler.XZY:\n        this[2] = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m22);\n          this[1] = Math.atan2(m13, m11);\n        } else {\n          this[0] = Math.atan2(-m23, m33);\n          this[1] = 0;\n        }\n        break;\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    this[3] = order;\n\n    return this;\n  }\n\n  _getRotationMatrix() {\n    const te = new Matrix4();\n\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const a = Math.cos(x);\n    const c = Math.cos(y);\n    const e = Math.cos(z);\n    const b = Math.sin(x);\n    const d = Math.sin(y);\n    const f = Math.sin(z);\n\n    switch (this[3]) {\n      case Euler.XYZ: {\n        const ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.YXZ: {\n        const ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.ZXY: {\n        const ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.ZYX: {\n        const ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.YZX: {\n        const ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n        break;\n      }\n\n      case Euler.XZY: {\n        const ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n        break;\n      }\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    // last column\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n\n    // bottom row\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n  /* eslint-enable complexity, max-statements, one-var */\n}\n"],"file":"euler.js"}