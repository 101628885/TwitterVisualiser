{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/gl-vec4/transformMat4.js","webpack:///./node_modules/gl-mat4/rotate.js","webpack:///./node_modules/gl-quat/setAxisAngle.js","webpack:///./node_modules/gl-quat/normalize.js","webpack:///./node_modules/gl-vec3/length.js","webpack:///./node_modules/gl-vec3/cross.js","webpack:///./node_modules/gl-mat4/multiply.js","webpack:///./node_modules/gl-vec3/dot.js","webpack:///./node_modules/gl-vec3/normalize.js","webpack:///./node_modules/gl-quat/slerp.js","webpack:///./node_modules/gl-quat/set.js","webpack:///./node_modules/gl-quat/scale.js","webpack:///./node_modules/gl-quat/rotateZ.js","webpack:///./node_modules/gl-quat/rotateY.js","webpack:///./node_modules/gl-quat/rotateX.js","webpack:///./node_modules/gl-quat/multiply.js","webpack:///./node_modules/gl-quat/lerp.js","webpack:///./node_modules/gl-quat/invert.js","webpack:///./node_modules/gl-quat/conjugate.js","webpack:///./node_modules/gl-quat/calculateW.js","webpack:///./node_modules/gl-quat/add.js","webpack:///./node_modules/gl-quat/rotationTo.js","webpack:///./node_modules/gl-quat/dot.js","webpack:///./node_modules/gl-quat/squaredLength.js","webpack:///./node_modules/gl-quat/length.js","webpack:///./node_modules/gl-quat/identity.js","webpack:///./node_modules/gl-quat/fromMat3.js","webpack:///./node_modules/gl-vec3/transformMat4.js","webpack:///./node_modules/gl-vec2/transformMat4.js","webpack:///./node_modules/gl-mat4/translate.js","webpack:///./node_modules/gl-mat4/scale.js","webpack:///./node_modules/gl-mat4/invert.js","webpack:///./node_modules/gl-mat4/transpose.js","webpack:///./node_modules/gl-mat4/perspective.js","webpack:///./node_modules/gl-mat4/ortho.js","webpack:///./node_modules/gl-mat4/lookAt.js","webpack:///./node_modules/gl-mat4/frustum.js","webpack:///./node_modules/gl-mat4/fromQuat.js","webpack:///./node_modules/gl-mat4/determinant.js","webpack:///./node_modules/gl-vec3/rotateZ.js","webpack:///./node_modules/gl-vec3/rotateY.js","webpack:///./node_modules/gl-vec3/rotateX.js","webpack:///./node_modules/gl-vec3/angle.js","webpack:///./node_modules/gl-vec2/cross.js","webpack:///../../../src/lib/common.js","webpack:///../../../src/lib/math-array.js","webpack:///../../../src/lib/vector.js","webpack:///../../src/vector2.js","webpack:///../../src/vector3.js","webpack:///../../src/vector4.js","webpack:///../../src/matrix4.js","webpack:///../../src/quaternion.js","webpack:///../../src/spherical-coordinates.js","webpack:///../../src/euler.js","webpack:///../../../src/addons/polygon.js","webpack:///./test/size/import-nothing.js","webpack:///./node_modules/gl-vec4/set.js","webpack:///./node_modules/gl-vec4/scale.js","webpack:///./node_modules/gl-vec4/lerp.js","webpack:///./node_modules/gl-vec4/add.js","webpack:///./node_modules/gl-vec4/normalize.js","webpack:///./node_modules/gl-vec4/dot.js","webpack:///./node_modules/gl-vec4/squaredLength.js","webpack:///./node_modules/gl-vec4/length.js","webpack:///./node_modules/gl-mat4/identity.js","webpack:///./node_modules/gl-vec3/fromValues.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","out","a","x","y","z","w","rad","axis","t","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","b00","b01","b02","b10","b11","b12","b20","b21","b22","len","Math","sqrt","abs","sin","cos","b","ax","ay","az","bx","by","bz","a30","a31","a32","a33","b0","b1","b2","b3","omega","cosom","sinom","scale0","scale1","aw","bw","acos","a0","a1","a2","a3","dot","invDot","vecDot","vecCross","vecLength","vecNormalize","quatNormalize","quatAxisAngle","tmpvec3","xUnitVec3","yUnitVec3","PI","fRoot","fTrace","j","k","v","b03","b04","b05","b06","b07","b08","b09","det","fovy","aspect","near","far","f","tan","nf","left","right","bottom","top","lr","bt","identity","eye","center","up","x0","x1","x2","y0","y1","y2","z0","z1","z2","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","rl","tb","q","xx","yx","yy","zx","zy","zz","wx","wy","wz","tempA","fromValues","tempB","normalize","cosine","config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","checkNumber","Number","isFinite","Error","concat","round","formatValue","_ref$precision","arguments","length","parseFloat","toPrecision","map","func","Array","isArray","ArrayBuffer","isView","result","array","clone","common_radians","degrees","radians","clamp","min","max","common_equals","_Mathabs","math_array_MathArray","this","constructor","copy","check","ELEMENTS","offset","formatString","opts","string","Float32Array","ai","vector","_Mathmin","_Mathmax","minVector","maxVector","valid","validate","subtract","addScalar","scale","assert","vector_Vector","_MathArray","Vector","vector_classCallCheck","vector_possibleConstructorReturn","__proto__","getPrototypeOf","apply","_Mathsqrt","vector_inherits","key","lengthSquared","mathArray","distanceSquared","dist","product","magnitude","_len","vectors","_key","_i","_len2","_key2","_i2","_len3","_key3","_i3","_len4","_key4","_i4","multiply","distance","add","multiplyScalar","vector2_Vector2","Vector2","_this","vector2_classCallCheck","vector2_possibleConstructorReturn","set","atan2","cross_default","_Mathatan","operation","args","ORIGIN","vector3_Vector3","Vector3","vector3_classCallCheck","vector3_possibleConstructorReturn","angle_default","gl_vec3_cross_default","_ref","_ref$origin","origin","rotateX_default","_ref2","_ref2$origin","rotateY_default","_ref3","_ref3$origin","rotateZ_default","vector4_Vector4","Vector4","vector4_classCallCheck","vector4_possibleConstructorReturn","transformVector","IDENTITY","tempVector4","matrix4_Matrix4","Matrix4","matrix4_classCallCheck","matrix4_possibleConstructorReturn","_MathPI","matrix4_inherits","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","determinant_default","fromQuat_default","frustum_default","_ref2$center","_ref2$up","lookAt_default","_ref3$near","_ref3$far","ortho_default","_ref4","_ref4$fovy","_ref4$aspect","_ref4$focalDistance","focalDistance","_ref4$near","_ref4$far","ortho","_ref5","_ref5$fov","fov","_ref5$aspect","_ref5$near","_ref5$far","perspective_default","transpose_default","invert_default","multiply_default","rotate_default","_ref6","_ref7","_slicedToArray","rx","ry","rz","rotateX","rotateY","rotateZ","vec","scale_default","translate_default","transformMat4_default","gl_vec3_transformMat4_default","gl_vec4_transformMat4_default","transformVector2","transformVector3","transformVector4","translate","IDENTITY_QUATERNION","quaternion_Quaternion","Quaternion","quaternion_classCallCheck","quaternion_possibleConstructorReturn","fromMat3_default","identity_default","length_default","squaredLength_default","dot_default","vectorA","vectorB","rotationTo_default","add_default","calculateW_default","conjugate_default","gl_quat_invert_default","lerp_default","gl_quat_multiply_default","normalize_default","gl_quat_rotateX_default","gl_quat_rotateY_default","gl_quat_rotateZ_default","gl_quat_scale_default","set_default","setAxisAngle_default","_ref$start","start","target","ratio","slerp_default","EARTH_RADIUS_METERS","SphericalCoordinates","phi","theta","radius","bearing","pitch","_ref$radiusScale","altitude","radiusScale","spherical_coordinates_classCallCheck","_NumberisFinite","other","spherical_coordinates_slicedToArray","lng","lat","gl_vec3_length_default","Euler","_this2","order","DefaultOrder","euler_classCallCheck","euler_possibleConstructorReturn","fromVector3","RotationOrders","ZYX","optionalResult","roll","yaw","_fromRotationMatrix","fromQuaternion","_getRotationMatrix","XYZ","YXZ","ZXY","YZX","XZY","_Mathasin","asin","te","elements","_Mathsin","_Mathcos","e","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","checkOrder","Polygon","points","polygon_classCallCheck","isClosed","freeze","area","forEachSegment","p1","p2","getSignedArea","sign","visitor","isPolygon","console","log"],"mappings":"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","file":"test-browser-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","module.exports = transformMat4\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nfunction transformMat4 (out, a, m) {\n  var x = a[0], y = a[1], z = a[2], w = a[3]\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w\n  return out\n}\n","module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};","module.exports = setAxisAngle\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nfunction setAxisAngle (out, axis, rad) {\n  rad = rad * 0.5\n  var s = Math.sin(rad)\n  out[0] = s * axis[0]\n  out[1] = s * axis[1]\n  out[2] = s * axis[2]\n  out[3] = Math.cos(rad)\n  return out\n}\n","/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/normalize')\n","module.exports = length;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    return Math.sqrt(x*x + y*y + z*z)\n}","module.exports = cross;\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2]\n\n    out[0] = ay * bz - az * by\n    out[1] = az * bx - ax * bz\n    out[2] = ax * by - ay * bx\n    return out\n}","module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};","module.exports = dot;\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\n}","module.exports = normalize;\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2]\n    var len = x*x + y*y + z*z\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n        out[2] = a[2] * len\n    }\n    return out\n}","module.exports = slerp\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp (out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  var omega, cosom, sinom, scale0, scale1\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom\n    bx = -bx\n    by = -by\n    bz = -bz\n    bw = -bw\n  }\n  // calculate coefficients\n  if ((1.0 - cosom) > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom)\n    sinom = Math.sin(omega)\n    scale0 = Math.sin((1.0 - t) * omega) / sinom\n    scale1 = Math.sin(t * omega) / sinom\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t\n    scale1 = t\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx\n  out[1] = scale0 * ay + scale1 * by\n  out[2] = scale0 * az + scale1 * bz\n  out[3] = scale0 * aw + scale1 * bw\n\n  return out\n}\n","/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/set')\n","/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/scale')\n","module.exports = rotateZ\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateZ (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bz = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw + ay * bz\n  out[1] = ay * bw - ax * bz\n  out[2] = az * bw + aw * bz\n  out[3] = aw * bw - az * bz\n  return out\n}\n","module.exports = rotateY\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateY (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    by = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw - az * by\n  out[1] = ay * bw + aw * by\n  out[2] = az * bw + ax * by\n  out[3] = aw * bw - ay * by\n  return out\n}\n","module.exports = rotateX\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX (out, a, rad) {\n  rad *= 0.5\n\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = Math.sin(rad), bw = Math.cos(rad)\n\n  out[0] = ax * bw + aw * bx\n  out[1] = ay * bw + az * bx\n  out[2] = az * bw - ay * bx\n  out[3] = aw * bw - ax * bx\n  return out\n}\n","module.exports = multiply\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nfunction multiply (out, a, b) {\n  var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n    bx = b[0], by = b[1], bz = b[2], bw = b[3]\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by\n  out[1] = ay * bw + aw * by + az * bx - ax * bz\n  out[2] = az * bw + aw * bz + ax * by - ay * bx\n  out[3] = aw * bw - ax * bx - ay * by - az * bz\n  return out\n}\n","/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/lerp')\n","module.exports = invert\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert (out, a) {\n  var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n    dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3,\n    invDot = dot ? 1.0 / dot : 0\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot\n  out[1] = -a1 * invDot\n  out[2] = -a2 * invDot\n  out[3] = a3 * invDot\n  return out\n}\n","module.exports = conjugate\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nfunction conjugate (out, a) {\n  out[0] = -a[0]\n  out[1] = -a[1]\n  out[2] = -a[2]\n  out[3] = a[3]\n  return out\n}\n","module.exports = calculateW\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nfunction calculateW (out, a) {\n  var x = a[0], y = a[1], z = a[2]\n\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z))\n  return out\n}\n","/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nmodule.exports = require('gl-vec4/add')\n","var vecDot = require('gl-vec3/dot')\nvar vecCross = require('gl-vec3/cross')\nvar vecLength = require('gl-vec3/length')\nvar vecNormalize = require('gl-vec3/normalize')\n\nvar quatNormalize = require('./normalize')\nvar quatAxisAngle = require('./setAxisAngle')\n\nmodule.exports = rotationTo\n\nvar tmpvec3 = [0, 0, 0]\nvar xUnitVec3 = [1, 0, 0]\nvar yUnitVec3 = [0, 1, 0]\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nfunction rotationTo (out, a, b) {\n  var dot = vecDot(a, b)\n  if (dot < -0.999999) {\n    vecCross(tmpvec3, xUnitVec3, a)\n    if (vecLength(tmpvec3) < 0.000001) {\n      vecCross(tmpvec3, yUnitVec3, a)\n    }\n    vecNormalize(tmpvec3, tmpvec3)\n    quatAxisAngle(out, tmpvec3, Math.PI)\n    return out\n  } else if (dot > 0.999999) {\n    out[0] = 0\n    out[1] = 0\n    out[2] = 0\n    out[3] = 1\n    return out\n  } else {\n    vecCross(tmpvec3, a, b)\n    out[0] = tmpvec3[0]\n    out[1] = tmpvec3[1]\n    out[2] = tmpvec3[2]\n    out[3] = 1 + dot\n    return quatNormalize(out, out)\n  }\n}\n","/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nmodule.exports = require('gl-vec4/dot')\n","/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nmodule.exports = require('gl-vec4/squaredLength')\n","/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nmodule.exports = require('gl-vec4/length')\n","module.exports = identity\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nfunction identity (out) {\n  out[0] = 0\n  out[1] = 0\n  out[2] = 0\n  out[3] = 1\n  return out\n}\n","module.exports = fromMat3\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nfunction fromMat3 (out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8]\n  var fRoot\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0)  // 2w\n    out[3] = 0.5 * fRoot\n    fRoot = 0.5 / fRoot  // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot\n    out[1] = (m[6] - m[2]) * fRoot\n    out[2] = (m[1] - m[3]) * fRoot\n  } else {\n    // |w| <= 1/2\n    var i = 0\n    if (m[4] > m[0]) {\n      i = 1\n    }\n    if (m[8] > m[i * 3 + i]) {\n      i = 2\n    }\n    var j = (i + 1) % 3\n    var k = (i + 2) % 3\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0)\n    out[i] = 0.5 * fRoot\n    fRoot = 0.5 / fRoot\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot\n  }\n\n  return out\n}\n","module.exports = transformMat4;\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15]\n    w = w || 1.0\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w\n    return out\n}","module.exports = transformMat4\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], \n        y = a[1]\n    out[0] = m[0] * x + m[4] * y + m[12]\n    out[1] = m[1] * x + m[5] * y + m[13]\n    return out\n}","module.exports = translate;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};","module.exports = scale;\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};","module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};","module.exports = transpose;\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};","module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = ortho;\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};","var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};","module.exports = frustum;\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};","module.exports = fromQuat;\n\n/**\n * Creates a matrix from a quaternion rotation.\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};","module.exports = determinant;\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};","module.exports = rotateZ;\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c){\n    var p = [], r=[]\n    //Translate point to the origin\n    p[0] = a[0] - b[0]\n    p[1] = a[1] - b[1]\n    p[2] = a[2] - b[2]\n  \n    //perform rotation\n    r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c)\n    r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c)\n    r[2] = p[2]\n  \n    //translate to correct position\n    out[0] = r[0] + b[0]\n    out[1] = r[1] + b[1]\n    out[2] = r[2] + b[2]\n  \n    return out\n}","module.exports = rotateY;\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c){\n    var p = [], r=[]\n    //Translate point to the origin\n    p[0] = a[0] - b[0]\n    p[1] = a[1] - b[1]\n    p[2] = a[2] - b[2]\n  \n    //perform rotation\n    r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c)\n    r[1] = p[1]\n    r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c)\n  \n    //translate to correct position\n    out[0] = r[0] + b[0]\n    out[1] = r[1] + b[1]\n    out[2] = r[2] + b[2]\n  \n    return out\n}","module.exports = rotateX;\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c){\n    var p = [], r=[]\n    //Translate point to the origin\n    p[0] = a[0] - b[0]\n    p[1] = a[1] - b[1]\n    p[2] = a[2] - b[2]\n\n    //perform rotation\n    r[0] = p[0]\n    r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c)\n    r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c)\n\n    //translate to correct position\n    out[0] = r[0] + b[0]\n    out[1] = r[1] + b[1]\n    out[2] = r[2] + b[2]\n\n    return out\n}","module.exports = angle\n\nvar fromValues = require('./fromValues')\nvar normalize = require('./normalize')\nvar dot = require('./dot')\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n    var tempA = fromValues(a[0], a[1], a[2])\n    var tempB = fromValues(b[0], b[1], b[2])\n \n    normalize(tempA, tempA)\n    normalize(tempB, tempB)\n \n    var cosine = dot(tempA, tempB)\n\n    if(cosine > 1.0){\n        return 0\n    } else {\n        return Math.acos(cosine)\n    }     \n}\n","module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-shadow */\n// TODO - remove\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = true;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\n\nexport {config};\n\nexport function configure(options) {\n  if ('epsilon' in options) {\n    config.EPSILON = options.epsilon;\n  }\n\n  if ('debug' in options) {\n    config.debug = options.debug;\n  }\n}\n\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {precision = config.precision || 4} = {}) {\n  value = round(value);\n  return parseFloat(value.toPrecision(precision));\n}\n\nexport function formatAngle(\n  value,\n  {precision = config.precision || 4, printDegrees = config.printAngles} = {}\n) {\n  value = printDegrees ? degrees(value) : value;\n  value = round(value);\n  return `${parseFloat(value.toPrecision(precision))}${printDegrees ? '°' : ''}`;\n}\n\n// Returns true if value is either an array or a typed array\n// Note: does not return true for ArrayBuffers and DataViews\nexport function isArray(value) {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && value.length !== undefined);\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(array);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func) {\n  if (isArray(value)) {\n    const result = clone(value);\n    for (let i = 0; i < result.length; ++i) {\n      result[i] = func(result[i], i, result);\n    }\n    return result;\n  }\n  return func(value);\n}\n\n//\n// GLSL math function equivalents\n// Works on both single values and vectors\n//\n\nexport function radians(degrees) {\n  return map(degrees, degrees => degrees / 180 * Math.PI);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function degrees(radians) {\n  return map(radians, radians => radians * 180 / Math.PI);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\n\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\n\nexport function equals(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a === b) {\n      return true;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {config, formatValue, equals} from './common';\n\nexport default class MathArray extends Array {\n  clone() {\n    return new this.constructor().copy(this).check();\n  }\n\n  copy(array) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i];\n    }\n    return this.check();\n  }\n\n  set(...args) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = args[i] || 0;\n    }\n    return this.check();\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n    return this.check();\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n    return `${opts.printTypes ? this.constructor.name : ''}[${string}]`;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Modifiers\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n    return this.check();\n  }\n\n  inverse() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = 1 / this[i];\n    }\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this; // eslint-disable-line\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n    return this.check();\n  }\n\n  // Debug checks\n\n  validate(array = this) {\n    let valid = array && array.length === this.ELEMENTS;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(array[i]);\n    }\n    return valid;\n  }\n\n  check(array = this) {\n    if (config.debug && !this.validate(array)) {\n      throw new Error(`math.gl: ${this.constructor.name} some fields set to invalid numbers'`);\n    }\n    return this;\n  }\n\n  // three.js compatibility\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(a) {\n    return this.scale(a);\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n    return this.check();\n  }\n}\n","import MathArray from './math-array';\nimport {checkNumber} from './common';\n// import assert from 'assert';\nconst assert = (x, m) => {\n  if (!x) {\n    throw new Error(m);\n  }\n};\n\nexport default class Vector extends MathArray {\n  // ACCESSORS\n\n  // NOTE: `length` is a reserved word for Arrays, so we can't use `v.length()`\n  // Offer `len` and `magnitude`\n\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  lengthSquared() {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize() {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  // negate() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = -this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  // inverse() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = 1 / this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  scaleAndAdd(vector, scale) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = this[i] * scale + vector[i];\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './lib/vector';\nimport {checkNumber} from './lib/common';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport vec2_cross from 'gl-vec2/cross';\n\nexport function validateVector2(v) {\n  return v.length === 2 && Number.isFinite(v[0]) && Number.isFinite(v[1]);\n}\n\nexport default class Vector2 extends Vector {\n  // Creates a new, empty vec2\n  constructor(x = 0, y = 0) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y);\n    }\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 2;\n  }\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n\n  cross(vector) {\n    vec2_cross(this, this, vector);\n    return this.check();\n  }\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  operation(operation, ...args) {\n    operation(this, this, ...args);\n    return this.check();\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './lib/vector';\nimport {checkNumber} from './lib/common';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport vec3_angle from 'gl-vec3/angle';\nimport vec3_cross from 'gl-vec3/cross';\nimport vec3_rotateX from 'gl-vec3/rotateX';\nimport vec3_rotateY from 'gl-vec3/rotateY';\nimport vec3_rotateZ from 'gl-vec3/rotateZ';\n\nconst ORIGIN = [0, 0, 0];\n\nexport function validateVector3(v) {\n  return v.length === 3 && Number.isFinite(v[0]) && Number.isFinite(v[1]) && Number.isFinite(v[2]);\n}\n\nexport default class Vector3 extends Vector {\n  // Creates a new vec3, either empty, or from an array or from values\n  constructor(x = 0, y = 0, z = 0) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z);\n    }\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 3;\n  }\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  angle(vector) {\n    return vec3_angle(this, vector);\n  }\n\n  // MODIFIERS\n\n  cross(vector) {\n    vec3_cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({radians, origin = ORIGIN}) {\n    vec3_rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({radians, origin = ORIGIN}) {\n    vec3_rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({radians, origin = ORIGIN}) {\n    vec3_rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  operation(operation, ...args) {\n    operation(this, this, ...args);\n    return this.check();\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport Vector from './lib/vector';\nimport {checkNumber} from './lib/common';\n\nexport function validateVector4(v) {\n  return (\n    v.length === 4 &&\n    Number.isFinite(v[0]) &&\n    Number.isFinite(v[1]) &&\n    Number.isFinite(v[2]) &&\n    Number.isFinite(v[3])\n  );\n}\n\nexport default class Vector4 extends Vector {\n  // Creates a new, empty vec4\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z, w);\n    }\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    return (this[3] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  // three.js compatibility\n  applyMatrix4(m) {\n    m.transformVector(this, this);\n    return this;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {checkNumber} from './lib/common';\nimport Vector2 from './vector2';\nimport Vector3 from './vector3';\nimport Vector4 from './vector4';\n// import Vector2, {validateVector2} from './vector2';\n// import Vector3, {validateVector3} from './vector3';\n// import Vector4, {validateVector4} from './vector4';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport mat4_determinant from 'gl-mat4/determinant';\nimport mat4_fromQuat from 'gl-mat4/fromQuat';\nimport mat4_frustum from 'gl-mat4/frustum';\nimport mat4_lookAt from 'gl-mat4/lookAt';\nimport mat4_ortho from 'gl-mat4/ortho';\nimport mat4_perspective from 'gl-mat4/perspective';\nimport mat4_transpose from 'gl-mat4/transpose';\nimport mat4_invert from 'gl-mat4/invert';\nimport mat4_multiply from 'gl-mat4/multiply';\nimport mat4_rotate from 'gl-mat4/rotate';\nimport mat4_scale from 'gl-mat4/scale';\nimport mat4_translate from 'gl-mat4/translate';\nimport vec2_transformMat4 from 'gl-vec2/transformMat4';\nimport vec3_transformMat4 from 'gl-vec3/transformMat4';\nimport vec4_transformMat4 from 'gl-vec4/transformMat4';\n\n// import mat4_rotateX from 'gl-mat4/rotateX';\n// import mat4_rotateY from 'gl-mat4/rotateY';\n// import mat4_rotateZ from 'gl-mat4/rotateZ';\n\nconst IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nexport function validateMatrix4(m) {\n  return (\n    m.length === 16 &&\n    Number.isFinite(m[0]) &&\n    Number.isFinite(m[1]) &&\n    Number.isFinite(m[2]) &&\n    Number.isFinite(m[3]) &&\n    Number.isFinite(m[4]) &&\n    Number.isFinite(m[5]) &&\n    Number.isFinite(m[6]) &&\n    Number.isFinite(m[7]) &&\n    Number.isFinite(m[8]) &&\n    Number.isFinite(m[9]) &&\n    Number.isFinite(m[10]) &&\n    Number.isFinite(m[11]) &&\n    Number.isFinite(m[12]) &&\n    Number.isFinite(m[13]) &&\n    Number.isFinite(m[14]) &&\n    Number.isFinite(m[15])\n  );\n}\n\nconst tempVector4 = [0, 0, 0, 0];\n\nexport default class Matrix4 extends MathArray {\n  constructor(...args) {\n    super();\n    if (Array.isArray(args[0]) && arguments.length === 1) {\n      this.copy(args[0]);\n    } else {\n      this.identity();\n    }\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  /* eslint-disable max-params */\n  // accepts row major order, stores as column major\n  setRowMajor(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  // accepts row major order and stores in row major order\n  setColumnMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m01;\n    this[2] = m02;\n    this[3] = m03;\n    this[4] = m10;\n    this[5] = m11;\n    this[6] = m12;\n    this[7] = m13;\n    this[8] = m20;\n    this[9] = m21;\n    this[10] = m22;\n    this[11] = m23;\n    this[12] = m30;\n    this[13] = m31;\n    this[14] = m32;\n    this[15] = m33;\n    return this.check();\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  // Assumes row major format\n  set(...args) {\n    return this.setRowMajor(...args);\n  }\n\n  // By default assumes row major indices\n  getElement(i, j, columnMajor = false) {\n    return columnMajor ? this[i][j] : this[j][i];\n  }\n\n  // By default assumes row major indices\n  setElement(i, j, value, columnMajor = false) {\n    if (columnMajor) {\n      this[j][i] = checkNumber(value);\n    } else {\n      this[j][i] = checkNumber(value);\n    }\n    return this;\n  }\n\n  /* eslint-enable max-params */\n\n  // toString() {\n  //   if (config.printRowMajor) {\n  //     mat4_str(this);\n  //   } else {\n  //     mat4_str(this);\n  //   }\n  // }\n\n  // Accessors\n\n  determinant() {\n    return mat4_determinant(this);\n  }\n\n  // Constructors\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  // Calculates a 4x4 matrix from the given quaternion\n  // q quat  Quaternion to create matrix from\n  fromQuaternion(q) {\n    mat4_fromQuat(this, q);\n    return this.check();\n  }\n\n  // Generates a frustum matrix with the given bounds\n  // left  Number  Left bound of the frustum\n  // right Number  Right bound of the frustum\n  // bottom  Number  Bottom bound of the frustum\n  // top Number  Top bound of the frustum\n  // near  Number  Near bound of the frustum\n  // far Number  Far bound of the frustum\n  frustum({left, right, bottom, top, near, far}) {\n    mat4_frustum(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates a look-at matrix with the given eye position, focal point,\n  // and up axis\n  // eye vec3  Position of the viewer\n  // center  vec3  Point the viewer is looking at\n  // up  vec3  vec3 pointing up\n  lookAt({eye, center = [0, 0, 0], up = [0, 1, 0]}) {\n    mat4_lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  // Generates a orthogonal projection matrix with the given bounds\n  // from \"traditional\" view space parameters\n  // left  number  Left bound of the frustum\n  // right number  Right bound of the frustum\n  // bottom  number  Bottom bound of the frustum\n  // top number  Top bound of the frustum\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  ortho({left, right, bottom, top, near = 0.1, far = 500}) {\n    mat4_ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  // Generates an orthogonal projection matrix with the same parameters\n  // as a perspective matrix (plus focalDistance)\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // focalDistance distance in the view frustum used for extent calculations\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  orthographic({fovy = 45 * Math.PI / 180, aspect = 1, focalDistance = 1, near = 0.1, far = 500}) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY); // focus_plane is the distance from the camera\n    const right = top * aspect;\n\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  // Generates a perspective projection matrix with the given bounds\n  // fovy  number  Vertical field of view in radians\n  // aspect  number  Aspect ratio. typically viewport width/height\n  // near  number  Near bound of the frustum\n  // far number  Far bound of the frustum\n  perspective({\n    fovy,\n    fov = 45 * Math.PI / 180, // DEPRECATED\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n    mat4_perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  // Modifiers\n\n  transpose() {\n    mat4_transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4_invert(this, this);\n    return this.check();\n  }\n\n  // Operations\n\n  multiplyLeft(a) {\n    mat4_multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4_multiply(this, this, a);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the X axis\n  rotateX(radians) {\n    // mat4_rotateX(this, this, radians);\n    mat4_rotate(this, this, radians, [1, 0, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Y axis.\n  rotateY(radians) {\n    // mat4_rotateY(this, this, radians);\n    mat4_rotate(this, this, radians, [0, 1, 0]);\n    return this.check();\n  }\n\n  // Rotates a matrix by the given angle around the Z axis.\n  rotateZ(radians) {\n    // mat4_rotateZ(this, this, radians);\n    mat4_rotate(this, this, radians, [0, 0, 1]);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx)\n      .rotateY(ry)\n      .rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4_rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(vec) {\n    mat4_scale(this, this, vec);\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4_translate(this, this, vec);\n    return this.check();\n  }\n\n  transformVector2(vector, out) {\n    out = out || new Vector2();\n    vec2_transformMat4(out, vector, this);\n    // assert(validateVector2(out));\n    return out;\n  }\n\n  transformVector3(vector, out = new Vector3()) {\n    out = out || new Vector3();\n    vec3_transformMat4(out, vector, this);\n    // assert(validateVector3(out));\n    return out;\n  }\n\n  transformVector4(vector, out = new Vector4()) {\n    out = out || new Vector4();\n    vec4_transformMat4(out, vector, this);\n    // assert(validateVector4(out));\n    return out.check();\n  }\n\n  // Transforms any 2, 3 or 4 element vector\n  // returns a newly minted Vector2, Vector3 or Vector4\n  transformVector(vector, out) {\n    switch (vector.length) {\n      case 2:\n        return this.transformVector2(vector, out);\n      case 3:\n        return this.transformVector3(vector, out);\n      case 4:\n        return this.transformVector4(vector, out);\n      default:\n        throw new Error('Illegal vector');\n    }\n  }\n\n  transformDirection(vector, out) {\n    switch (vector.length) {\n      case 2:\n        vec4_transformMat4(tempVector4, [vector[0], vector[1], 0, 0], this);\n        out = out || new Vector2();\n        [out[0], out[1]] = tempVector4;\n        break;\n      case 3:\n        vec4_transformMat4(tempVector4, [vector[0], vector[1], vector[2], 0], this);\n        out = out || new Vector3();\n        [out[0], out[1], out[2]] = tempVector4;\n        break;\n      case 4:\n        // assert(vector[3] === 0);\n        out = out || new Vector4();\n        vec4_transformMat4(out, vector, this);\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    return out;\n  }\n\n  transformPoint(vector, out) {\n    switch (vector.length) {\n      case 2:\n        out = out || new Vector2();\n        vec4_transformMat4(out, [vector[0], vector[1], 0, 1], this);\n        out.length = 2;\n        // assert(validateVector2(out));\n        break;\n      case 3:\n        out = out || new Vector3();\n        vec4_transformMat4(out, [vector[0], vector[1], vector[2], 1], this);\n        out.length = 3;\n        // assert(validateVector3(out));\n        break;\n      case 4:\n        // assert(vector[3] !== 0);\n        out = out || new Vector4();\n        vec4_transformMat4(out, vector, this);\n        // assert(validateVector4(out));\n        break;\n      default:\n        throw new Error('Illegal vector');\n    }\n    return out;\n  }\n\n  // three.js compatibility\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {checkNumber} from './lib/common';\n\n// gl-matrix is too big. Cherry-pick individual imports from stack.gl version\n/* eslint-disable camelcase */\nimport quat_fromMat3 from 'gl-quat/fromMat3';\nimport quat_identity from 'gl-quat/identity';\nimport quat_length from 'gl-quat/length';\nimport quat_squaredLength from 'gl-quat/squaredLength';\nimport quat_dot from 'gl-quat/dot';\n// import quat_getAxisAngle from 'gl-quat/getAxisAngle';\nimport quat_rotationTo from 'gl-quat/rotationTo';\nimport quat_add from 'gl-quat/add';\nimport quat_calculateW from 'gl-quat/calculateW';\nimport quat_conjugate from 'gl-quat/conjugate';\nimport quat_invert from 'gl-quat/invert';\nimport quat_lerp from 'gl-quat/lerp';\nimport quat_multiply from 'gl-quat/multiply';\nimport quat_normalize from 'gl-quat/normalize';\nimport quat_rotateX from 'gl-quat/rotateX';\nimport quat_rotateY from 'gl-quat/rotateY';\nimport quat_rotateZ from 'gl-quat/rotateZ';\nimport quat_scale from 'gl-quat/scale';\nimport quat_set from 'gl-quat/set';\nimport quat_setAxisAngle from 'gl-quat/setAxisAngle';\nimport quat_slerp from 'gl-quat/slerp';\n\nconst IDENTITY_QUATERNION = [0, 0, 0, 1];\n\nexport function validateQuaternion(q) {\n  return (\n    q.length === 4 &&\n    Number.isFinite(q[0]) &&\n    Number.isFinite(q[1]) &&\n    Number.isFinite(q[2]) &&\n    Number.isFinite(q[3])\n  );\n}\n\nexport default class Quaternion extends MathArray {\n  // Creates a new identity quat\n  constructor(x = 0, y = 0, z = 0, w = 1) {\n    super();\n    if (Array.isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      this.set(x, y, z, w);\n    }\n  }\n\n  // Creates a quaternion from the given 3x3 rotation matrix.\n  // NOTE: The resultant quaternion is not normalized, so you should\n  // be sure to renormalize the quaternion yourself where necessary.\n  fromMatrix3(m) {\n    quat_fromMat3(this, m);\n    return this.check();\n  }\n\n  // Creates a new quat initialized with the given values\n  fromValues(x, y, z, w) {\n    return this.set(x, y, z, w);\n  }\n\n  // Set a quat to the identity quaternion\n  identity() {\n    quat_identity(this);\n    return this.check();\n  }\n\n  // Getters/setters\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  get ELEMENTS() {\n    return 4;\n  }\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n  get w() {\n    return this[3];\n  }\n  set w(value) {\n    return (this[3] = checkNumber(value));\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  // Calculates the length of a quat\n  length() {\n    return quat_length(this);\n  }\n\n  // Calculates the squared length of a quat\n  squaredLength(a) {\n    return quat_squaredLength(this);\n  }\n\n  // Calculates the dot product of two quat's\n  // @return {Number}\n  dot(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.dot only takes one argument');\n    }\n    return quat_dot(this, a);\n  }\n\n  // Gets the rotation axis and angle for a given quaternion.\n  // If a quaternion is created with setAxisAngle, this method will\n  // return the same values as providied in the original parameter\n  // list OR functionally equivalent values.\n  // Example: The quaternion formed by axis [0, 0, 1] and angle -90\n  // is the same as the quaternion formed by [0, 0, 1] and 270.\n  // This method favors the latter.\n  // @return {{[x,y,z], Number}}\n  // getAxisAngle() {\n  //   const axis = [];\n  //   const angle = quat_getAxisAngle(axis, this);\n  //   return {axis, angle};\n  // }\n\n  // MODIFIERS\n\n  // Sets a quaternion to represent the shortest rotation from one vector\n  // to another. Both vectors are assumed to be unit length.\n  rotationTo(vectorA, vectorB) {\n    quat_rotationTo(this, vectorA, vectorB);\n    return this.check();\n  }\n\n  // Sets the specified quaternion with values corresponding to the given axes.\n  // Each axis is a vec3 and is expected to be unit length and perpendicular\n  // to all other specified axes.\n  // setAxes() {\n  //   Number\n  // }\n\n  // Performs a spherical linear interpolation with two control points\n  // sqlerp() {\n  //   Number;\n  // }\n\n  // Adds two quat's\n  add(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.add only takes one argument');\n    }\n    quat_add(this, a);\n    return this.check();\n  }\n\n  // Calculates the W component of a quat from the X, Y, and Z components.\n  // Any existing W component will be ignored.\n  calculateW() {\n    quat_calculateW(this, this);\n    return this.check();\n  }\n\n  // Calculates the conjugate of a quat If the quaternion is normalized,\n  // this function is faster than quat_inverse and produces the same result.\n  conjugate() {\n    quat_conjugate(this, this);\n    return this.check();\n  }\n\n  // Calculates the inverse of a quat\n  invert() {\n    quat_invert(this, this);\n    return this.check();\n  }\n\n  // Performs a linear interpolation between two quat's\n  lerp(a, b, t) {\n    quat_lerp(this, a, b, t);\n    return this.check();\n  }\n\n  // Multiplies two quat's\n  multiply(a, b) {\n    if (b !== undefined) {\n      throw new Error('Quaternion.multiply only takes one argument');\n    }\n    quat_multiply(this, this, b);\n    return this.check();\n  }\n\n  // Normalize a quat\n  normalize() {\n    quat_normalize(this, this);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the X axis\n  rotateX(rad) {\n    quat_rotateX(this, this, rad);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the Y axis\n  rotateY(rad) {\n    quat_rotateY(this, this, rad);\n    return this.check();\n  }\n\n  // Rotates a quaternion by the given angle about the Z axis\n  rotateZ(rad) {\n    quat_rotateZ(this, this, rad);\n    return this.check();\n  }\n\n  // Scales a quat by a scalar number\n  scale(b) {\n    quat_scale(this, this, b);\n    return this.check();\n  }\n\n  // Set the components of a quat to the given values\n  set(i, j, k, l) {\n    quat_set(this, i, j, k, l);\n    return this.check();\n  }\n\n  // Sets a quat from the given angle and rotation axis, then returns it.\n  setAxisAngle(axis, rad) {\n    quat_setAxisAngle(this, axis, rad);\n    return this.check();\n  }\n\n  // Performs a spherical linear interpolation between two quat\n  slerp({start = IDENTITY_QUATERNION, target, ratio}) {\n    quat_slerp(this, start, target, ratio);\n    return this.check();\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// Adaptation of THREE.js Spherical class, under MIT license\nimport {formatValue, equals, config} from './lib/common';\nimport {degrees, radians, clamp} from './lib/common';\nimport Vector3 from './vector3';\n\n/* eslint-disable camelcase */\nimport vec3_length from 'gl-vec3/length';\n// import assert from 'assert';\n\n// TODO - import epsilon\nconst EPSILON = 0.000001;\n\nconst EARTH_RADIUS_METERS = 6.371e6;\n\n// Todo [rho, theta, phi] ?\nexport default class SphericalCoordinates {\n  /**\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   * The poles (phi) are at the positive and negative y axis.\n   * The equator starts at positive z.\n   * @class\n   * @param {Number} phi=0 - rotation around X (latitude)\n   * @param {Number} theta=0 - rotation around Y (longitude)\n   * @param {Number} radius=1 - Distance from center\n   */\n  /* eslint-disable complexity */\n  constructor({\n    phi,\n    theta,\n    radius,\n    bearing,\n    pitch,\n    altitude,\n    radiusScale = EARTH_RADIUS_METERS\n  } = {}) {\n    if (arguments.length === 0) {\n      this.phi = 0;\n      this.theta = 0;\n      this.radius = 1;\n    } else if (Number.isFinite(phi) || Number.isFinite(theta)) {\n      this.phi = phi || 0; // up / down towards top and bottom pole\n      this.theta = theta || 0; // around the equator of the sphere\n    } else if (Number.isFinite(bearing) || Number.isFinite(pitch)) {\n      this.bearing = bearing || 0; // up / down towards top and bottom pole\n      this.pitch = pitch || 0; // around the equator of the sphere\n    }\n    this.radius = radius || 1; // radial distance from center\n    this.radiusScale = radiusScale || 1; // Used by lngLatZ\n    this.check();\n  }\n  /* eslint-enable complexity */\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString({printTypes, printDegrees}) {\n    const f = formatValue;\n    return `${printTypes ? 'Spherical' : ''}\\\n[rho:${f(this.radius)},theta:${f(this.theta)},phi:${f(this.phi)}]`;\n  }\n\n  equals(other) {\n    return (\n      equals(this.radius, other.radius) &&\n      equals(this.theta, other.theta) &&\n      equals(this.phi, other.phi)\n    );\n  }\n\n  exactEquals(other) {\n    return this.radius === other.radius && this.theta === other.theta && this.phi === other.phi;\n  }\n\n  /* eslint-disable brace-style */\n  // Cartographic (bearing 0 north, pitch 0 look from above)\n  get bearing() {\n    return 180 - degrees(this.phi);\n  }\n  set bearing(v) {\n    this.phi = Math.PI - radians(v);\n  }\n  get pitch() {\n    return degrees(this.theta);\n  }\n  set pitch(v) {\n    this.theta = radians(v);\n  }\n  // get pitch() { return 90 - degrees(this.phi); }\n  // set pitch(v) { this.phi = radians(v) + Math.PI / 2; }\n  // get altitude() { return this.radius - 1; } // relative altitude\n\n  // lnglatZ coordinates\n  get longitude() {\n    return degrees(this.phi);\n  }\n  get latitude() {\n    return degrees(this.theta);\n  }\n  get lng() {\n    return degrees(this.phi);\n  }\n  get lat() {\n    return degrees(this.theta);\n  }\n  get z() {\n    return (this.radius - 1) * this.radiusScale;\n  }\n  /* eslint-enable brace-style */\n\n  set(radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this.check();\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  copy(other) {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this.check();\n  }\n\n  fromLngLatZ([lng, lat, z]) {\n    this.radius = 1 + z / this.radiusScale;\n    this.phi = radians(lat);\n    this.theta = radians(lng);\n  }\n\n  fromVector3(v) {\n    this.radius = vec3_length(v);\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(v[0], v[1]); // equator angle around y-up axis\n      this.phi = Math.acos(clamp(v[2] / this.radius, -1, 1)); // polar angle\n    }\n    return this.check();\n  }\n\n  toVector3() {\n    return new Vector3(0, 0, this.radius)\n      .rotateX({radians: this.theta})\n      .rotateZ({radians: this.phi});\n  }\n\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe() {\n    this.phi = Math.max(EPSILON, Math.min(Math.PI - EPSILON, this.phi));\n  }\n\n  check() {\n    // this.makeSafe();\n    if (!Number.isFinite(this.phi) || !Number.isFinite(this.theta) || !(this.radius > 0)) {\n      throw new Error('SphericalCoordinates: some fields set to invalid numbers');\n    }\n    return this;\n  }\n}\n","// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MathArray from './lib/math-array';\nimport {checkNumber, clamp} from './lib/common';\nimport Matrix4 from './matrix4';\nimport Quaternion from './quaternion';\nimport Vector3 from './vector3';\n\n// Internal constants\nconst ERR_UNKNOWN_ORDER = 'Unknown Euler angle order';\nconst ALMOST_ONE = 0.99999;\n\nfunction validateOrder(value) {\n  return value >= 0 && value < 6;\n}\n\nfunction checkOrder(value) {\n  if (value < 0 && value >= 6) {\n    throw new Error(ERR_UNKNOWN_ORDER);\n  }\n  return value;\n}\n\nexport default class Euler extends MathArray {\n  // static XYZ = 0;\n  // static YZX = 1;\n  // static ZXY = 2;\n  // static XZY = 3;\n  // static YXZ = 4;\n  // static ZYX = 5;\n  // static RollPitchYaw = 0;\n  // static DefaultOrder = 0;\n\n  // Constants\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  static get ZYX() {\n    return 0;\n  }\n  static get YXZ() {\n    return 1;\n  }\n  static get XZY() {\n    return 2;\n  }\n  static get ZXY() {\n    return 3;\n  }\n  static get YZX() {\n    return 4;\n  }\n  static get XYZ() {\n    return 5;\n  }\n  static get RollPitchYaw() {\n    return 0;\n  }\n\n  static get DefaultOrder() {\n    return Euler.ZYX;\n  }\n  static get RotationOrders() {\n    return ['ZYX', 'YXZ', 'XZY', 'ZXY', 'YZX', 'XYZ'];\n  }\n  static rotationOrder(order) {\n    return Euler.RotationOrders[order];\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n  /* eslint-enable no-multi-spaces, brace-style, no-return-assign */\n\n  /*\n   * Number|Number[], Number, Number, Number\n   */\n  constructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n    super();\n    if (arguments.length > 0 && Array.isArray(arguments[0])) {\n      this.fromVector3(...arguments);\n    } else {\n      this.set(x, y, z, order);\n    }\n  }\n\n  // If copied array does contain fourth element, preserves currently set order\n  copy(array) {\n    for (let i = 0; i < 3; ++i) {\n      this[i] = array[i];\n    }\n    this[3] = Number.isFinite(array[3]) || this.order;\n    return this.check();\n  }\n\n  // Sets the three angles, and optionally sets the rotation order\n  // If order is not specified, preserves currently set order\n  set(x = 0, y = 0, z = 0, order) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = Number.isFinite(order) ? order : this[3];\n    return this.check();\n  }\n\n  validate() {\n    return (\n      validateOrder(this[3]) &&\n      Number.isFinite(this[0]) &&\n      Number.isFinite(this[1]) &&\n      Number.isFinite(this[2])\n    );\n  }\n\n  // Does not copy the orientation element\n  toArray(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    return array;\n  }\n\n  // Copies the orientation element\n  toArray4(array = [], offset = 0) {\n    array[offset] = this[0];\n    array[offset + 1] = this[1];\n    array[offset + 2] = this[2];\n    array[offset + 3] = this[3];\n    return array;\n  }\n\n  toVector3(optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this[0], this[1], this[2]);\n    }\n    return new Vector3(this[0], this[1], this[2]);\n  }\n\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n  // x, y, z angle notation (note: only corresponds to axis in XYZ orientation)\n  get x() {\n    return this[0];\n  }\n  set x(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get y() {\n    return this[1];\n  }\n  set y(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get z() {\n    return this[2];\n  }\n  set z(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // alpha, beta, gamma angle notation\n  get alpha() {\n    return this[0];\n  }\n  set alpha(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get beta() {\n    return this[1];\n  }\n  set beta(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get gamma() {\n    return this[2];\n  }\n  set gamma(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // phi, theta, psi angle notation\n  get phi() {\n    return this[0];\n  }\n  set phi(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get theta() {\n    return this[1];\n  }\n  set theta(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get psi() {\n    return this[2];\n  }\n  set psi(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // roll, pitch, yaw angle notation\n  get roll() {\n    return this[0];\n  }\n  set roll(value) {\n    return (this[0] = checkNumber(value));\n  }\n  get pitch() {\n    return this[1];\n  }\n  set pitch(value) {\n    return (this[1] = checkNumber(value));\n  }\n  get yaw() {\n    return this[2];\n  }\n  set yaw(value) {\n    return (this[2] = checkNumber(value));\n  }\n\n  // rotation order, in all three angle notations\n  get order() {\n    return this[3];\n  }\n  set order(value) {\n    return (this[3] = checkOrder(value));\n  }\n  /* eslint-disable no-multi-spaces, brace-style, no-return-assign */\n\n  // Constructors\n  fromVector3(v, order) {\n    return this.set(v[0], v[1], v[2], Number.isFinite(order) ? order : this[3]);\n  }\n\n  // TODO - with and without 4th element\n  fromArray(array, offset = 0) {\n    this[0] = array[0 + offset];\n    this[1] = array[1 + offset];\n    this[2] = array[2 + offset];\n    if (array[3] !== undefined) {\n      this[3] = array[3];\n    }\n    return this.check();\n  }\n\n  // Common ZYX rotation order\n  fromRollPitchYaw(roll, pitch, yaw) {\n    return this.set(roll, pitch, yaw, Euler.ZYX);\n  }\n\n  fromQuaternion(q, order) {\n    this._fromRotationMatrix(Matrix4.fromQuaternion(q), order);\n    return this.check();\n  }\n\n  fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    this._fromRotationMatrix(m, order);\n    return this.check();\n  }\n\n  // ACCESSORS\n\n  // @return {Matrix4} a rotation matrix corresponding to rotations\n  //   per the specified euler angles\n  getRotationMatrix(m = new Matrix4()) {\n    this._getRotationMatrix(m);\n    return m;\n  }\n\n  getQuaternion() {\n    const q = new Quaternion();\n    switch (this[4]) {\n      case Euler.XYZ:\n        return q\n          .rotateX(this[0])\n          .rotateY(this[1])\n          .rotateZ(this[2]);\n      case Euler.YXZ:\n        return q\n          .rotateY(this[0])\n          .rotateX(this[1])\n          .rotateZ(this[2]);\n      case Euler.ZXY:\n        return q\n          .rotateZ(this[0])\n          .rotateX(this[1])\n          .rotateY(this[2]);\n      case Euler.ZYX:\n        return q\n          .rotateZ(this[0])\n          .rotateY(this[1])\n          .rotateX(this[2]);\n      case Euler.YZX:\n        return q\n          .rotateY(this[0])\n          .rotateZ(this[1])\n          .rotateX(this[2]);\n      case Euler.XZY:\n        return q\n          .rotateX(this[0])\n          .rotateZ(this[1])\n          .rotateY(this[2]);\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n  }\n\n  // INTERNAL METHODS\n\n  // Concersion from Euler to rotation matrix and from matrix to Euler\n  // Adapted from three.js under MIT license\n\n  // // WARNING: this discards revolution information -bhouston\n  // reorder(newOrder) {\n  //   const q = new Quaternion().setFromEuler(this);\n  //   return this.setFromQuaternion(q, newOrder);\n\n  /* eslint-disable complexity, max-statements, one-var */\n  _fromRotationMatrix(m, order = Euler.DefaultOrder) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    const te = m.elements;\n    const m11 = te[0],\n      m12 = te[4],\n      m13 = te[8];\n    const m21 = te[1],\n      m22 = te[5],\n      m23 = te[9];\n    const m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n\n    order = order || this[3];\n\n    switch (order) {\n      case Euler.XYZ:\n        this[1] = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m33);\n          this[2] = Math.atan2(-m12, m11);\n        } else {\n          this[0] = Math.atan2(m32, m22);\n          this[2] = 0;\n        }\n        break;\n\n      case Euler.YXZ:\n        this[0] = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < ALMOST_ONE) {\n          this[1] = Math.atan2(m13, m33);\n          this[2] = Math.atan2(m21, m22);\n        } else {\n          this[1] = Math.atan2(-m31, m11);\n          this[2] = 0;\n        }\n        break;\n\n      case Euler.ZXY:\n        this[0] = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < ALMOST_ONE) {\n          this[1] = Math.atan2(-m31, m33);\n          this[2] = Math.atan2(-m12, m22);\n        } else {\n          this[1] = 0;\n          this[2] = Math.atan2(m21, m11);\n        }\n        break;\n\n      case Euler.ZYX:\n        this[1] = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m33);\n          this[2] = Math.atan2(m21, m11);\n        } else {\n          this[0] = 0;\n          this[2] = Math.atan2(-m12, m22);\n        }\n        break;\n\n      case Euler.YZX:\n        this[2] = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < ALMOST_ONE) {\n          this[0] = Math.atan2(-m23, m22);\n          this[1] = Math.atan2(-m31, m11);\n        } else {\n          this[0] = 0;\n          this[1] = Math.atan2(m13, m33);\n        }\n        break;\n\n      case Euler.XZY:\n        this[2] = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < ALMOST_ONE) {\n          this[0] = Math.atan2(m32, m22);\n          this[1] = Math.atan2(m13, m11);\n        } else {\n          this[0] = Math.atan2(-m23, m33);\n          this[1] = 0;\n        }\n        break;\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    this[3] = order;\n\n    return this;\n  }\n\n  _getRotationMatrix() {\n    const te = new Matrix4();\n\n    const x = this.x,\n      y = this.y,\n      z = this.z;\n    const a = Math.cos(x);\n    const c = Math.cos(y);\n    const e = Math.cos(z);\n    const b = Math.sin(x);\n    const d = Math.sin(y);\n    const f = Math.sin(z);\n\n    switch (this[3]) {\n      case Euler.XYZ: {\n        const ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.YXZ: {\n        const ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.ZXY: {\n        const ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.ZYX: {\n        const ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n        break;\n      }\n\n      case Euler.YZX: {\n        const ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n        break;\n      }\n\n      case Euler.XZY: {\n        const ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n        break;\n      }\n\n      default:\n        throw new Error(ERR_UNKNOWN_ORDER);\n    }\n\n    // last column\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n\n    // bottom row\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n  /* eslint-enable complexity, max-statements, one-var */\n}\n","import {equals} from '../lib/common';\n\nexport default class Polygon {\n  constructor(points) {\n    this.points = points;\n    this.isClosed = equals(this.points[this.points.length - 1], this.points[0]);\n    Object.freeze(this);\n  }\n\n  // https://en.wikipedia.org/wiki/Shoelace_formula\n  getSignedArea() {\n    let area = 0;\n    this.forEachSegment((p1, p2) => {\n      // the \"cancelling\" cross-products: (p1.x + p2.x) * (p1.y - p2.y)\n      area += (p1[0] + p2[0]) * (p1[1] - p2[1]);\n    });\n    return area / 2;\n  }\n\n  getArea() {\n    return Math.abs(this.getSignedArea());\n  }\n\n  getWindingDirection() {\n    return Math.sign(this.getSignedArea());\n  }\n\n  forEachSegment(visitor) {\n    const length = this.points.length;\n    for (let i = 0; i < length - 1; i++) {\n      visitor(this.points[i], this.points[i + 1], i, i + 1)\n\n    }\n    if (this.isPolygon && !this.isClosed()) {\n      // Call function with points and indices\n      visitor(this.points[length - 1], this.points[0], length - 1, 0);\n    }\n  }\n}\n","import {config} from 'math.gl';\n\nconsole.log(config); // eslint-disable-line\n","module.exports = set\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set (out, x, y, z, w) {\n  out[0] = x\n  out[1] = y\n  out[2] = z\n  out[3] = w\n  return out\n}\n","module.exports = scale\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nfunction scale (out, a, b) {\n  out[0] = a[0] * b\n  out[1] = a[1] * b\n  out[2] = a[2] * b\n  out[3] = a[3] * b\n  return out\n}\n","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp (out, a, b, t) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2],\n    aw = a[3]\n  out[0] = ax + t * (b[0] - ax)\n  out[1] = ay + t * (b[1] - ay)\n  out[2] = az + t * (b[2] - az)\n  out[3] = aw + t * (b[3] - aw)\n  return out\n}\n","module.exports = add\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction add (out, a, b) {\n  out[0] = a[0] + b[0]\n  out[1] = a[1] + b[1]\n  out[2] = a[2] + b[2]\n  out[3] = a[3] + b[3]\n  return out\n}\n","module.exports = normalize\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize (out, a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  var len = x * x + y * y + z * z + w * w\n  if (len > 0) {\n    len = 1 / Math.sqrt(len)\n    out[0] = x * len\n    out[1] = y * len\n    out[2] = z * len\n    out[3] = w * len\n  }\n  return out\n}\n","module.exports = dot\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot (a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3]\n}\n","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength (a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  return x * x + y * y + z * z + w * w\n}\n","module.exports = length\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length (a) {\n  var x = a[0],\n    y = a[1],\n    z = a[2],\n    w = a[3]\n  return Math.sqrt(x * x + y * y + z * z + w * w)\n}\n","module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};","module.exports = fromValues;\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n    var out = new Float32Array(3)\n    out[0] = x\n    out[1] = y\n    out[2] = z\n    return out\n}"],"sourceRoot":""}