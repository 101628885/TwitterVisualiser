{"version":3,"sources":["../../../../src/test-utils/browser-automation/call-exposed-function.js"],"names":["callExposedFunction","exposedFunction","result","window","resultString","JSON","stringify","console","error","warn","setTimeout","bind"],"mappings":";;;;;;;AACO,SAASA,mBAAT,CAA6BC,eAA7B,EAA8CC,MAA9C,EAAsD;AAG3D,MAAIC,MAAM,CAACF,eAAD,CAAV,EAA6B;AAC3B,QAAMG,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAArB;AACAK,IAAAA,OAAO,CAACC,KAAR,oCAA0CP,eAA1C,cAA6DG,YAA7D;AACAD,IAAAA,MAAM,CAACF,eAAD,CAAN,CAAwBG,YAAxB;AACD,GAJD,MAIO;AACLG,IAAAA,OAAO,CAACE,IAAR,kBAAuBR,eAAvB;AACAE,IAAAA,MAAM,CAACO,UAAP,CAAkBV,mBAAmB,CAACW,IAApB,CAAyB,IAAzB,EAA+BV,eAA/B,EAAgDC,MAAhD,CAAlB,EAA2E,IAA3E;AACD;AACF","sourcesContent":["/* global window */\nexport function callExposedFunction(exposedFunction, result) {\n  // Node test driver (puppeteer) may not have had time to expose the function\n  // if the test suite is short. If not available, wait a second and try again\n  if (window[exposedFunction]) {\n    const resultString = JSON.stringify(result);\n    console.error(`Calling exposed function ${exposedFunction}(${resultString})`); // eslint-disable-line\n    window[exposedFunction](resultString);\n  } else {\n    console.warn(`window.${exposedFunction}() not yet exposed, waiting 1 second`); // eslint-disable-line\n    window.setTimeout(callExposedFunction.bind(null, exposedFunction, result), 1000);\n  }\n}\n"],"file":"call-exposed-function.js"}