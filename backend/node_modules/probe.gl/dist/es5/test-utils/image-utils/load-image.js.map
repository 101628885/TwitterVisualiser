{"version":3,"sources":["../../../../src/test-utils/image-utils/load-image.js"],"names":["loadImage","url","crossOrigin","Promise","resolve","reject","image","Image","onload","onerror","Error","src","error"],"mappings":";;;;;;;AACO,SAASA,SAAT,CAAmBC,GAAnB,EAA0D;AAAA,iFAAJ,EAAI;AAAA,8BAAjCC,WAAiC;AAAA,MAAjCA,WAAiC,iCAAnB,WAAmB;;AAC/D,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI;AACF,UAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;;AACAD,MAAAA,KAAK,CAACE,MAAN,GAAe;AAAA,eAAMJ,OAAO,CAACE,KAAD,CAAb;AAAA,OAAf;;AACAA,MAAAA,KAAK,CAACG,OAAN,GAAgB;AAAA,eAAMJ,MAAM,CAAC,IAAIK,KAAJ,gCAAkCT,GAAlC,OAAD,CAAZ;AAAA,OAAhB;;AACAK,MAAAA,KAAK,CAACJ,WAAN,GAAoBA,WAApB;AACAI,MAAAA,KAAK,CAACK,GAAN,GAAYV,GAAZ;AACD,KAND,CAME,OAAOW,KAAP,EAAc;AACdP,MAAAA,MAAM,CAACO,KAAD,CAAN;AACD;AACF,GAVM,CAAP;AAWD","sourcesContent":["/* global Image */\nexport function loadImage(url, {crossOrigin = 'anonymous'} = {}) {\n  return new Promise((resolve, reject) => {\n    try {\n      const image = new Image();\n      image.onload = () => resolve(image);\n      image.onerror = () => reject(new Error(`Could not load image ${url}.`));\n      image.crossOrigin = crossOrigin;\n      image.src = url;\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n"],"file":"load-image.js"}