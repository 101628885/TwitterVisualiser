{"version":3,"sources":["../../../../src/lib/utils/log-to-dom.js"],"names":["document","console","global","old","enableDOMLogging","enable","log","bind","args","logLineToDOM","logDiv","message","markdown","probe","createElement","childNodes","body","insertBefore","innerHTML"],"mappings":"AACA,SAAQA,QAAR,EAAkBC,OAAlB,EAA2BC,MAA3B,QAAwC,WAAxC;AAEA,IAAIC,GAAG,GAAG,IAAV;AAGA,OAAO,SAASC,gBAAT,CAA0BC,MAAM,GAAG,IAAnC,EAAyC;AAE9C,MAAIA,MAAM,IAAI,CAACF,GAAf,EAAoB;AAClBA,IAAAA,GAAG,GAAGF,OAAO,CAACK,GAAR,CAAYC,IAAZ,CAAiBN,OAAjB,CAAN;;AACAA,IAAAA,OAAO,CAACK,GAAR,GAAc,CAAC,GAAGE,IAAJ,KAAa;AACzBC,MAAAA,YAAY,CAAC,GAAGD,IAAJ,CAAZ;AACAL,MAAAA,GAAG,CAAC,GAAGK,IAAJ,CAAH;AACD,KAHD;AAID;;AACD,MAAI,CAACH,MAAD,IAAWF,GAAf,EAAoB;AAClBF,IAAAA,OAAO,CAACK,GAAR,GAAcH,GAAd;AACAA,IAAAA,GAAG,GAAG,IAAN;AACD;AACF;AAED,IAAIO,MAAM,GAAG,IAAb;AAEA,OAAO,SAASD,YAAT,CAAsBE,OAAtB,EAA+B;AACpC,MAAI,CAACD,MAAL,EAAa;AACX,UAAME,QAAQ,GAAGV,MAAM,CAACW,KAAP,CAAaD,QAA9B;AACAF,IAAAA,MAAM,GAAGV,QAAQ,CAACc,aAAT,CAAuBF,QAAQ,GAAG,KAAH,GAAW,KAA1C,CAAT;AACD;;AAJmC,QAM7BG,UAN6B,GAMff,QAAQ,CAACgB,IANM,CAM7BD,UAN6B;AAOpCf,EAAAA,QAAQ,CAACgB,IAAT,CAAcC,YAAd,CAA2BP,MAA3B,EAAmCK,UAAU,IAAIA,UAAU,CAAC,CAAD,CAA3D;;AAGA,MAAI,OAAOJ,OAAP,KAAmB,QAAvB,EAAiC;AAC/BD,IAAAA,MAAM,CAACQ,SAAP,IAAqB,GAAEP,OAAQ,QAA/B;AACD;AACF;AAED,eAAeP,gBAAf","sourcesContent":["/* eslint-disable no-console */\nimport {document, console, global} from './globals';\n\nlet old = null;\n\n// Can log a (not too long) number of messages to a div in the DOM\nexport function enableDOMLogging(enable = true) {\n  // First time, add a log div\n  if (enable && !old) {\n    old = console.log.bind(console);\n    console.log = (...args) => {\n      logLineToDOM(...args);\n      old(...args);\n    };\n  }\n  if (!enable && old) {\n    console.log = old;\n    old = null;\n  }\n}\n\nlet logDiv = null;\n\nexport function logLineToDOM(message) {\n  if (!logDiv) {\n    const markdown = global.probe.markdown;\n    logDiv = document.createElement(markdown ? 'pre' : 'div');\n  }\n  // Ensure the element comes first\n  const {childNodes} = document.body;\n  document.body.insertBefore(logDiv, childNodes && childNodes[0]);\n\n  // Add the line to the log element\n  if (typeof message === 'string') {\n    logDiv.innerHTML += `${message}<br />`;\n  }\n}\n\nexport default enableDOMLogging;\n"],"file":"log-to-dom.js"}