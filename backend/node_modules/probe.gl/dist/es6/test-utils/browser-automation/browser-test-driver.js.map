{"version":3,"sources":["../../../../src/test-utils/browser-automation/browser-test-driver.js"],"names":["BrowserDriver","COLOR","Log","log","id","webpackEnv","process","argv","length","DEFAULT_CONFIG","title","exposeFunction","parameters","BrowserTestDriver","run","config","Object","assign","message","color","YELLOW","time","Date","now","Promise","resolve","then","_","startServer","startBrowser","newPage","resultString","result","JSON","parse","ok","success","Boolean","failedTest","Error","_success","catch","error","_failure","elapsed","toFixed","BRIGHT_GREEN","setShellStatus","exit","BRIGHT_RED"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global process */\nimport BrowserDriver from './browser-driver';\nimport {COLOR} from '../../lib/utils/color';\nimport Log from '../../lib/log';\n\nconst log = new Log({id: 'render-test'});\n\n// DEFAULT config, intended to be overridden in the node script that calls us\n\n// read the webpack env from 3 arg (node script arg)\nlet webpackEnv = 'render';\nif (process.argv.length >= 3) {\n  webpackEnv = process.argv[2];\n}\n\nconst DEFAULT_CONFIG = {\n  title: 'BrowserTest',\n  exposeFunction: 'taskComplete',\n  parameters: [`--env.${webpackEnv}`]\n};\n\nexport default class BrowserTestDriver extends BrowserDriver {\n  run(config = {}) {\n    config = Object.assign(DEFAULT_CONFIG, config);\n    const {title, exposeFunction} = config;\n    this.title = title;\n    log.log({\n      message: `${title} started. Launching Chromium instance, waiting for ${exposeFunction}...`,\n      color: COLOR.YELLOW\n    })();\n    this.time = Date.now();\n    return Promise.resolve()\n      .then(_ => this.startServer(config))\n      .then(_ => this.startBrowser())\n      .then(_ => this.newPage())\n      .then(_ => {\n        return this.exposeFunction(exposeFunction);\n      })\n      .then(resultString => {\n        const result = JSON.parse(resultString);\n        const ok =\n          result.success === Boolean(result.success) &&\n          (!result.failedTest || typeof result.failedTest === 'string');\n        if (!ok) {\n          throw new Error(`Illegal response \"${resultString}\" returned from Chrome test script`);\n        }\n        if (!result.success) {\n          throw new Error(result.failedTest || 'Unknown failure');\n        }\n        this._success();\n      })\n      .catch(error => {\n        this._failure(error);\n      });\n  }\n\n  _success() {\n    const elapsed = ((Date.now() - this.time) / 1000).toFixed(1);\n    log.log({\n      message: `${this.title} successfully completed in ${elapsed}s!`,\n      color: COLOR.BRIGHT_GREEN\n    })();\n    this.setShellStatus(true);\n    this.exit();\n  }\n\n  _failure(error) {\n    log.log({\n      message: `${this.title} failed: ${error.message}. Keeping browser open to allow debugging.`,\n      color: COLOR.BRIGHT_RED\n    })();\n    // Don't call exit(). Leave browser running so user can inspect image that failed to render\n    this.setShellStatus(false);\n  }\n}\n"],"file":"browser-test-driver.js"}