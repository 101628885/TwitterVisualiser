import { document, console, global } from './globals';
var old = null;
export function enableDOMLogging() {
  var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

  if (enable && !old) {
    old = console.log.bind(console);

    console.log = function () {
      logLineToDOM.apply(void 0, arguments);
      old.apply(void 0, arguments);
    };
  }

  if (!enable && old) {
    console.log = old;
    old = null;
  }
}
var logDiv = null;
export function logLineToDOM(message) {
  if (!logDiv) {
    var markdown = global.probe.markdown;
    logDiv = document.createElement(markdown ? 'pre' : 'div');
  }

  var childNodes = document.body.childNodes;
  document.body.insertBefore(logDiv, childNodes && childNodes[0]);

  if (typeof message === 'string') {
    logDiv.innerHTML += "".concat(message, "<br />");
  }
}
export default enableDOMLogging;
//# sourceMappingURL=log-to-dom.js.map