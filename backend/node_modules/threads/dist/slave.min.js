function handlerDone(){var e=Array.prototype.slice.call(arguments,0);this.postMessage({response:e})}function handlerProgress(e){this.postMessage({progress:e})}function handlerError(e){var r={message:e.message,name:e.name,stack:e.stack};this.postMessage({error:r})}function handlerDoneTransfer(){var e=Array.prototype.slice.call(arguments),r=e.pop();r instanceof Array||!this.console||console.error("Expected 2nd parameter of <doneCallback>.transfer() to be an array. Got:",r),this.postMessage({response:e},r)}function isPromise(e){return e&&"function"==typeof e.then}self.module={exports:function(){console&&console.error("No thread logic initialized.")}},self.onmessage=function(e){var r=e.data.scripts;if(r&&r.length>0&&"function"!=typeof importScripts)throw new Error("importScripts() not supported.");if(e.data.initByScripts&&importScripts.apply(null,r),e.data.initByMethod){delete this.module.exports,r&&r.length>0&&importScripts.apply(null,r);var t=e.data.method;this.module.exports=Function.apply(null,t.args.concat(t.body))}if(e.data.doRun){var o=this.module.exports;if("function"!=typeof o)throw new Error("Cannot run thread logic. No handler has been exported.");var n=handlerDone.bind(this);n.transfer=handlerDoneTransfer.bind(this);var s=o.call(this,e.data.param,n,handlerProgress.bind(this));isPromise(s)&&s.then(n,handlerError.bind(this))}}.bind(self);