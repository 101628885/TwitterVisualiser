//-Verify page to check each Tweet.
//-Used to train NLP
extends layout

append head
	title VisCrime - Config

block content
	.container
		.section
			.row
				.col.s12
					h4 Manual Checking
					p Your input will aid the NLP model in learning how to recognise tweets.
					p
						| You have checked a total of 
						span#counter 0
						|  tweet(s) so far.
			.row
				input-field.col.s6
					label(for="location") Select Database
					select#location(name="location", onchange="skip()")
						option(value="melbourne") Melbourne
						option(value="chicago") Chicago
			each tweet, index in data
				.row
					//-Displays tweet information.
					//-Gives users form to submit with information on the tweet.
					.col.s12
							.card
								.card-content(style="padding: 3em 3em 0 3em;")
									.row.valign-wrapper
										.col.s7
											.row
												.col.s1
													img#tweetdp.circle(src=`${tweet.user_profile_image_url}` width="48" height="48")
												.col.s11(style="padding-left: 20px;")
													p 
														span#tweetusername.thicc #{tweet.user_name + ` `}
														span#tweetmetadata #{tweet.created_at} - #{tweet.geo}
													p#tweetbody #{tweet.full_text}
										.col.s5
											.row
												input-field.col.s12
													label(for="crime-type") Select Category
													select#crime-type(name="crime-type")
														option(value="ASSAULT") Assault
														option(value="THEFT") Theft
														option(value="SEX OFFENSE") Sex Offense
														option(value="DOMESTIC VIOLENCE") Domestic Violence
														option(value="NARCOTICS") Narcotics
														option(value="CRIMINAL DAMAGE") Criminal Damage
														option(value="HOMICIDE") Homicide
														option(value="GAMBLING") Gambling
														option(value="KIDNAPPING") Kidnapping
														option(value="NON-CRIMINAL") Non Criminal
														option(value="OTHER OFFENSE") Other Offense
											.row
												input-field.col.s12
													label(for="pac-input") Location (approximate)
													input#pac-input(type="text", name="pac-input", placeholder="Enter a location")
											.row
												.col.s3
												.col.s3
													button#tweetTrue.btn.waves-effect.waves-light.green(onclick=`sendData('true',${tweet.id})`) True
												.col.s3
													button#tweetFalse.btn.waves-effect.waves-light.red(onclick=`sendData('false',${tweet.id})`) False
												.col.s3

	script(type="text/javascript" src="/scripts/checkScript.js")
	script(type="text/javascript" src="/scripts/setupVerify.js")
	script(src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC-PIPhjfg5Cm1f8eTaJ9jPsACSuZ7gViU&libraries=places&callback=initAutocomplete" async defer)
