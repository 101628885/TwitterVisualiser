// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
  virtual={undefined}
>
  <View
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
  >
    <View
      collapsable={undefined}
      style={
        Object {
          "flex": 1,
          "zIndex": 0,
        }
      }
    >
      <View
        style={
          Object {
            "marginBottom": 15,
            "padding": 20,
          }
        }
      >
        <ActivityIndicator
          animating={true}
          color="#999999"
          hidesWhenStopped={true}
          size="small"
        />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      pointerEvents="none"
      style={
        Object {
          "backgroundColor": "#000",
          "bottom": 0,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "zIndex": 1000,
        }
      }
      testID={undefined}
    />
    <View
      accessibilityViewIsModal={false}
      collapsable={undefined}
      style={
        Object {
          "backgroundColor": "white",
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": null,
          "top": 0,
          "transform": Array [
            Object {
              "translateX": -320,
            },
          ],
          "width": 320,
          "zIndex": 1001,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "height": 1334,
            }
          }
          virtual={undefined}
        >
          <View>
            <View
              style={
                Array [
                  Object {
                    "backgroundColor": "#F8F8F8",
                    "borderBottomColor": "#a7a6ab",
                    "borderBottomWidth": 0.5,
                    "elevation": 3,
                    "flexDirection": "row",
                    "height": 64,
                    "justifyContent": "center",
                    "left": 0,
                    "paddingLeft": 10,
                    "paddingRight": 10,
                    "paddingTop": 15,
                    "right": 0,
                    "shadowColor": undefined,
                    "shadowOffset": undefined,
                    "shadowOpacity": undefined,
                    "shadowRadius": undefined,
                    "top": 0,
                  },
                  Object {
                    "backgroundColor": "#0084b4",
                    "height": 200,
                  },
                ]
              }
              virtual={undefined}
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "alignSelf": "center",
                    "flex": 1,
                  }
                }
                virtual={undefined}
              >
                <Image
                  source={1}
                  style={
                    Object {
                      "borderRadius": 75,
                      "height": 150,
                      "width": 150,
                    }
                  }
                />
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                        "lineHeight": 27,
                      },
                      Object {
                        "color": "#FFF",
                        "fontStyle": "italic",
                      },
                    ]
                  }
                  virtual={undefined}
                >
                  Mohan Bois
                </Text>
              </View>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "paddingVertical": 4,
                },
                undefined,
              ]
            }
          >
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                pointerEvents="box-none"
                style={
                  Object {
                    "backgroundColor": "rgba(0, 0, 0, .04)",
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "marginHorizontal": 16,
                          "width": 24,
                        },
                        null,
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "fontWeight": "bold",
                          "margin": 16,
                        },
                        Object {
                          "color": "#2196f3",
                        },
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    Home
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                pointerEvents="box-none"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "marginHorizontal": 16,
                          "width": 24,
                        },
                        Object {
                          "opacity": 0.62,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "fontWeight": "bold",
                          "margin": 16,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                        },
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    Show Tweets
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                pointerEvents="box-none"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "marginHorizontal": 16,
                          "width": 24,
                        },
                        Object {
                          "opacity": 0.62,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "fontWeight": "bold",
                          "margin": 16,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                        },
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    Track Tweets
                  </Text>
                </View>
              </View>
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hasTVPreferredFocus={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                collapsable={undefined}
                onLayout={[Function]}
                pointerEvents="box-none"
                style={
                  Object {
                    "backgroundColor": "transparent",
                    "paddingBottom": 0,
                    "paddingLeft": 0,
                    "paddingRight": 0,
                    "paddingTop": 0,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "marginHorizontal": 16,
                          "width": 24,
                        },
                        Object {
                          "opacity": 0.62,
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                    />
                  </View>
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "fontWeight": "bold",
                          "margin": 16,
                        },
                        Object {
                          "color": "rgba(0, 0, 0, .87)",
                        },
                        undefined,
                        undefined,
                      ]
                    }
                  >
                    Visualisation
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "rgba(0,0,0,0.4)",
          "flex": 1,
          "justifyContent": "flex-end",
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#fff",
            "elevation": 4,
            "height": NaN,
            "maxHeight": "100%",
            "opacity": 1,
            "padding": 15,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#000",
                "fontFamily": "System",
                "fontSize": 16,
              },
              Object {
                "color": "#757575",
              },
            ]
          }
          uppercase={false}
          virtual={undefined}
        />
        <RCTScrollView
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "marginHorizontal": -15,
              "marginTop": 15,
            }
          }
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
  </Modal>
</View>
`;
