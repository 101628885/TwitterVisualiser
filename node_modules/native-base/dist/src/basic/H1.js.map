{"version":3,"sources":["../../../src/basic/H1.js"],"names":["H1","_root","c","props","childrenType","propName","component","error","prop","Children","forEach","child","Error","propTypes","children","style","oneOfType","object","number","array","StyledH1"],"mappings":"+0BAAA,4B;AACA,qC;AACA;;AAEA;AACA,mE;;AAEMA,E;AACI;AACR,MAAO,2DAAM,IAAK,sBAAM,QAAKC,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAKC,KAA3C,mDAAP;AACA,C;;;AAGF,GAAMC,cAAe,QAAfA,aAAe,CAAUD,KAAV,CAAiBE,QAAjB,CAA2BC,SAA3B,CAAsC;AAC1D,GAAIC,aAAJ;AACA,GAAMC,MAAOL,MAAME,QAAN,CAAb;AACA,gBAAMI,QAAN,CAAeC,OAAf,CAAuBF,IAAvB,CAA6B,eAAS;AACrC,GAAI,MAAOG,MAAP,GAAiB,QAAjB,EAA6B,MAAOA,MAAP,GAAiB,QAAlD,CAA4D;AAC3DJ,MAAQ,GAAIK,MAAJ,CAAaN,SAAb,sCAAR;AACA;AACD,CAJD;AAKA,MAAOC,MAAP;AACA,CATD;;AAWAP,GAAGa,SAAH;AACI,kBAAKA,SADT;AAECC,SAAUV,YAFX;AAGCW,MAAO,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,CAAmB,oBAAUC,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAHR;;;AAMA,GAAMC,UAAW,yCAAa,eAAb,CAA8B,EAA9B,iCAAwDpB,EAAxD,CAAjB,C;;AAEqBA,E,CAAZoB,Q","file":"H1.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Text } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass H1 extends Component {\n\trender() {\n\t\treturn <Text ref={c => (this._root = c)} {...this.props} />;\n\t}\n}\n\nconst childrenType = function (props, propName, component) {\n\tlet error;\n\tconst prop = props[propName];\n\tReact.Children.forEach(prop, child => {\n\t\tif (typeof child !== \"string\" && typeof child !== \"number\") {\n\t\t\terror = new Error(`${component} should have only string or number`);\n\t\t}\n\t});\n\treturn error;\n};\n\nH1.propTypes = {\n\t...Text.propTypes,\n\tchildren: childrenType,\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n};\n\nconst StyledH1 = connectStyle(\"NativeBase.H1\", {}, mapPropsToStyleNames)(H1);\n\nexport { StyledH1 as H1 };\n"]}