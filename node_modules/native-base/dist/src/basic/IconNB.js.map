{"version":3,"sources":["../../../src/basic/IconNB.js"],"names":["IconNB","iconType","undefined","context","theme","variables","iconFamily","Icon","setIcon","props","type","nextProps","nextState","_root","c","contextTypes","object","propTypes","style","oneOfType","number","array","oneOf","StyledIconNB"],"mappings":"u1BAAA,4B;AACA,qC;;AAEA;;AAEA,4D;AACA,wD;AACA,0D;AACA,kE;AACA,gE;AACA,sE;AACA,wF;AACA,4D;AACA,wD;AACA,0E;AACA,8D;;AAEA,mE;;AAEMA,M;;;;;AAKIC,Q,CAAU;AAChB,GAAIA,UAAYC,SAAZ,EAAyB,KAAKC,OAAL,CAAaC,KAA1C,CAAiD;AAC/CH,SAAW,KAAKE,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDC,SAAjD;AACRC,UADH;AAED;AACD,OAAQL,QAAR;AACE,IAAK,QAAL;AACE,KAAKM,IAAL;AACA;AACF,IAAK,WAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,SAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,aAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,YAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,UAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,wBAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,eAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,UAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,iBAAL;AACE,KAAKA,IAAL;AACA;AACF,IAAK,QAAL;AACE,KAAKA,IAAL;AACA;AACF;AACE,KAAKA,IAAL,oBAnCJ;;AAqCD,C;;AAEoB;AACnB,KAAKC,OAAL,CAAa,KAAKC,KAAL,CAAWC,IAAxB;AACD,C;;AAEmBC,S,CAAWC,S,CAAW;AACxC,GAAID,UAAUD,IAAV,EAAkB,KAAKD,KAAL,CAAWC,IAAX,EAAmBC,UAAUD,IAAnD,CAAyD;AACvD,KAAKF,OAAL,CAAaG,UAAUD,IAAvB;AACD;AACF,C;;AAEQ;AACP,MAAO,oCAAM,IAAN,WAAW,IAAK,sBAAM,QAAKG,KAAL,CAAaC,CAAnB,EAAhB,EAA2C,KAAKL,KAAhD,mDAAP;AACD,C,sCA7DGT,M,CACGe,Y,CAAe,CACpBX,MAAO,oBAAUY,MADG,C;;;AA+DxBhB,OAAOiB,SAAP,CAAmB;AACjBC,MAAO,oBAAUC,SAAV,CAAoB;AACzB,oBAAUH,MADe;AAEzB,oBAAUI,MAFe;AAGzB,oBAAUC,KAHe,CAApB,CADU;;AAMjBX,KAAM,oBAAUY,KAAV,CAAgB;AACpB,QADoB;AAEpB,WAFoB;AAGpB,SAHoB;AAIpB,aAJoB;AAKpB,YALoB;AAMpB,UANoB;AAOpB,wBAPoB;AAQpB,eARoB;AASpB,UAToB;AAUpB,iBAVoB;AAWpB,QAXoB,CAAhB,CANW,CAAnB;;;;AAqBA,GAAMC,cAAe;AACnB,mBADmB;AAEnB,EAFmB;;AAInBvB,MAJmB,CAArB,C;;AAMyBA,M,CAAhBuB,Y","file":"IconNB.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\n\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\nimport Feather from \"react-native-vector-icons/Feather\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport Foundation from \"react-native-vector-icons/Foundation\";\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport Octicons from \"react-native-vector-icons/Octicons\";\nimport Zocial from \"react-native-vector-icons/Zocial\";\nimport SimpleLineIcons from \"react-native-vector-icons/SimpleLineIcons\";\nimport EvilIcons from \"react-native-vector-icons/EvilIcons\";\n\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\n\nclass IconNB extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  setIcon(iconType) {\n    if (iconType == undefined && this.context.theme) {\n      iconType = this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n        .iconFamily;\n    }\n    switch (iconType) {\n      case \"Entypo\":\n        this.Icon = Entypo;\n        break;\n      case \"EvilIcons\":\n        this.Icon = EvilIcons;\n        break;\n      case \"Feather\":\n        this.Icon = Feather;\n        break;\n      case \"FontAwesome\":\n        this.Icon = FontAwesome;\n        break;\n      case \"Foundation\":\n        this.Icon = Foundation;\n        break;\n      case \"Ionicons\":\n        this.Icon = Ionicons;\n        break;\n      case \"MaterialCommunityIcons\":\n        this.Icon = MaterialCommunityIcons;\n        break;\n      case \"MaterialIcons\":\n        this.Icon = MaterialIcons;\n        break;\n      case \"Octicons\":\n        this.Icon = Octicons;\n        break;\n      case \"SimpleLineIcons\":\n        this.Icon = SimpleLineIcons;\n        break;\n      case \"Zocial\":\n        this.Icon = Zocial;\n        break;\n      default:\n        this.Icon = Ionicons;\n    }\n  }\n\n  componentWillMount() {\n    this.setIcon(this.props.type);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.type && this.props.type != nextProps.type) {\n      this.setIcon(nextProps.type);\n    }\n  }\n\n  render() {\n    return <this.Icon ref={c => (this._root = c)} {...this.props} />;\n  }\n}\n\nIconNB.propTypes = {\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  type: PropTypes.oneOf([\n    \"Entypo\",\n    \"EvilIcons\",\n    \"Feather\",\n    \"FontAwesome\",\n    \"Foundation\",\n    \"Ionicons\",\n    \"MaterialCommunityIcons\",\n    \"MaterialIcons\",\n    \"Octicons\",\n    \"SimpleLineIcons\",\n    \"Zocial\"\n  ])\n};\n\nconst StyledIconNB = connectStyle(\n  \"NativeBase.IconNB\",\n  {},\n  mapPropsToStyleNames\n)(IconNB);\n\nexport { StyledIconNB as IconNB };\n"]}