'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _class, _temp2;

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  margin-top: 10px;\n  color: ', ';\n'], ['\n  margin-top: 10px;\n  color: ', ';\n']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['\n  color: ', ';\n'], ['\n  color: ', ';\n']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['\n  background-color: white;\n  border-radius: 4px;\n  border-style: dashed;\n  border-width: 1px;\n  border-color: ', ';\n  height: 414px;\n  padding-top: 60px;\n  text-align: center;\n  width: 100%;\n\n  .file-upload-or {\n    color: ', ';\n    padding-right: 4px;\n  }\n'], ['\n  background-color: white;\n  border-radius: 4px;\n  border-style: dashed;\n  border-width: 1px;\n  border-color: ', ';\n  height: 414px;\n  padding-top: 60px;\n  text-align: center;\n  width: 100%;\n\n  .file-upload-or {\n    color: ', ';\n    padding-right: 4px;\n  }\n']),
    _templateObject4 = (0, _taggedTemplateLiteral3.default)(['\n  color: ', ';\n  font-size: 20px;\n  height: 36px;\n'], ['\n  color: ', ';\n  font-size: 20px;\n  height: 36px;\n']),
    _templateObject5 = (0, _taggedTemplateLiteral3.default)(['\n  color: ', ';\n  margin-bottom: 60px;\n\n  .file-type-row {\n    margin-bottom: 26px;\n  }\n'], ['\n  color: ', ';\n  margin-bottom: 60px;\n\n  .file-type-row {\n    margin-bottom: 26px;\n  }\n']),
    _templateObject6 = (0, _taggedTemplateLiteral3.default)(['\n  .filter-upload__input {\n    visibility: hidden;\n    height: 0;\n    position: absolute;\n  }\n\n  .file-drop {\n    position: relative;\n  }\n\n  .file-upload__message {\n    color: ', ';\n    font-size: 14px;\n    margin-bottom: 12px;\n  }\n'], ['\n  .filter-upload__input {\n    visibility: hidden;\n    height: 0;\n    position: absolute;\n  }\n\n  .file-drop {\n    position: relative;\n  }\n\n  .file-upload__message {\n    color: ', ';\n    font-size: 14px;\n    margin-bottom: 12px;\n  }\n']),
    _templateObject7 = (0, _taggedTemplateLiteral3.default)(['\n  display: flex;\n  justify-content: center;\n  align-items: center;\n'], ['\n  display: flex;\n  justify-content: center;\n  align-items: center;\n']),
    _templateObject8 = (0, _taggedTemplateLiteral3.default)(['\n  position: absolute;\n  bottom: 0;\n  padding: 10px 30px;\n'], ['\n  position: absolute;\n  bottom: 0;\n  padding: 10px 30px;\n']); // Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _uploadButton = require('./upload-button');

var _uploadButton2 = _interopRequireDefault(_uploadButton);

var _icons = require('../icons');

var _loadingSpinner = require('../loading-spinner');

var _loadingSpinner2 = _interopRequireDefault(_loadingSpinner);

var _utils = require('../../../utils/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FileDrop = typeof document !== 'undefined' ? require('react-file-drop') : null;

// File.type is not reliable if the OS does not have a
// registered mapping for the extension.
// NOTE: Shapefiles must be in a compressed format since
// it requires multiple files to be present.
var defaultValidFileExt = ['csv',
// 'tar.gz',
// 'tgz',
// 'zip',
// 'gpx',
// 'kml',
'json', 'geojson'];

var MESSAGE = ' Drag & Drop Your File(s) Here';
var CHROME_MSG = '*Chrome user: Limit file size to 250mb, if need to upload larger file, try Safari';
var DISCLAIMER = '*Kepler.gl is a client-side application with no server backend. Data lives only on your machine/browser. ' + 'No information or map data is sent to any server.';
var CONFIG_UPLOAD_MESSAGE = 'Preparing trajectory map, this could take a while...';

var fileIconColor = '#D3D8E0';

var WarningMsg = _styledComponents2.default.span(_templateObject, function (props) {
  return props.theme.errorColor;
});

var PositiveMsg = _styledComponents2.default.span(_templateObject2, function (props) {
  return props.theme.primaryBtnActBgd;
});

var StyledFileDrop = _styledComponents2.default.div(_templateObject3, function (props) {
  return props.theme.subtextColorLT;
}, function (props) {
  return props.theme.linkBtnColor;
});

var MsgWrapper = _styledComponents2.default.div(_templateObject4, function (props) {
  return props.theme.modalTitleColor;
});

var StyledDragNDropIcon = _styledComponents2.default.div(_templateObject5, fileIconColor);

var StyledFileUpload = _styledComponents2.default.div(_templateObject6, function (props) {
  return props.theme.textColorLT;
});

var StyledMessage = _styledComponents2.default.div(_templateObject7);

var StyledDisclaimer = StyledMessage.extend(_templateObject8);

var FileUpload = (_temp2 = _class = function (_Component) {
  (0, _inherits3.default)(FileUpload, _Component);

  function FileUpload() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, FileUpload);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = FileUpload.__proto__ || Object.getPrototypeOf(FileUpload)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      dragOver: false,
      files: [],
      errorFiles: []
    }, _this._isValidFileType = function (filename) {
      var validFileExt = _this.props.validFileExt;

      var fileExt = validFileExt.find(function (ext) {
        return filename.endsWith(ext);
      });

      return Boolean(fileExt);
    }, _this._handleFileDrop = function (files, e) {
      if (e) {
        e.stopPropagation();
      }

      var nextState = { files: [], errorFiles: [], dragOver: false };
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        if (file && _this._isValidFileType(file.name)) {
          nextState.files.push(file);
        } else {
          nextState.errorFiles.push(file.name);
        }
      }

      _this.setState(nextState, function () {
        return nextState.files.length ? _this.props.onFileUpload(nextState.files) : null;
      });
    }, _this._toggleDragState = function (newState) {
      _this.setState({ dragOver: newState });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(FileUpload, [{
    key: '_renderMessage',
    value: function _renderMessage() {
      var _state = this.state,
          errorFiles = _state.errorFiles,
          files = _state.files;


      if (errorFiles.length) {
        return _react2.default.createElement(
          WarningMsg,
          null,
          'File ' + errorFiles.join(', ') + ' is not supported.'
        );
      }

      if (!files.length) {
        return null;
      }

      return _react2.default.createElement(
        StyledMessage,
        { className: 'file-uploader__message', style: ''},
        _react2.default.createElement(
          'div',
          null,
          'Uploading...'
        ),
        _react2.default.createElement(
          PositiveMsg,
          null,
          files.map(function (f) {
            return f.name;
          }).join(' and ') + '...'
        ),
        _react2.default.createElement(_loadingSpinner2.default, { size: 20 })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _state2 = this.state,
          dragOver = _state2.dragOver,
          files = _state2.files;
      var validFileExt = this.props.validFileExt;

      return _react2.default.createElement(
        StyledFileUpload,
        {
          className: 'file-uploader',
          innerRef: function innerRef(cmp) {
            return _this2.frame = cmp;
          }
        },
        _react2.default.createElement('input', {
          className: 'filter-upload__input',
          type: 'file',
          onChange: this._onChange
        }),
        FileDrop ? _react2.default.createElement(
          FileDrop,
          {
            frame: this.frame,
            targetAlwaysVisible: true,
            onDragOver: function onDragOver() {
              return _this2._toggleDragState(true);
            },
            onDragLeave: function onDragLeave() {
              return _this2._toggleDragState(false);
            },
            onDrop: this._handleFileDrop
          },
          _react2.default.createElement(
            'div',
            { className: 'file-upload__message' },
            CONFIG_UPLOAD_MESSAGE
          ),
        ) : null,
      );
    }
  }]);
  return FileUpload;
}(_react.Component), _class.defaultProps = {
  validFileExt: defaultValidFileExt
}, _class.propTypes = {
  onFileUpload: _propTypes2.default.func.isRequired,
  validFileExt: _propTypes2.default.arrayOf(_propTypes2.default.string)
}, _temp2);
exports.default = FileUpload;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,