'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mapStyleReducerFactory = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _actionHandler; // Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Actions


var _reduxActions = require('redux-actions');

var _actionTypes = require('../constants/action-types');

var _actionTypes2 = _interopRequireDefault(_actionTypes);

var _mapStyleUpdaters = require('./map-style-updaters');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var actionHandler = (_actionHandler = {}, (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.INIT, _mapStyleUpdaters.initMapStyleUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.INPUT_MAP_STYLE, _mapStyleUpdaters.inputMapStyleUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.MAP_CONFIG_CHANGE, _mapStyleUpdaters.mapConfigChangeUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.MAP_STYLE_CHANGE, _mapStyleUpdaters.mapStyleChangeUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.LOAD_MAP_STYLES, _mapStyleUpdaters.loadMapStylesUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.LOAD_MAP_STYLE_ERR, _mapStyleUpdaters.loadMapStyleErrUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.RECEIVE_MAP_CONFIG, _mapStyleUpdaters.receiveMapConfigUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.LOAD_CUSTOM_MAP_STYLE, _mapStyleUpdaters.loadCustomMapStyleUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.ADD_CUSTOM_MAP_STYLE, _mapStyleUpdaters.addCustomMapStyleUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.RESET_MAP_CONFIG, _mapStyleUpdaters.resetMapConfigMapStyleUpdater), _actionHandler);

var mapStyleReducerFactory = exports.mapStyleReducerFactory = function mapStyleReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _extends3.default)({}, _mapStyleUpdaters.INITIAL_MAP_STYLE, initialState, { initialState: initialState }));
};

exports.default = mapStyleReducerFactory();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy9tYXAtc3R5bGUuanMiXSwibmFtZXMiOlsiYWN0aW9uSGFuZGxlciIsIkFjdGlvblR5cGVzIiwiSU5JVCIsImluaXRNYXBTdHlsZVVwZGF0ZXIiLCJJTlBVVF9NQVBfU1RZTEUiLCJpbnB1dE1hcFN0eWxlVXBkYXRlciIsIk1BUF9DT05GSUdfQ0hBTkdFIiwibWFwQ29uZmlnQ2hhbmdlVXBkYXRlciIsIk1BUF9TVFlMRV9DSEFOR0UiLCJtYXBTdHlsZUNoYW5nZVVwZGF0ZXIiLCJMT0FEX01BUF9TVFlMRVMiLCJsb2FkTWFwU3R5bGVzVXBkYXRlciIsIkxPQURfTUFQX1NUWUxFX0VSUiIsImxvYWRNYXBTdHlsZUVyclVwZGF0ZXIiLCJSRUNFSVZFX01BUF9DT05GSUciLCJyZWNlaXZlTWFwQ29uZmlnVXBkYXRlciIsIkxPQURfQ1VTVE9NX01BUF9TVFlMRSIsImxvYWRDdXN0b21NYXBTdHlsZVVwZGF0ZXIiLCJBRERfQ1VTVE9NX01BUF9TVFlMRSIsImFkZEN1c3RvbU1hcFN0eWxlVXBkYXRlciIsIlJFU0VUX01BUF9DT05GSUciLCJyZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlciIsIm1hcFN0eWxlUmVkdWNlckZhY3RvcnkiLCJpbml0aWFsU3RhdGUiLCJJTklUSUFMX01BUF9TVFlMRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O29CQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlBOzs7QUFGQTs7QUFHQTs7OztBQUVBOzs7O0FBY0EsSUFBTUEsb0ZBQ0hDLHNCQUFZQyxJQURULEVBQ2dCQyxxQ0FEaEIsaURBRUhGLHNCQUFZRyxlQUZULEVBRTJCQyxzQ0FGM0IsaURBR0hKLHNCQUFZSyxpQkFIVCxFQUc2QkMsd0NBSDdCLGlEQUlITixzQkFBWU8sZ0JBSlQsRUFJNEJDLHVDQUo1QixpREFLSFIsc0JBQVlTLGVBTFQsRUFLMkJDLHNDQUwzQixpREFNSFYsc0JBQVlXLGtCQU5ULEVBTThCQyx3Q0FOOUIsaURBT0haLHNCQUFZYSxrQkFQVCxFQU84QkMseUNBUDlCLGlEQVFIZCxzQkFBWWUscUJBUlQsRUFRaUNDLDJDQVJqQyxpREFTSGhCLHNCQUFZaUIsb0JBVFQsRUFTZ0NDLDBDQVRoQyxpREFVSGxCLHNCQUFZbUIsZ0JBVlQsRUFVNEJDLCtDQVY1QixrQkFBTjs7QUFhTyxJQUFNQywwREFBeUIsU0FBekJBLHNCQUF5QjtBQUFBLE1BQUNDLFlBQUQsdUVBQWdCLEVBQWhCO0FBQUEsU0FDcEMsaUNBQWN2QixhQUFkLDZCQUFpQ3dCLG1DQUFqQyxFQUF1REQsWUFBdkQsSUFBcUVBLDBCQUFyRSxJQURvQztBQUFBLENBQS9COztrQkFHUUQsd0IiLCJmaWxlIjoibWFwLXN0eWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE4IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtoYW5kbGVBY3Rpb25zfSBmcm9tICdyZWR1eC1hY3Rpb25zJztcblxuLy8gQWN0aW9uc1xuaW1wb3J0IEFjdGlvblR5cGVzIGZyb20gJ2NvbnN0YW50cy9hY3Rpb24tdHlwZXMnO1xuXG5pbXBvcnQge1xuICBJTklUSUFMX01BUF9TVFlMRSxcbiAgaW5wdXRNYXBTdHlsZVVwZGF0ZXIsXG4gIGluaXRNYXBTdHlsZVVwZGF0ZXIsXG4gIG1hcENvbmZpZ0NoYW5nZVVwZGF0ZXIsXG4gIG1hcFN0eWxlQ2hhbmdlVXBkYXRlcixcbiAgbG9hZE1hcFN0eWxlc1VwZGF0ZXIsXG4gIGxvYWRNYXBTdHlsZUVyclVwZGF0ZXIsXG4gIHJlY2VpdmVNYXBDb25maWdVcGRhdGVyLFxuICByZXNldE1hcENvbmZpZ01hcFN0eWxlVXBkYXRlcixcbiAgbG9hZEN1c3RvbU1hcFN0eWxlVXBkYXRlcixcbiAgYWRkQ3VzdG9tTWFwU3R5bGVVcGRhdGVyXG59IGZyb20gJy4vbWFwLXN0eWxlLXVwZGF0ZXJzJztcblxuY29uc3QgYWN0aW9uSGFuZGxlciA9IHtcbiAgW0FjdGlvblR5cGVzLklOSVRdOiBpbml0TWFwU3R5bGVVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuSU5QVVRfTUFQX1NUWUxFXTogaW5wdXRNYXBTdHlsZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5NQVBfQ09ORklHX0NIQU5HRV06IG1hcENvbmZpZ0NoYW5nZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5NQVBfU1RZTEVfQ0hBTkdFXTogbWFwU3R5bGVDaGFuZ2VVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuTE9BRF9NQVBfU1RZTEVTXTogbG9hZE1hcFN0eWxlc1VwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5MT0FEX01BUF9TVFlMRV9FUlJdOiBsb2FkTWFwU3R5bGVFcnJVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUkVDRUlWRV9NQVBfQ09ORklHXTogcmVjZWl2ZU1hcENvbmZpZ1VwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5MT0FEX0NVU1RPTV9NQVBfU1RZTEVdOiBsb2FkQ3VzdG9tTWFwU3R5bGVVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuQUREX0NVU1RPTV9NQVBfU1RZTEVdOiBhZGRDdXN0b21NYXBTdHlsZVVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5SRVNFVF9NQVBfQ09ORklHXTogcmVzZXRNYXBDb25maWdNYXBTdHlsZVVwZGF0ZXJcbn07XG5cbmV4cG9ydCBjb25zdCBtYXBTdHlsZVJlZHVjZXJGYWN0b3J5ID0gKGluaXRpYWxTdGF0ZSA9IHt9KSA9PlxuICBoYW5kbGVBY3Rpb25zKGFjdGlvbkhhbmRsZXIsIHsuLi5JTklUSUFMX01BUF9TVFlMRSwgLi4uaW5pdGlhbFN0YXRlLCBpbml0aWFsU3RhdGV9KTtcblxuZXhwb3J0IGRlZmF1bHQgbWFwU3R5bGVSZWR1Y2VyRmFjdG9yeSgpO1xuIl19