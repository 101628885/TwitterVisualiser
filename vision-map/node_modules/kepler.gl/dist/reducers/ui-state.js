'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uiStateReducerFactory = exports.INITIAL_UI_STATE = exports.DEFAULT_EXPORT_DATA = exports.DEFAULT_EXPORT_IMAGE = exports.DEFAULT_MAP_CONTROLS = exports.DEFAULT_MODAL = exports.DEFAULT_ACTIVE_SIDE_PANEL = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _actionHandler; // Copyright (c) 2018 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var _reduxActions = require('redux-actions');

var _actionTypes = require('../constants/action-types');

var _actionTypes2 = _interopRequireDefault(_actionTypes);

var _defaultSettings = require('../constants/default-settings');

var _uiStateUpdaters = require('./ui-state-updaters');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DEFAULT_ACTIVE_SIDE_PANEL = exports.DEFAULT_ACTIVE_SIDE_PANEL = 'layer';
var DEFAULT_MODAL = exports.DEFAULT_MODAL = _defaultSettings.ADD_DATA_ID;

var DEFAULT_MAP_CONTROLS = exports.DEFAULT_MAP_CONTROLS = {
  visibleLayers: {
    show: true,
    active: false
  },
  mapLegend: {
    show: true,
    active: false
  },
  toggle3d: {
    show: true
  },
  splitMap: {
    show: true
  }
};

var DEFAULT_EXPORT_IMAGE = exports.DEFAULT_EXPORT_IMAGE = {
  // user options
  ratio: _defaultSettings.RATIOS.SCREEN,
  resolution: _defaultSettings.RESOLUTIONS.ONE_X,
  legend: false,
  // exporting state
  imageDataUri: '',
  exporting: false
};

var DEFAULT_EXPORT_DATA = exports.DEFAULT_EXPORT_DATA = {
  selectedDataset: '',
  dataType: _defaultSettings.EXPORT_DATA_TYPE.CSV,
  filtered: true,
  config: false, // no longer used, since we removed the option to export config from modal data export
  data: false // this is used in modal config export
};

var INITIAL_UI_STATE = exports.INITIAL_UI_STATE = {
  readOnly: false,
  activeSidePanel: DEFAULT_ACTIVE_SIDE_PANEL,
  currentModal: DEFAULT_MODAL,
  datasetKeyToRemove: null,
  visibleDropdown: null,
  // export image modal ui
  exportImage: DEFAULT_EXPORT_IMAGE,
  // export data modal ui
  exportData: DEFAULT_EXPORT_DATA,
  // map control panels
  mapControls: DEFAULT_MAP_CONTROLS
};

var actionHandler = (_actionHandler = {}, (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.TOGGLE_SIDE_PANEL, _uiStateUpdaters.toggleSidePanelUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.TOGGLE_MODAL, _uiStateUpdaters.toggleModalUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SHOW_EXPORT_DROPDOWN, _uiStateUpdaters.showExportDropdownUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.HIDE_EXPORT_DROPDOWN, _uiStateUpdaters.hideExportDropdownUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.OPEN_DELETE_MODAL, _uiStateUpdaters.openDeleteModalUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.TOGGLE_MAP_CONTROL, _uiStateUpdaters.toggleMapControlUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_RATIO, _uiStateUpdaters.setRatioUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_RESOLUTION, _uiStateUpdaters.setResolutionUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.TOGGLE_LEGEND, _uiStateUpdaters.toggleLegendUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.START_EXPORTING_IMAGE, _uiStateUpdaters.startExportingImage), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_EXPORT_IMAGE_DATA_URI, _uiStateUpdaters.setExportImageDataUri), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.CLEANUP_EXPORT_IMAGE, _uiStateUpdaters.cleanupExportImage), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_EXPORT_SELECTED_DATASET, _uiStateUpdaters.setExportSelectedDatasetUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_EXPORT_DATA_TYPE, _uiStateUpdaters.setExportDataTypeUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_EXPORT_FILTERED, _uiStateUpdaters.setExportFilteredUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_EXPORT_CONFIG, _uiStateUpdaters.setExportConfigUpdater), (0, _defineProperty3.default)(_actionHandler, _actionTypes2.default.SET_EXPORT_DATA, _uiStateUpdaters.setExportDataUpdater), _actionHandler);

/* Reducer */
var uiStateReducerFactory = exports.uiStateReducerFactory = function uiStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _extends3.default)({}, INITIAL_UI_STATE, initialState, { initialState: initialState }));
};

exports.default = uiStateReducerFactory();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,